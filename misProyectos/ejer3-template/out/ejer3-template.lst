
misProyectos/ejer3-template/out/ejer3-template.elf:     file format elf32-littlearm
misProyectos/ejer3-template/out/ejer3-template.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1a002555

Program Header:
0x70000001 off    0x0000ae68 vaddr 0x1a002e68 paddr 0x1a002e68 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00008078 vaddr 0x10000078 paddr 0x10000078 align 2**15
         filesz 0x00000000 memsz 0x00000184 flags rw-
    LOAD off    0x00008000 vaddr 0x1a000000 paddr 0x1a000000 align 2**15
         filesz 0x00002e70 memsz 0x00002e70 flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x1a002e70 align 2**15
         filesz 0x00000074 memsz 0x00000074 flags rw-
private flags = 5000402: [Version5 EABI] [hard-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002e68  1a000000  1a000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000074  10000000  1a002e70  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2    00000000  10080000  10080000  00010074  2**2
                  CONTENTS
  3 .data_RAM3    00000000  20000000  20000000  00010074  2**2
                  CONTENTS
  4 .data_RAM4    00000000  20008000  20008000  00010074  2**2
                  CONTENTS
  5 .data_RAM5    00000000  2000c000  2000c000  00010074  2**2
                  CONTENTS
  6 .bss          00000184  10000078  10000078  00008078  2**3
                  ALLOC
  7 .bss_RAM2     00000000  10080000  10080000  00010074  2**2
                  CONTENTS
  8 .bss_RAM3     00000000  20000000  20000000  00010074  2**2
                  CONTENTS
  9 .bss_RAM4     00000000  20008000  20008000  00010074  2**2
                  CONTENTS
 10 .bss_RAM5     00000000  2000c000  2000c000  00010074  2**2
                  CONTENTS
 11 .ARM.exidx    00000008  1a002e68  1a002e68  0000ae68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .uninit_RESERVED 00000000  10000000  10000000  00010074  2**2
                  CONTENTS
 13 .noinit_RAM2  00000000  10080000  10080000  00010074  2**2
                  CONTENTS
 14 .noinit_RAM3  00000000  20000000  20000000  00010074  2**2
                  CONTENTS
 15 .noinit_RAM4  00000000  20008000  20008000  00010074  2**2
                  CONTENTS
 16 .noinit_RAM5  00000000  2000c000  2000c000  00010074  2**2
                  CONTENTS
 17 .noinit       00000000  100001fc  100001fc  00010074  2**2
                  CONTENTS
 18 .debug_info   0000ede5  00000000  00000000  00010074  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 00002b3b  00000000  00000000  0001ee59  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_loc    00004aa0  00000000  00000000  00021994  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_aranges 000003a0  00000000  00000000  00026434  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_macro  0000aecb  00000000  00000000  000267d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_line   0000cd52  00000000  00000000  0003169f  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_str    0001e274  00000000  00000000  0003e3f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000de  00000000  00000000  0005c665  2**0
                  CONTENTS, READONLY
 26 .ARM.attributes 00000039  00000000  00000000  0005c743  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00001114  00000000  00000000  0005c77c  2**2
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_ranges 000000a0  00000000  00000000  0005d890  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1a000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10080000 l    d  .data_RAM2	00000000 .data_RAM2
20000000 l    d  .data_RAM3	00000000 .data_RAM3
20008000 l    d  .data_RAM4	00000000 .data_RAM4
2000c000 l    d  .data_RAM5	00000000 .data_RAM5
10000078 l    d  .bss	00000000 .bss
10080000 l    d  .bss_RAM2	00000000 .bss_RAM2
20000000 l    d  .bss_RAM3	00000000 .bss_RAM3
20008000 l    d  .bss_RAM4	00000000 .bss_RAM4
2000c000 l    d  .bss_RAM5	00000000 .bss_RAM5
1a002e68 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
10080000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
20000000 l    d  .noinit_RAM3	00000000 .noinit_RAM3
20008000 l    d  .noinit_RAM4	00000000 .noinit_RAM4
2000c000 l    d  .noinit_RAM5	00000000 .noinit_RAM5
100001fc l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 cr_startup_lpc43xx.c
00000000 l    df *ABS*	00000000 sapi_uart.c
00000000 l    df *ABS*	00000000 crp.c
00000000 l    df *ABS*	00000000 antirreb.c
00000000 l    df *ABS*	00000000 cooperativeOs_isr.c
00000000 l    df *ABS*	00000000 leds.c
00000000 l    df *ABS*	00000000 cooperativeOs_scheduler.c
1a0004e4 l     F .text	00000008 schedulerGoToSleep
00000000 l    df *ABS*	00000000 main.c
1a0005a4 l     F .text	00000014 debounceTec2Task
1a0005b8 l     F .text	00000048 debounceTec1Task
1a000600 l     F .text	0000002c taskBlinkLed
10000084 l     O .bss	00000004 indiceBlinky
10000088 l     O .bss	00000001 ledState
00000000 l    df *ABS*	00000000 sapi_sleep.c
00000000 l    df *ABS*	00000000 sapi_datatypes.c
00000000 l    df *ABS*	00000000 sapi_timer.c
1a000850 l     F .text	00000002 errorOcurred
1a000854 l     F .text	00000002 doNothing
1a002b94 l     O .text	00000030 timer_sd
10000030 l     O .data	00000040 timer_dd
00000000 l    df *ABS*	00000000 sapi_delay.c
00000000 l    df *ABS*	00000000 sapi_tick.c
00000000 l    df *ABS*	00000000 sapi_board.c
00000000 l    df *ABS*	00000000 sapi_gpio.c
1a000e3c l     F .text	00000034 gpioObtainPinConfig
00000000 l    df *ABS*	00000000 board.c
1a0010cc l     F .text	00000040 Board_LED_Init
1a002cfc l     O .text	0000000c gpioLEDBits
00000000 l    df *ABS*	00000000 sysinit.c
00000000 l    df *ABS*	00000000 board_sysinit.c
1a002d18 l     O .text	00000060 pinmuxing
1a002d78 l     O .text	0000000c InitClkStates
00000000 l    df *ABS*	00000000 uart_18xx_43xx.c
1a0013a4 l     F .text	0000002c Chip_UART_GetIndex
1a0013d0 l     F .text	00000048 Chip_UART_ABIntHandler
1a002d84 l     O .text	00000008 UART_PClock
1a002d8c l     O .text	00000008 UART_BClock
1000008c l     O .bss	00000001 ABsyncSts
00000000 l    df *ABS*	00000000 ring_buffer.c
00000000 l    df *ABS*	00000000 chip_18xx_43xx.c
1a001908 l     F .text	00000034 Chip_USB_PllSetup
1a002d94 l     O .text	00000014 usbPLLSetup
00000000 l    df *ABS*	00000000 clock_18xx_43xx.c
1a0019cc l     F .text	000000ac pll_calc_divs
1a001a78 l     F .text	00000104 pll_get_frac
1a001b7c l     F .text	00000024 Chip_Clock_TestMainPLLMultiplier
1a001ba0 l     F .text	0000004c Chip_Clock_FindBaseClock
1a001fd0 l     F .text	00000022 Chip_Clock_GetDivRate
1a002da8 l     O .text	0000006c periph_to_base
10000090 l     O .bss	00000008 audio_usb_pll_freq
00000000 l    df *ABS*	00000000 sysinit_18xx_43xx.c
1a002e20 l     O .text	00000048 InitClkStates
00000000 l    df *ABS*	00000000 timer_18xx_43xx.c
1a00246c l     F .text	0000002c Chip_TIMER_GetClockIndex
00000000 l    df *ABS*	00000000 fpu_init.c
00000000 l    df *ABS*	00000000 gpio_18xx_43xx.c
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 
1a080000 l       *ABS*	00000000 __top_MFlashA512
1a002e70 l       .ARM.exidx	00000000 __exidx_end
1a002e70 l       .ARM.exidx	00000000 _etext
20008000 l       *ABS*	00000000 __top_RamAHB32
1a002e68 l       .text	00000000 __exidx_start
20010000 l       *ABS*	00000000 __top_RamAHB_ETB16
10008000 l       *ABS*	00000000 __top_RamLoc32
2000c000 l       *ABS*	00000000 __top_RamAHB16
1008a000 l       *ABS*	00000000 __top_RamLoc40
100001fc l       .bss	00000000 _pvHeapStart
1b080000 l       *ABS*	00000000 __top_MFlashB512
1a001c9c g     F .text	0000001c Chip_Clock_GetDividerSource
10000018 g     O .data	00000008 periodoActivo
1a002630 g     F .text	0000002e .hidden __gnu_uldivmod_helper
1a000ab8 g     F .text	00000040 TIMER2_IRQHandler
1a000194  w    F .text	00000002 DebugMon_Handler
1a0001a0  w    F .text	00000002 RIT_IRQHandler
1a000964 g     F .text	00000040 Timer_DeInit
1a0001a0  w    F .text	00000002 ADCHS_IRQHandler
1a002664 g     F .text	0000029c .hidden __divdi3
1a000114 g       .text	00000000 __section_table_start
1a0001a0  w    F .text	00000002 FLASH_EEPROM_IRQHandler
1a0001a0  w    F .text	00000002 I2C0_IRQHandler
1a0006f8 g     F .text	00000044 uartReadByte
1a00193c g     F .text	00000034 Chip_USB0_Init
1a0014a8 g     F .text	00000010 Chip_UART_CheckBusy
1a000c40 g     F .text	0000003e delayRead
1a000180  w    F .text	00000002 HardFault_Handler
1a00173c g     F .text	0000000c Chip_UART_GetABEOStatus
1a000000 g       *ABS*	00000000 __vectors_start__
1a001850 g     F .text	00000034 RingBuffer_Pop
1a001178 g     F .text	00000014 Board_UARTPutSTR
1a0020a0 g     F .text	0000001a Chip_Clock_DisableBaseClock
1a000d28 g     F .text	00000024 SysTick_Handler
1a001524 g     F .text	00000044 Chip_UART_SetBaud
1a001e0c g     F .text	0000009c Chip_Clock_SetupMainPLLMult
1a0001a0  w    F .text	00000002 SDIO_IRQHandler
1a00115c g     F .text	0000001c Board_UARTGetChar
1a0001a0  w    F .text	00000002 ATIMER_IRQHandler
1a000198  w    F .text	00000002 PendSV_Handler
1a00017c  w    F .text	00000002 NMI_Handler
1a000150 g       .text	00000000 __data_section_table_end
1a0001a0  w    F .text	00000002 I2C1_IRQHandler
1a0001a0  w    F .text	00000002 UART1_IRQHandler
1a0001a0  w    F .text	00000002 GPIO5_IRQHandler
1a000560 g     F .text	00000040 schedulerDispatchTasks
1a0001a0  w    F .text	00000002 CAN1_IRQHandler
1a0022b4 g     F .text	00000014 Chip_Clock_EnablePLL
53ff5312 g       *ABS*	00000000 __valid_user_code_checksum
1a001298 g     F .text	00000028 Board_SSP_Init
1a0001a0  w    F .text	00000002 USB1_IRQHandler
1a0001a0  w    F .text	00000002 I2S0_IRQHandler
1a00076c g     F .text	00000084 waitForReceiveStringOrTimeout
1a000af8 g     F .text	00000040 TIMER3_IRQHandler
1a002108 g     F .text	0000000c Chip_Clock_GetBaseClocktHz
1a000178 g     F .text	00000002 UART0_IRQHandler
1a0001c0 g     F .text	00000012 bss_init
1a0024c8 g     F .text	0000002a Chip_TIMER_ExtMatchControlSet
1a00160c g     F .text	0000000e Chip_UART_ReadRB
1a0024b0 g     F .text	00000018 Chip_TIMER_Reset
1a002b6c g     F .text	00000016 memcpy
1a0001a0  w    F .text	00000002 SGPIO_IRQHandler
1a0024a4 g     F .text	0000000c Chip_TIMER_DeInit
1a002274 g     F .text	00000040 Chip_Clock_SetupPLL
1a0025d0 g     F .text	00000000 .hidden __aeabi_uldivmod
10000020 g     O .data	00000001 ledActivo
100001fc g       .noinit	00000000 _noinit
1a00082c g     F .text	00000018 uartWriteString
100001f8 g     O .bss	00000004 SystemCoreClock
1a001418 g     F .text	00000050 Chip_UART_Init
1a0001a0  w    F .text	00000002 ADC0_IRQHandler
1a0017c4 g     F .text	0000008a RingBuffer_InsertMult
1a000c20 g     F .text	00000020 delayConfig
1a000458 g     F .text	0000003c ActualizarFrecuenciaParpadeo
1a00018c  w    F .text	00000002 UsageFault_Handler
1a0021f8 g     F .text	0000004c Chip_Clock_GetRate
1a0001a0  w    F .text	00000002 GPIO6_IRQHandler
100001e8 g     O .bss	00000008 tickCounter
1a001324 g     F .text	00000074 Board_SetupClocking
1a002464 g     F .text	00000008 Chip_SystemInit
1a002d14 g     O .text	00000004 ExtRateIn
1a0001a0  w    F .text	00000002 IntDefaultHandler
1a000300 g       .text	00000000 __CRP_WORD_END__
1a000d1c g     F .text	0000000c tickWrite
1a002550 g     F .text	00000002 Chip_GPIO_DeInit
1a0004ec g     F .text	00000040 schedulerAddTask
1a0001a0  w    F .text	00000002 GPIO1_IRQHandler
1a000c9c g     F .text	00000074 tickConfig
1a001970 g     F .text	00000048 Chip_USB1_Init
1a0001a0  w    F .text	00000002 SSP0_IRQHandler
1a000e70 g     F .text	00000194 gpioConfig
1a0002fc g     O .text	00000004 CRP_WORD
1a002450 g     F .text	00000014 Chip_SetupIrcClocking
1a002900 g     F .text	0000026a .hidden __udivdi3
1a0001a0  w    F .text	00000002 ADC1_IRQHandler
10000080 g     O .bss	00000001 errorCode
1a001790 g     F .text	00000032 RingBuffer_Insert
1a001220 g     F .text	00000028 Board_Init
1a000114 g       .text	00000000 __data_section_table
1a0001a0  w    F .text	00000002 RTC_IRQHandler
100001fc g       .bss	00000000 _ebss
1a000a40 g     F .text	0000003c TIMER0_IRQHandler
1a0001a0  w    F .text	00000002 SPI_IRQHandler
1a0001a0  w    F .text	00000002 LCD_IRQHandler
1a001bec g     F .text	0000004c Chip_Clock_EnableCrystal
1a000d4c g     F .text	000000ee boardConfig
10000000 g     O .data	00000018 periodos
1a0001a4 g     F .text	0000001a data_init
10000098 g     O .bss	00000030 antirreb_tecla2
1a000a7c g     F .text	0000003c TIMER1_IRQHandler
1a001c48 g     F .text	00000054 Chip_Clock_SetDivider
10000024 g     O .data	00000006 leds
1a000844 g     F .text	00000002 UART2_IRQHandler
1a001f64 g     F .text	0000006c Chip_Clock_GetMainPLLHz
1a001468 g     F .text	0000001c Chip_UART_DeInit
1a00084c g     F .text	00000004 sAPI_NullFuncPtr
1a00073c g     F .text	00000030 uartWriteByte
1a0010b4 g     F .text	00000016 gpioToggle
1a0001a0  w    F .text	00000002 GPIO2_IRQHandler
1a001c38 g     F .text	00000010 Chip_Clock_DisableCrystal
1a0021d0 g     F .text	00000014 Chip_Clock_StartPowerDown
1a000858 g     F .text	0000010c Timer_Init
1a000448 g     F .text	00000010 schedulerStart
1a0009a4 g     F .text	00000008 Timer_microsecondsToTicks
1a0020e0 g     F .text	00000026 Chip_Clock_GetBaseClock
1a0022dc g     F .text	0000000e Chip_Clock_GetPLLStatus
1a001568 g     F .text	00000024 Chip_UART_RXIntHandlerRB
1a0015c8 g     F .text	00000042 Chip_UART_SendRB
10000078 g       .bss	00000000 _bss
1a000494 g     F .text	00000050 ActualizarLedActivo
1a0001a0  w    F .text	00000002 I2S1_IRQHandler
1a00052c g     F .text	00000034 schedulerDeleteTask
1a001ea8 g     F .text	000000bc Chip_Clock_SetupMainPLLHz
1a00254c g     F .text	00000002 Chip_GPIO_Init
1a002d10 g     O .text	00000004 OscRateIn
1a001248 g     F .text	00000024 Board_I2C_Init
100001fc g       .noinit	00000000 _end_noinit
10008000 g       *ABS*	00000000 _vStackTop
1a0011fc g     F .text	00000024 Board_ENET_GetMacADDR
1a000b38 g     F .text	00000052 delayInaccurate
1a0001a0  w    F .text	00000002 SSP1_IRQHandler
1a002498 g     F .text	0000000c Chip_TIMER_Init
1a0020bc g     F .text	00000022 Chip_Clock_IsBaseClockEnabled
1a000178 g       .text	00000000 __bss_section_table_end
1a00204c g     F .text	00000038 Chip_Clock_GetBaseClockOpts
1a000690 g     F .text	00000004 sleepUntilNextInterrupt
1a002660  w    F .text	00000002 .hidden __aeabi_ldiv0
1a001884 g     F .text	00000082 RingBuffer_PopMult
1000007c g     O .bss	00000004 ledIndice
1a0001a0  w    F .text	00000002 USB0_IRQHandler
1a00219c g     F .text	00000034 Chip_Clock_Disable
1a0001a0  w    F .text	00000002 GPIO3_IRQHandler
100000c8 g     O .bss	00000030 antirreb_tecla1
1a0009e4 g     F .text	00000044 Timer_DisableCompareMatch
1a001148 g     F .text	00000014 Board_UARTPutChar
1a001484 g     F .text	00000022 Chip_UART_Send
1a0001a0  w    F .text	00000002 SCT_IRQHandler
1a002244 g     F .text	00000030 Chip_Clock_GetEMCRate
1a00161c g     F .text	00000036 Chip_UART_IRQRBHandler
1a001cb8 g     F .text	0000001c Chip_Clock_GetDividerDivisor
1a0002fc g       .text	00000000 __CRP_WORD_START__
1a002b82 g     F .text	00000010 memset
1a000184  w    F .text	00000002 MemManage_Handler
1a00062c g     F .text	00000064 main
1a0014dc g     F .text	00000022 Chip_UART_Read
1a0001a0  w    F .text	00000002 WDT_IRQHandler
1a000190  w    F .text	00000002 SVC_Handler
1a0003ec g     F .text	0000003c schedulerUpdate
1a0009ac g     F .text	00000038 Timer_EnableCompareMatch
1a00243c g     F .text	00000014 Chip_SetupXtalClocking
1a0011e4 g     F .text	00000016 Board_LED_Toggle
1a0001a0  w    F .text	00000002 GPIO7_IRQHandler
1a002114 g     F .text	0000003c Chip_Clock_EnableOpts
1a002bc4 g     O .text	00000136 gpioPinsConfig
1a001cd4 g     F .text	000000b8 Chip_Clock_GetClockInputHz
1a0024f4 g     F .text	00000058 fpuInit
1a0011b4 g     F .text	00000030 Board_LED_Test
1a001d8c g     F .text	00000080 Chip_Clock_CalcMainPLLValue
1a0012d4 g     F .text	0000001c SystemInit
1a0001a0  w    F .text	00000002 SPIFI_IRQHandler
1a000be8 g     F .text	00000038 delay
1a0001a0  w    F .text	00000002 QEI_IRQHandler
1a000150 g       .text	00000000 __bss_section_table
1a002184 g     F .text	00000018 Chip_Clock_RTCEnable
1a001004 g     F .text	00000056 gpioWrite
1a0014b8 g     F .text	00000024 Chip_UART_SendBlocking
1a0012f0 g     F .text	00000034 Board_SetupMuxing
1a001654 g     F .text	000000e8 Chip_UART_SetBaudFDR
1a000d10 g     F .text	0000000c tickRead
100001f0 g     O .bss	00000008 tickRateMS
1a0001a0  w    F .text	00000002 ETH_IRQHandler
10000070 g     O .data	00000004 tickHookFunction
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
1a0007f0 g     F .text	0000003a waitForReceiveStringOrTimeoutBlocking
1a0001a0  w    F .text	00000002 CAN0_IRQHandler
10000000 g       .data	00000000 _data
1a000178 g       .text	00000000 __section_table_end
1a000694 g     F .text	00000064 uartConfig
1a0001a0  w    F .text	00000002 GINT0_IRQHandler
1a000318 g     F .text	000000d2 fsmAntirrebote
1a000300 g     F .text	00000018 Inicializar_fsmAntirrebote
1a0001a0  w    F .text	00000002 DAC_IRQHandler
1a001120 g     F .text	00000028 Board_Debug_Init
10000074 g       .data	00000000 _edata
1a0001a0  w    F .text	00000002 M0SUB_IRQHandler
1a001748 g     F .text	00000038 Chip_UART_ABCmd
1a0005a0 g     F .text	00000002 schedulerReportStatus
1a0022ec g     F .text	00000150 Chip_SetupCoreClock
1a0001a0  w    F .text	00000002 GPIO0_IRQHandler
1a00126c g     F .text	0000002c Board_SDMMC_Init
1a000000 g     O .text	00000114 g_pfnVectors
1a002554 g     F .text	0000007c ResetISR
1a0019b8 g     F .text	00000014 SystemCoreClockUpdate
1a0012c0 g     F .text	00000014 Board_DAC_Init
1a0001a0  w    F .text	00000002 DMA_IRQHandler
1a0001a0  w    F .text	00000002 EVRT_IRQHandler
1a001780 g     F .text	00000010 RingBuffer_Init
1a000b8c g     F .text	0000005a delayInaccurateUs
1a002660  w    F .text	00000002 .hidden __aeabi_idiv0
1a0022c8 g     F .text	00000014 Chip_Clock_DisablePLL
1a0021e4 g     F .text	00000014 Chip_Clock_ClearPowerDown
1a00158c g     F .text	0000003a Chip_UART_TXIntHandlerRB
1a000188  w    F .text	00000002 BusFault_Handler
1a002150 g     F .text	00000034 Chip_Clock_Enable
1a000848 g     F .text	00000002 UART3_IRQHandler
1a000c80 g     F .text	0000001c delayWrite
1a0001a0  w    F .text	00000002 MCPWM_IRQHandler
1a002600 g     F .text	0000002e .hidden __gnu_ldivmod_helper
1a00118c g     F .text	00000028 Board_LED_Set
1a0001a0  w    F .text	00000002 M0APP_IRQHandler
1a00105c g     F .text	00000058 gpioRead
100000f8 g     O .bss	000000f0 schedulerTasks
10000078 g     O .bss	00000004 periodoIndice
1a0001a0  w    F .text	00000002 GINT1_IRQHandler
1a000428 g     F .text	00000020 schedulerInit
1a000a28 g     F .text	00000018 Timer_SetCompareMatch
1a001500 g     F .text	00000024 Chip_UART_ReadBlocking
1a00110c g     F .text	00000014 Board_UART_Init
1a002084 g     F .text	0000001a Chip_Clock_EnableBaseClock
1a001ff4 g     F .text	00000058 Chip_Clock_SetBaseClock
1a0001a0  w    F .text	00000002 GPIO4_IRQHandler
1a001398 g     F .text	0000000c Board_SystemInit



Disassembly of section .text:

1a000000 <g_pfnVectors>:
1a000000:	00 80 00 10 55 25 00 1a 7d 01 00 1a 81 01 00 1a     ....U%..}.......
1a000010:	85 01 00 1a 89 01 00 1a 8d 01 00 1a 12 53 ff 53     .............S.S
	...
1a00002c:	91 01 00 1a 95 01 00 1a 00 00 00 00 99 01 00 1a     ................
1a00003c:	29 0d 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     )...............
1a00004c:	00 00 00 00 a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00005c:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00006c:	a1 01 00 1a 41 0a 00 1a 7d 0a 00 1a b9 0a 00 1a     ....A...}.......
1a00007c:	f9 0a 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00008c:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00009c:	a1 01 00 1a 79 01 00 1a a1 01 00 1a 45 08 00 1a     ....y.......E...
1a0000ac:	49 08 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     I...............
1a0000bc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000cc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000dc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000ec:	a1 01 00 1a 00 00 00 00 a1 01 00 1a a1 01 00 1a     ................
1a0000fc:	a1 01 00 1a 00 00 00 00 a1 01 00 1a a1 01 00 1a     ................
1a00010c:	a1 01 00 1a a1 01 00 1a                             ........

1a000114 <__data_section_table>:
1a000114:	1a002e70 	.word	0x1a002e70
1a000118:	10000000 	.word	0x10000000
1a00011c:	00000074 	.word	0x00000074
1a000120:	1a002e70 	.word	0x1a002e70
1a000124:	10080000 	.word	0x10080000
1a000128:	00000000 	.word	0x00000000
1a00012c:	1a002e70 	.word	0x1a002e70
1a000130:	20000000 	.word	0x20000000
1a000134:	00000000 	.word	0x00000000
1a000138:	1a002e70 	.word	0x1a002e70
1a00013c:	20008000 	.word	0x20008000
1a000140:	00000000 	.word	0x00000000
1a000144:	1a002e70 	.word	0x1a002e70
1a000148:	2000c000 	.word	0x2000c000
1a00014c:	00000000 	.word	0x00000000

1a000150 <__bss_section_table>:
1a000150:	10000078 	.word	0x10000078
1a000154:	00000184 	.word	0x00000184
1a000158:	10080000 	.word	0x10080000
1a00015c:	00000000 	.word	0x00000000
1a000160:	20000000 	.word	0x20000000
1a000164:	00000000 	.word	0x00000000
1a000168:	20008000 	.word	0x20008000
1a00016c:	00000000 	.word	0x00000000
1a000170:	2000c000 	.word	0x2000c000
1a000174:	00000000 	.word	0x00000000

1a000178 <UART0_IRQHandler>:
1a000178:	4770      	bx	lr
1a00017a:	bf00      	nop

1a00017c <NMI_Handler>:
1a00017c:	e7fe      	b.n	1a00017c <NMI_Handler>
1a00017e:	bf00      	nop

1a000180 <HardFault_Handler>:
1a000180:	e7fe      	b.n	1a000180 <HardFault_Handler>
1a000182:	bf00      	nop

1a000184 <MemManage_Handler>:
1a000184:	e7fe      	b.n	1a000184 <MemManage_Handler>
1a000186:	bf00      	nop

1a000188 <BusFault_Handler>:
1a000188:	e7fe      	b.n	1a000188 <BusFault_Handler>
1a00018a:	bf00      	nop

1a00018c <UsageFault_Handler>:
1a00018c:	e7fe      	b.n	1a00018c <UsageFault_Handler>
1a00018e:	bf00      	nop

1a000190 <SVC_Handler>:
1a000190:	e7fe      	b.n	1a000190 <SVC_Handler>
1a000192:	bf00      	nop

1a000194 <DebugMon_Handler>:
1a000194:	e7fe      	b.n	1a000194 <DebugMon_Handler>
1a000196:	bf00      	nop

1a000198 <PendSV_Handler>:
1a000198:	e7fe      	b.n	1a000198 <PendSV_Handler>
1a00019a:	bf00      	nop
1a00019c:	e7fe      	b.n	1a00019c <PendSV_Handler+0x4>
1a00019e:	bf00      	nop

1a0001a0 <ADC0_IRQHandler>:
1a0001a0:	e7fe      	b.n	1a0001a0 <ADC0_IRQHandler>
1a0001a2:	bf00      	nop

1a0001a4 <data_init>:
1a0001a4:	b410      	push	{r4}
1a0001a6:	2300      	movs	r3, #0
1a0001a8:	e004      	b.n	1a0001b4 <data_init+0x10>
1a0001aa:	6804      	ldr	r4, [r0, #0]
1a0001ac:	600c      	str	r4, [r1, #0]
1a0001ae:	3304      	adds	r3, #4
1a0001b0:	3004      	adds	r0, #4
1a0001b2:	3104      	adds	r1, #4
1a0001b4:	4293      	cmp	r3, r2
1a0001b6:	d3f8      	bcc.n	1a0001aa <data_init+0x6>
1a0001b8:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0001bc:	4770      	bx	lr
1a0001be:	bf00      	nop

1a0001c0 <bss_init>:
1a0001c0:	2300      	movs	r3, #0
1a0001c2:	e003      	b.n	1a0001cc <bss_init+0xc>
1a0001c4:	2200      	movs	r2, #0
1a0001c6:	6002      	str	r2, [r0, #0]
1a0001c8:	3304      	adds	r3, #4
1a0001ca:	3004      	adds	r0, #4
1a0001cc:	428b      	cmp	r3, r1
1a0001ce:	d3f9      	bcc.n	1a0001c4 <bss_init+0x4>
1a0001d0:	4770      	bx	lr
1a0001d2:	bf00      	nop
1a0001d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000200:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000204:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000208:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000210:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000214:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000218:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000220:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000224:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000228:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000230:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000234:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000238:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000240:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000244:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000248:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000250:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000254:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000258:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000260:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000264:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000268:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000270:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000274:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000278:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000280:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000284:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000288:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000290:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000294:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000298:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ac:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a0002fc <CRP_WORD>:
1a0002fc:	ffff ffff                                   ....

1a000300 <Inicializar_fsmAntirrebote>:
 *
 */

void Inicializar_fsmAntirrebote (antirreb_t*antirreb, gpioMap_t tecla_asigada ){

	antirreb->estado = BUTTON_UP;
1a000300:	2300      	movs	r3, #0
1a000302:	7003      	strb	r3, [r0, #0]
	antirreb->t = TECLA_SUELTA;
1a000304:	2301      	movs	r3, #1
1a000306:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
	antirreb->tiempo_ventana = ANTIRREBOTE_DELAY;
1a00030a:	2228      	movs	r2, #40	; 0x28
1a00030c:	2300      	movs	r3, #0
1a00030e:	e9c0 2308 	strd	r2, r3, [r0, #32]
	antirreb->tecla_pin = tecla_asigada;
1a000312:	f880 1028 	strb.w	r1, [r0, #40]	; 0x28
1a000316:	4770      	bx	lr

1a000318 <fsmAntirrebote>:
 *
 *
 *
 */

void fsmAntirrebote (antirreb_t*antirreb){
1a000318:	b538      	push	{r3, r4, r5, lr}
1a00031a:	4604      	mov	r4, r0

	bool_t tecValue = TECLA_ARRIBA;


	switch(antirreb->estado)
1a00031c:	7803      	ldrb	r3, [r0, #0]
1a00031e:	2b03      	cmp	r3, #3
1a000320:	d85e      	bhi.n	1a0003e0 <fsmAntirrebote+0xc8>
1a000322:	e8df f003 	tbb	[pc, r3]
1a000326:	1a02      	.short	0x1a02
1a000328:	4932      	.short	0x4932
	{

	case BUTTON_UP:
		tecValue = gpioRead( antirreb->tecla_pin );
1a00032a:	f890 0028 	ldrb.w	r0, [r0, #40]	; 0x28
1a00032e:	f000 fe95 	bl	1a00105c <gpioRead>
		if(tecValue == TECLA_ARRIBA){
1a000332:	2801      	cmp	r0, #1
1a000334:	d102      	bne.n	1a00033c <fsmAntirrebote+0x24>
			antirreb->estado = BUTTON_UP;
1a000336:	2300      	movs	r3, #0
1a000338:	7023      	strb	r3, [r4, #0]
1a00033a:	bd38      	pop	{r3, r4, r5, pc}
		}
		else if (tecValue == TECLA_ABAJO)
1a00033c:	2800      	cmp	r0, #0
1a00033e:	d153      	bne.n	1a0003e8 <fsmAntirrebote+0xd0>
		{
			antirreb->estado = BUTTON_FALLING;
1a000340:	4625      	mov	r5, r4
1a000342:	2301      	movs	r3, #1
1a000344:	f805 3b08 	strb.w	r3, [r5], #8
			delayConfig(&antirreb->delay, antirreb->tiempo_ventana);
1a000348:	4628      	mov	r0, r5
1a00034a:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
1a00034e:	f000 fc67 	bl	1a000c20 <delayConfig>
			/* para que el delay arranque hay que leerlo*/
			delayRead(&antirreb->delay);
1a000352:	4628      	mov	r0, r5
1a000354:	f000 fc74 	bl	1a000c40 <delayRead>
1a000358:	bd38      	pop	{r3, r4, r5, pc}

		break;
	case BUTTON_FALLING:

		/* Si el tiempo del delay expiró, paso a leer el estado del pin */
		if (delayRead(&antirreb->delay)){
1a00035a:	3008      	adds	r0, #8
1a00035c:	f000 fc70 	bl	1a000c40 <delayRead>
1a000360:	b180      	cbz	r0, 1a000384 <fsmAntirrebote+0x6c>
			tecValue = gpioRead( antirreb->tecla_pin );
1a000362:	f894 0028 	ldrb.w	r0, [r4, #40]	; 0x28
1a000366:	f000 fe79 	bl	1a00105c <gpioRead>
			if(tecValue == TECLA_ARRIBA){
1a00036a:	2801      	cmp	r0, #1
1a00036c:	d102      	bne.n	1a000374 <fsmAntirrebote+0x5c>
				antirreb->estado = BUTTON_UP;
1a00036e:	2300      	movs	r3, #0
1a000370:	7023      	strb	r3, [r4, #0]
1a000372:	bd38      	pop	{r3, r4, r5, pc}
			}
			else if(tecValue == TECLA_ABAJO){
1a000374:	2800      	cmp	r0, #0
1a000376:	d137      	bne.n	1a0003e8 <fsmAntirrebote+0xd0>
				antirreb->estado = BUTTON_DOWN;
1a000378:	2302      	movs	r3, #2
1a00037a:	7023      	strb	r3, [r4, #0]
				antirreb->t = TECLA_PRESIONADA;
1a00037c:	2300      	movs	r3, #0
1a00037e:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
1a000382:	bd38      	pop	{r3, r4, r5, pc}
			}

		}
		else{
			antirreb->estado = BUTTON_FALLING;
1a000384:	2301      	movs	r3, #1
1a000386:	7023      	strb	r3, [r4, #0]
1a000388:	bd38      	pop	{r3, r4, r5, pc}
		}
		break;
	case  BUTTON_DOWN:

		tecValue = gpioRead( antirreb->tecla_pin );
1a00038a:	f890 0028 	ldrb.w	r0, [r0, #40]	; 0x28
1a00038e:	f000 fe65 	bl	1a00105c <gpioRead>
		if(tecValue == TECLA_ABAJO){
1a000392:	b910      	cbnz	r0, 1a00039a <fsmAntirrebote+0x82>
			antirreb->estado = BUTTON_DOWN;
1a000394:	2302      	movs	r3, #2
1a000396:	7023      	strb	r3, [r4, #0]
1a000398:	bd38      	pop	{r3, r4, r5, pc}
		}
		else if (tecValue == TECLA_ARRIBA)
1a00039a:	2801      	cmp	r0, #1
1a00039c:	d124      	bne.n	1a0003e8 <fsmAntirrebote+0xd0>
		{
			antirreb->estado = BUTTON_RAISING;
1a00039e:	4625      	mov	r5, r4
1a0003a0:	2303      	movs	r3, #3
1a0003a2:	f805 3b08 	strb.w	r3, [r5], #8
			delayConfig(&antirreb->delay, antirreb->tiempo_ventana);
1a0003a6:	4628      	mov	r0, r5
1a0003a8:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
1a0003ac:	f000 fc38 	bl	1a000c20 <delayConfig>
			/* para que el delay arranque hay que leerlo*/
			delayRead(&antirreb->delay);
1a0003b0:	4628      	mov	r0, r5
1a0003b2:	f000 fc45 	bl	1a000c40 <delayRead>
1a0003b6:	bd38      	pop	{r3, r4, r5, pc}

	case BUTTON_RAISING:


		/* Si el tiempo del delay expiró, paso a leer el estado del pin */
		if (delayRead(&antirreb->delay)){
1a0003b8:	3008      	adds	r0, #8
1a0003ba:	f000 fc41 	bl	1a000c40 <delayRead>
1a0003be:	b160      	cbz	r0, 1a0003da <fsmAntirrebote+0xc2>
			tecValue = gpioRead( antirreb->tecla_pin );
1a0003c0:	f894 0028 	ldrb.w	r0, [r4, #40]	; 0x28
1a0003c4:	f000 fe4a 	bl	1a00105c <gpioRead>
			if(tecValue == TECLA_ABAJO){
1a0003c8:	b910      	cbnz	r0, 1a0003d0 <fsmAntirrebote+0xb8>
				antirreb->estado = BUTTON_DOWN;
1a0003ca:	2302      	movs	r3, #2
1a0003cc:	7023      	strb	r3, [r4, #0]
1a0003ce:	bd38      	pop	{r3, r4, r5, pc}
			}
			else if(tecValue == TECLA_ARRIBA){
1a0003d0:	2801      	cmp	r0, #1
1a0003d2:	d109      	bne.n	1a0003e8 <fsmAntirrebote+0xd0>
				antirreb->estado = BUTTON_UP;
1a0003d4:	2300      	movs	r3, #0
1a0003d6:	7023      	strb	r3, [r4, #0]
1a0003d8:	bd38      	pop	{r3, r4, r5, pc}
			}

		}
		else{
			antirreb->estado = BUTTON_RAISING;
1a0003da:	2303      	movs	r3, #3
1a0003dc:	7023      	strb	r3, [r4, #0]
1a0003de:	bd38      	pop	{r3, r4, r5, pc}
		}
		break;

	default:
		Inicializar_fsmAntirrebote(antirreb, antirreb->tecla_pin);
1a0003e0:	f894 1028 	ldrb.w	r1, [r4, #40]	; 0x28
1a0003e4:	f7ff ff8c 	bl	1a000300 <Inicializar_fsmAntirrebote>
1a0003e8:	bd38      	pop	{r3, r4, r5, pc}
1a0003ea:	bf00      	nop

1a0003ec <schedulerUpdate>:

   int32_t index;
   //serialDebugPrintLnString( "schedulerUpdate." );

   // NOTE: calculations are in *TICKS* (not milliseconds)
   for( index = 0; index < SCHEDULER_MAX_TASKS; index++ ){
1a0003ec:	2300      	movs	r3, #0
1a0003ee:	e015      	b.n	1a00041c <schedulerUpdate+0x30>
      // Check if there is a task at this location
      if( schedulerTasks[index].pTask ){
1a0003f0:	011a      	lsls	r2, r3, #4
1a0003f2:	490c      	ldr	r1, [pc, #48]	; (1a000424 <schedulerUpdate+0x38>)
1a0003f4:	588a      	ldr	r2, [r1, r2]
1a0003f6:	b182      	cbz	r2, 1a00041a <schedulerUpdate+0x2e>
         if( --schedulerTasks[index].delay <= 0 ){
1a0003f8:	eb01 1103 	add.w	r1, r1, r3, lsl #4
1a0003fc:	684a      	ldr	r2, [r1, #4]
1a0003fe:	3a01      	subs	r2, #1
1a000400:	604a      	str	r2, [r1, #4]
1a000402:	2a00      	cmp	r2, #0
1a000404:	dc09      	bgt.n	1a00041a <schedulerUpdate+0x2e>
            // The task is due to run
            schedulerTasks[index].runMe += 1; // Inc. the 'runMe' flag
1a000406:	460a      	mov	r2, r1
1a000408:	68c9      	ldr	r1, [r1, #12]
1a00040a:	3101      	adds	r1, #1
1a00040c:	60d1      	str	r1, [r2, #12]
            if( schedulerTasks[index].period ){
1a00040e:	6892      	ldr	r2, [r2, #8]
1a000410:	b11a      	cbz	r2, 1a00041a <schedulerUpdate+0x2e>
               // Schedule regular tasks to run again
               schedulerTasks[index].delay = schedulerTasks[index].period;
1a000412:	4904      	ldr	r1, [pc, #16]	; (1a000424 <schedulerUpdate+0x38>)
1a000414:	eb01 1103 	add.w	r1, r1, r3, lsl #4
1a000418:	604a      	str	r2, [r1, #4]

   int32_t index;
   //serialDebugPrintLnString( "schedulerUpdate." );

   // NOTE: calculations are in *TICKS* (not milliseconds)
   for( index = 0; index < SCHEDULER_MAX_TASKS; index++ ){
1a00041a:	3301      	adds	r3, #1
1a00041c:	2b0e      	cmp	r3, #14
1a00041e:	dde7      	ble.n	1a0003f0 <schedulerUpdate+0x4>
            }
         }
      }
   }
   return 0;
}
1a000420:	2000      	movs	r0, #0
1a000422:	4770      	bx	lr
1a000424:	100000f8 	.word	0x100000f8

1a000428 <schedulerInit>:
schedulerInit()
Scheduler initialization function. Prepares scheduler
data structures.
Must call this function before using the scheduler.
-*------------------------------------------------------------------*/
void schedulerInit( void ){
1a000428:	b510      	push	{r4, lr}

   uint32_t i;
   for( i = 0; i < SCHEDULER_MAX_TASKS; i++ ){
1a00042a:	2400      	movs	r4, #0
1a00042c:	e003      	b.n	1a000436 <schedulerInit+0xe>
      schedulerDeleteTask(i);
1a00042e:	4620      	mov	r0, r4
1a000430:	f000 f87c 	bl	1a00052c <schedulerDeleteTask>
Must call this function before using the scheduler.
-*------------------------------------------------------------------*/
void schedulerInit( void ){

   uint32_t i;
   for( i = 0; i < SCHEDULER_MAX_TASKS; i++ ){
1a000434:	3401      	adds	r4, #1
1a000436:	2c0e      	cmp	r4, #14
1a000438:	d9f9      	bls.n	1a00042e <schedulerInit+0x6>
      schedulerDeleteTask(i);
   }
   /* Reset the global error variable
      - schedulerDelete_Task() will generate an error code,
        (because the task array is empty) */
   errorCode = 0;
1a00043a:	2200      	movs	r2, #0
1a00043c:	4b01      	ldr	r3, [pc, #4]	; (1a000444 <schedulerInit+0x1c>)
1a00043e:	701a      	strb	r2, [r3, #0]
1a000440:	bd10      	pop	{r4, pc}
1a000442:	bf00      	nop
1a000444:	10000080 	.word	0x10000080

1a000448 <schedulerStart>:
Starts the scheduler, by enabling timer interrupts.
NOTE: Usually called after all regular tasks are added,
to keep the tasks synchronized.
NOTE: ONLY THE SCHEDULER INTERRUPT SHOULD BE ENABLED!!!
-*------------------------------------------------------------------*/
void schedulerStart( tick_t tickRateMs ){
1a000448:	b508      	push	{r3, lr}
      El tick hook es simplemente una función que se ejecutará períodicamente
      con cada interrupción de Tick, este nombre se refiere a una función
      "enganchada" a una interrupción */

   // Inicializar el conteo de Ticks con resolución de 1ms, con tickHook
   if( tickConfig( tickRateMs, schedulerUpdate ) ){
1a00044a:	4a02      	ldr	r2, [pc, #8]	; (1a000454 <schedulerStart+0xc>)
1a00044c:	f000 fc26 	bl	1a000c9c <tickConfig>
1a000450:	bd08      	pop	{r3, pc}
1a000452:	bf00      	nop
1a000454:	1a0003ed 	.word	0x1a0003ed

1a000458 <ActualizarFrecuenciaParpadeo>:
 *
 */

void ActualizarFrecuenciaParpadeo()
{
	if (antirreb_tecla1.t == TECLA_PRESIONADA){
1a000458:	4b0b      	ldr	r3, [pc, #44]	; (1a000488 <ActualizarFrecuenciaParpadeo+0x30>)
1a00045a:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
1a00045e:	b98b      	cbnz	r3, 1a000484 <ActualizarFrecuenciaParpadeo+0x2c>
		periodoIndice++;
1a000460:	4a0a      	ldr	r2, [pc, #40]	; (1a00048c <ActualizarFrecuenciaParpadeo+0x34>)
1a000462:	6813      	ldr	r3, [r2, #0]
1a000464:	3301      	adds	r3, #1
1a000466:	6013      	str	r3, [r2, #0]
		if (periodoIndice >= PERIODOS_L)
1a000468:	2b02      	cmp	r3, #2
1a00046a:	d902      	bls.n	1a000472 <ActualizarFrecuenciaParpadeo+0x1a>
			periodoIndice = 0;
1a00046c:	2200      	movs	r2, #0
1a00046e:	4b07      	ldr	r3, [pc, #28]	; (1a00048c <ActualizarFrecuenciaParpadeo+0x34>)
1a000470:	601a      	str	r2, [r3, #0]

		periodoActivo = periodos[periodoIndice];
1a000472:	4a07      	ldr	r2, [pc, #28]	; (1a000490 <ActualizarFrecuenciaParpadeo+0x38>)
1a000474:	4b05      	ldr	r3, [pc, #20]	; (1a00048c <ActualizarFrecuenciaParpadeo+0x34>)
1a000476:	681b      	ldr	r3, [r3, #0]
1a000478:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
1a00047c:	e9d3 0100 	ldrd	r0, r1, [r3]
1a000480:	e9c2 0106 	strd	r0, r1, [r2, #24]
1a000484:	4770      	bx	lr
1a000486:	bf00      	nop
1a000488:	100000c8 	.word	0x100000c8
1a00048c:	10000078 	.word	0x10000078
1a000490:	10000000 	.word	0x10000000

1a000494 <ActualizarLedActivo>:
 *
 */

void ActualizarLedActivo()
{
	if (antirreb_tecla2.t == TECLA_PRESIONADA){
1a000494:	4b10      	ldr	r3, [pc, #64]	; (1a0004d8 <ActualizarLedActivo+0x44>)
1a000496:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
1a00049a:	b9db      	cbnz	r3, 1a0004d4 <ActualizarLedActivo+0x40>
 *
 *
 */

void ActualizarLedActivo()
{
1a00049c:	b510      	push	{r4, lr}
	if (antirreb_tecla2.t == TECLA_PRESIONADA){
		ledIndice++;
1a00049e:	4a0f      	ldr	r2, [pc, #60]	; (1a0004dc <ActualizarLedActivo+0x48>)
1a0004a0:	6853      	ldr	r3, [r2, #4]
1a0004a2:	3301      	adds	r3, #1
1a0004a4:	6053      	str	r3, [r2, #4]
		if (ledIndice >= LEDS_L)
1a0004a6:	2b05      	cmp	r3, #5
1a0004a8:	d902      	bls.n	1a0004b0 <ActualizarLedActivo+0x1c>
			ledIndice = 0;
1a0004aa:	2200      	movs	r2, #0
1a0004ac:	4b0b      	ldr	r3, [pc, #44]	; (1a0004dc <ActualizarLedActivo+0x48>)
1a0004ae:	605a      	str	r2, [r3, #4]

		gpioWrite(ledActivo, 0);	// apago el led anterior
1a0004b0:	4c0b      	ldr	r4, [pc, #44]	; (1a0004e0 <ActualizarLedActivo+0x4c>)
1a0004b2:	f894 0020 	ldrb.w	r0, [r4, #32]
1a0004b6:	2100      	movs	r1, #0
1a0004b8:	f000 fda4 	bl	1a001004 <gpioWrite>
		ledActivo = leds[ledIndice];
1a0004bc:	4b07      	ldr	r3, [pc, #28]	; (1a0004dc <ActualizarLedActivo+0x48>)
1a0004be:	685b      	ldr	r3, [r3, #4]
1a0004c0:	4423      	add	r3, r4
1a0004c2:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
1a0004c6:	f884 3020 	strb.w	r3, [r4, #32]


		antirreb_tecla2.t = TECLA_SUELTA;
1a0004ca:	2201      	movs	r2, #1
1a0004cc:	4b02      	ldr	r3, [pc, #8]	; (1a0004d8 <ActualizarLedActivo+0x44>)
1a0004ce:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
1a0004d2:	bd10      	pop	{r4, pc}
1a0004d4:	4770      	bx	lr
1a0004d6:	bf00      	nop
1a0004d8:	10000098 	.word	0x10000098
1a0004dc:	10000078 	.word	0x10000078
1a0004e0:	10000000 	.word	0x10000000

1a0004e4 <schedulerGoToSleep>:
to save power. The next clock tick will return the processor
to the normal operating state.
*** May wish to disable this if using a watchdog ***
*** ADAPT AS REQUIRED FOR YOUR HARDWARE ***
-*------------------------------------------------------------------*/
static void schedulerGoToSleep(){
1a0004e4:	b508      	push	{r3, lr}
   // Se pone el sistema en bajo consumo hasta que ocurra la proxima
   // interrupcion, en este caso la de Tick.
   sleepUntilNextInterrupt();
1a0004e6:	f000 f8d3 	bl	1a000690 <sleepUntilNextInterrupt>
1a0004ea:	bd08      	pop	{r3, pc}

1a0004ec <schedulerAddTask>:
Task will be first executed at T = 300 ticks, then 1300, 2300, etc.
-*------------------------------------------------------------------*/
int32_t schedulerAddTask( sAPI_FuncPtr_t pFunction,
                          const int32_t DELAY,
                          const int32_t PERIOD
                        ){
1a0004ec:	b470      	push	{r4, r5, r6}

   int32_t index = 0;
1a0004ee:	2300      	movs	r3, #0

   // First find a gap in the array (if there is one)
   while( (schedulerTasks[index].pTask != 0) && (index < SCHEDULER_MAX_TASKS) ){
1a0004f0:	e000      	b.n	1a0004f4 <schedulerAddTask+0x8>
      index++;
1a0004f2:	3301      	adds	r3, #1
                        ){

   int32_t index = 0;

   // First find a gap in the array (if there is one)
   while( (schedulerTasks[index].pTask != 0) && (index < SCHEDULER_MAX_TASKS) ){
1a0004f4:	011c      	lsls	r4, r3, #4
1a0004f6:	4d0b      	ldr	r5, [pc, #44]	; (1a000524 <schedulerAddTask+0x38>)
1a0004f8:	592c      	ldr	r4, [r5, r4]
1a0004fa:	b10c      	cbz	r4, 1a000500 <schedulerAddTask+0x14>
1a0004fc:	2b0e      	cmp	r3, #14
1a0004fe:	ddf8      	ble.n	1a0004f2 <schedulerAddTask+0x6>
      index++;
   }

   // Have we reached the end of the list?
   if( index == SCHEDULER_MAX_TASKS ){
1a000500:	2b0f      	cmp	r3, #15
1a000502:	d104      	bne.n	1a00050e <schedulerAddTask+0x22>
      // Task list is full
      // Set the global error variable
      errorCode = 2; // ERROR_schedulerTOO_MANYTasks;
1a000504:	2202      	movs	r2, #2
1a000506:	4b08      	ldr	r3, [pc, #32]	; (1a000528 <schedulerAddTask+0x3c>)
1a000508:	701a      	strb	r2, [r3, #0]
      // Also return an error code
      return SCHEDULER_MAX_TASKS;
1a00050a:	200f      	movs	r0, #15
1a00050c:	e008      	b.n	1a000520 <schedulerAddTask+0x34>
   }

   // If we're here, there is a space in the task array
   schedulerTasks[index].pTask  = pFunction;
1a00050e:	4e05      	ldr	r6, [pc, #20]	; (1a000524 <schedulerAddTask+0x38>)
1a000510:	011d      	lsls	r5, r3, #4
1a000512:	1974      	adds	r4, r6, r5
1a000514:	5170      	str	r0, [r6, r5]
   schedulerTasks[index].delay  = DELAY;
1a000516:	6061      	str	r1, [r4, #4]
   schedulerTasks[index].period = PERIOD;
1a000518:	60a2      	str	r2, [r4, #8]
   schedulerTasks[index].runMe  = 0;
1a00051a:	2200      	movs	r2, #0
1a00051c:	60e2      	str	r2, [r4, #12]

   return index; // return position of task (to allow later deletion)
1a00051e:	4618      	mov	r0, r3
}
1a000520:	bc70      	pop	{r4, r5, r6}
1a000522:	4770      	bx	lr
1a000524:	100000f8 	.word	0x100000f8
1a000528:	10000080 	.word	0x10000080

1a00052c <schedulerDeleteTask>:

taskIndex - The task index. Provided by schedulerAddTask().

RETURN VALUE: RETURN_ERROR or RETURN_NORMAL
-*------------------------------------------------------------------*/
int8_t schedulerDeleteTask( int32_t taskIndex ){
1a00052c:	b430      	push	{r4, r5}

   int8_t returnCode;

   if(schedulerTasks[taskIndex].pTask == 0){
1a00052e:	0103      	lsls	r3, r0, #4
1a000530:	4a09      	ldr	r2, [pc, #36]	; (1a000558 <schedulerDeleteTask+0x2c>)
1a000532:	58d3      	ldr	r3, [r2, r3]
1a000534:	b923      	cbnz	r3, 1a000540 <schedulerDeleteTask+0x14>
      // No task at this location...
      // Set the global error variable
      errorCode = 2; // ERROR_SCH_CANNOT_DELETE_TASK;
1a000536:	2202      	movs	r2, #2
1a000538:	4b08      	ldr	r3, [pc, #32]	; (1a00055c <schedulerDeleteTask+0x30>)
1a00053a:	701a      	strb	r2, [r3, #0]
      // ...also return an error code
      returnCode = -1; // RETURN_ERROR;
1a00053c:	25ff      	movs	r5, #255	; 0xff
1a00053e:	e000      	b.n	1a000542 <schedulerDeleteTask+0x16>
   }
   else{
      returnCode = 0; // RETURN_NORMAL;
1a000540:	2500      	movs	r5, #0
   }
   schedulerTasks[taskIndex].pTask = 0x0000;
1a000542:	4c05      	ldr	r4, [pc, #20]	; (1a000558 <schedulerDeleteTask+0x2c>)
1a000544:	0103      	lsls	r3, r0, #4
1a000546:	18e1      	adds	r1, r4, r3
1a000548:	2200      	movs	r2, #0
1a00054a:	50e2      	str	r2, [r4, r3]
   schedulerTasks[taskIndex].delay = (int32_t)0;
1a00054c:	604a      	str	r2, [r1, #4]
   schedulerTasks[taskIndex].period = (int32_t)0;
1a00054e:	608a      	str	r2, [r1, #8]
   schedulerTasks[taskIndex].runMe = (int8_t)0;
1a000550:	60ca      	str	r2, [r1, #12]
   return returnCode; // return status
}
1a000552:	b268      	sxtb	r0, r5
1a000554:	bc30      	pop	{r4, r5}
1a000556:	4770      	bx	lr
1a000558:	100000f8 	.word	0x100000f8
1a00055c:	10000080 	.word	0x10000080

1a000560 <schedulerDispatchTasks>:
schedulerDispatchTasks()
This is the 'dispatcher' function. When a task (function)
is due to run, schedulerDispatchTasks() will run it.
This function must be called (repeatedly) from the main loop.
-*------------------------------------------------------------------*/
void schedulerDispatchTasks( void ){
1a000560:	b538      	push	{r3, r4, r5, lr}

   int32_t index;
   // Dispatches (runs) the next task (if one is ready)
   for (index = 0; index < SCHEDULER_MAX_TASKS; index++){
1a000562:	2400      	movs	r4, #0
1a000564:	e014      	b.n	1a000590 <schedulerDispatchTasks+0x30>

      if (schedulerTasks[index].runMe > 0){
1a000566:	4b0d      	ldr	r3, [pc, #52]	; (1a00059c <schedulerDispatchTasks+0x3c>)
1a000568:	eb03 1304 	add.w	r3, r3, r4, lsl #4
1a00056c:	68db      	ldr	r3, [r3, #12]
1a00056e:	2b00      	cmp	r3, #0
1a000570:	dd0d      	ble.n	1a00058e <schedulerDispatchTasks+0x2e>

         (*schedulerTasks[index].pTask)(0); // Run the task
1a000572:	4a0a      	ldr	r2, [pc, #40]	; (1a00059c <schedulerDispatchTasks+0x3c>)
1a000574:	0123      	lsls	r3, r4, #4
1a000576:	18d5      	adds	r5, r2, r3
1a000578:	58d3      	ldr	r3, [r2, r3]
1a00057a:	2000      	movs	r0, #0
1a00057c:	4798      	blx	r3
         schedulerTasks[index].runMe -= 1; // Reset/reduce runMe flag
1a00057e:	68eb      	ldr	r3, [r5, #12]
1a000580:	3b01      	subs	r3, #1
1a000582:	60eb      	str	r3, [r5, #12]

         // Periodic tasks will automatically run again
         // - if this is a 'one shot' task, remove it from the array
         if (schedulerTasks[index].period == 0){
1a000584:	68ab      	ldr	r3, [r5, #8]
1a000586:	b913      	cbnz	r3, 1a00058e <schedulerDispatchTasks+0x2e>
            schedulerDeleteTask(index);
1a000588:	4620      	mov	r0, r4
1a00058a:	f7ff ffcf 	bl	1a00052c <schedulerDeleteTask>
-*------------------------------------------------------------------*/
void schedulerDispatchTasks( void ){

   int32_t index;
   // Dispatches (runs) the next task (if one is ready)
   for (index = 0; index < SCHEDULER_MAX_TASKS; index++){
1a00058e:	3401      	adds	r4, #1
1a000590:	2c0e      	cmp	r4, #14
1a000592:	dde8      	ble.n	1a000566 <schedulerDispatchTasks+0x6>
   }

   // Report system status
   schedulerReportStatus();
   // The scheduler enters idle mode at this point32_t
   schedulerGoToSleep();
1a000594:	f7ff ffa6 	bl	1a0004e4 <schedulerGoToSleep>
1a000598:	bd38      	pop	{r3, r4, r5, pc}
1a00059a:	bf00      	nop
1a00059c:	100000f8 	.word	0x100000f8

1a0005a0 <schedulerReportStatus>:
After this the the error code is reset to 0.
This code may be easily adapted to display the last
error 'for ever': this may be appropriate in your
application.
-*------------------------------------------------------------------*/
void schedulerReportStatus( void ){
1a0005a0:	4770      	bx	lr
1a0005a2:	bf00      	nop

1a0005a4 <debounceTec2Task>:
/**
 * @fn void debounceTec2Task (void)
 *
 */

void debounceTec2Task (void) {
1a0005a4:	b508      	push	{r3, lr}


	fsmAntirrebote(&antirreb_tecla2);
1a0005a6:	4803      	ldr	r0, [pc, #12]	; (1a0005b4 <debounceTec2Task+0x10>)
1a0005a8:	f7ff feb6 	bl	1a000318 <fsmAntirrebote>
	ActualizarLedActivo();
1a0005ac:	f7ff ff72 	bl	1a000494 <ActualizarLedActivo>
1a0005b0:	bd08      	pop	{r3, pc}
1a0005b2:	bf00      	nop
1a0005b4:	10000098 	.word	0x10000098

1a0005b8 <debounceTec1Task>:
/**
 * @fn void debounceTec1Task (void)
 *
 */

void debounceTec1Task (void) {
1a0005b8:	b510      	push	{r4, lr}

	fsmAntirrebote(&antirreb_tecla1);
1a0005ba:	4c0d      	ldr	r4, [pc, #52]	; (1a0005f0 <debounceTec1Task+0x38>)
1a0005bc:	4620      	mov	r0, r4
1a0005be:	f7ff feab 	bl	1a000318 <fsmAntirrebote>
	ActualizarFrecuenciaParpadeo();
1a0005c2:	f7ff ff49 	bl	1a000458 <ActualizarFrecuenciaParpadeo>

	if((antirreb_tecla1.t == TECLA_PRESIONADA) && (indiceBlinky < SCHEDULER_MAX_TASKS)) {
1a0005c6:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
1a0005ca:	b983      	cbnz	r3, 1a0005ee <debounceTec1Task+0x36>
1a0005cc:	4b09      	ldr	r3, [pc, #36]	; (1a0005f4 <debounceTec1Task+0x3c>)
1a0005ce:	6818      	ldr	r0, [r3, #0]
1a0005d0:	280e      	cmp	r0, #14
1a0005d2:	dc0c      	bgt.n	1a0005ee <debounceTec1Task+0x36>
		// schedulerTasks[indiceBlinky].delay = periodoActivo;



		schedulerDeleteTask(indiceBlinky);
1a0005d4:	f7ff ffaa 	bl	1a00052c <schedulerDeleteTask>
		indiceBlinky = schedulerAddTask( (sAPI_FuncPtr_t) taskBlinkLed, 0, periodoActivo );
1a0005d8:	4807      	ldr	r0, [pc, #28]	; (1a0005f8 <debounceTec1Task+0x40>)
1a0005da:	2100      	movs	r1, #0
1a0005dc:	4b07      	ldr	r3, [pc, #28]	; (1a0005fc <debounceTec1Task+0x44>)
1a0005de:	681a      	ldr	r2, [r3, #0]
1a0005e0:	f7ff ff84 	bl	1a0004ec <schedulerAddTask>
1a0005e4:	4b03      	ldr	r3, [pc, #12]	; (1a0005f4 <debounceTec1Task+0x3c>)
1a0005e6:	6018      	str	r0, [r3, #0]
		antirreb_tecla1.t = TECLA_SUELTA;
1a0005e8:	2201      	movs	r2, #1
1a0005ea:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
1a0005ee:	bd10      	pop	{r4, pc}
1a0005f0:	100000c8 	.word	0x100000c8
1a0005f4:	10000084 	.word	0x10000084
1a0005f8:	1a000601 	.word	0x1a000601
1a0005fc:	10000018 	.word	0x10000018

1a000600 <taskBlinkLed>:
/**
 * @fn void taskBlinkLed(void)
 *
 */

void taskBlinkLed(void){
1a000600:	b508      	push	{r3, lr}

   if (ledState == ON){
1a000602:	4b08      	ldr	r3, [pc, #32]	; (1a000624 <taskBlinkLed+0x24>)
1a000604:	791b      	ldrb	r3, [r3, #4]
1a000606:	2b01      	cmp	r3, #1
1a000608:	d103      	bne.n	1a000612 <taskBlinkLed+0x12>
      ledState = OFF; // Apago el pin
1a00060a:	2200      	movs	r2, #0
1a00060c:	4b05      	ldr	r3, [pc, #20]	; (1a000624 <taskBlinkLed+0x24>)
1a00060e:	711a      	strb	r2, [r3, #4]
1a000610:	e002      	b.n	1a000618 <taskBlinkLed+0x18>
   }
   else{
      ledState = ON; // Prendo el pin
1a000612:	2201      	movs	r2, #1
1a000614:	4b03      	ldr	r3, [pc, #12]	; (1a000624 <taskBlinkLed+0x24>)
1a000616:	711a      	strb	r2, [r3, #4]
   }

   // Use of digitalWrite
   // gpioWrite( LED3, ledState );
   gpioToggle( ledActivo );
1a000618:	4b03      	ldr	r3, [pc, #12]	; (1a000628 <taskBlinkLed+0x28>)
1a00061a:	7818      	ldrb	r0, [r3, #0]
1a00061c:	f000 fd4a 	bl	1a0010b4 <gpioToggle>
1a000620:	bd08      	pop	{r3, pc}
1a000622:	bf00      	nop
1a000624:	10000084 	.word	0x10000084
1a000628:	10000020 	.word	0x10000020

1a00062c <main>:

/*==================[declaraciones de funciones externas]====================*/

/*==================[funcion principal]======================================*/

int main( void ){
1a00062c:	b508      	push	{r3, lr}



	//Inicializar el hardware, perifericos, puertos, clock, etc.
	boardConfig();
1a00062e:	f000 fb8d 	bl	1a000d4c <boardConfig>

	/* Inicializacion de estructuras antirrebote */
	Inicializar_fsmAntirrebote(&antirreb_tecla1, TEC1);
1a000632:	4811      	ldr	r0, [pc, #68]	; (1a000678 <main+0x4c>)
1a000634:	2124      	movs	r1, #36	; 0x24
1a000636:	f7ff fe63 	bl	1a000300 <Inicializar_fsmAntirrebote>
	Inicializar_fsmAntirrebote(&antirreb_tecla2, TEC2);
1a00063a:	4810      	ldr	r0, [pc, #64]	; (1a00067c <main+0x50>)
1a00063c:	2125      	movs	r1, #37	; 0x25
1a00063e:	f7ff fe5f 	bl	1a000300 <Inicializar_fsmAntirrebote>



	//FUNCION que inicializa el planificador de tareas
	schedulerInit();
1a000642:	f7ff fef1 	bl	1a000428 <schedulerInit>
	//Cargar las tareas del sistema operativo con sus periodicidades
	indiceBlinky = schedulerAddTask( (sAPI_FuncPtr_t) taskBlinkLed, 0, BLINK_TIME_PERIOD );
1a000646:	480e      	ldr	r0, [pc, #56]	; (1a000680 <main+0x54>)
1a000648:	2100      	movs	r1, #0
1a00064a:	2232      	movs	r2, #50	; 0x32
1a00064c:	f7ff ff4e 	bl	1a0004ec <schedulerAddTask>
1a000650:	4b0c      	ldr	r3, [pc, #48]	; (1a000684 <main+0x58>)
1a000652:	6018      	str	r0, [r3, #0]
	schedulerAddTask( (sAPI_FuncPtr_t) debounceTec1Task, DEBOUNCE_TEC1_RETARDO, DEBOUNCE_TEC1_PERIODO );
1a000654:	480c      	ldr	r0, [pc, #48]	; (1a000688 <main+0x5c>)
1a000656:	2101      	movs	r1, #1
1a000658:	2214      	movs	r2, #20
1a00065a:	f7ff ff47 	bl	1a0004ec <schedulerAddTask>
	schedulerAddTask( (sAPI_FuncPtr_t) debounceTec2Task, DEBOUNCE_TEC2_RETARDO, DEBOUNCE_TEC2_PERIODO );
1a00065e:	480b      	ldr	r0, [pc, #44]	; (1a00068c <main+0x60>)
1a000660:	2102      	movs	r1, #2
1a000662:	2214      	movs	r2, #20
1a000664:	f7ff ff42 	bl	1a0004ec <schedulerAddTask>

	//Iniciar el planificador de tareas
	schedulerStart( 1 );
1a000668:	2001      	movs	r0, #1
1a00066a:	2100      	movs	r1, #0
1a00066c:	f7ff feec 	bl	1a000448 <schedulerStart>
	//Lazo infinito

	while(TRUE) {
		//Ejecutar tareas
		schedulerDispatchTasks();
1a000670:	f7ff ff76 	bl	1a000560 <schedulerDispatchTasks>
	}
1a000674:	e7fc      	b.n	1a000670 <main+0x44>
1a000676:	bf00      	nop
1a000678:	100000c8 	.word	0x100000c8
1a00067c:	10000098 	.word	0x10000098
1a000680:	1a000601 	.word	0x1a000601
1a000684:	10000084 	.word	0x10000084
1a000688:	1a0005b9 	.word	0x1a0005b9
1a00068c:	1a0005a5 	.word	0x1a0005a5

1a000690 <sleepUntilNextInterrupt>:
1a000690:	bf30      	wfi
1a000692:	4770      	bx	lr

1a000694 <uartConfig>:
1a000694:	b538      	push	{r3, r4, r5, lr}
1a000696:	460c      	mov	r4, r1
1a000698:	b110      	cbz	r0, 1a0006a0 <uartConfig+0xc>
1a00069a:	2801      	cmp	r0, #1
1a00069c:	d013      	beq.n	1a0006c6 <uartConfig+0x32>
1a00069e:	bd38      	pop	{r3, r4, r5, pc}
1a0006a0:	4d12      	ldr	r5, [pc, #72]	; (1a0006ec <uartConfig+0x58>)
1a0006a2:	4628      	mov	r0, r5
1a0006a4:	f000 feb8 	bl	1a001418 <Chip_UART_Init>
1a0006a8:	4621      	mov	r1, r4
1a0006aa:	4628      	mov	r0, r5
1a0006ac:	f000 ff3a 	bl	1a001524 <Chip_UART_SetBaud>
1a0006b0:	2301      	movs	r3, #1
1a0006b2:	60ab      	str	r3, [r5, #8]
1a0006b4:	65eb      	str	r3, [r5, #92]	; 0x5c
1a0006b6:	4b0e      	ldr	r3, [pc, #56]	; (1a0006f0 <uartConfig+0x5c>)
1a0006b8:	221e      	movs	r2, #30
1a0006ba:	f8c3 2384 	str.w	r2, [r3, #900]	; 0x384
1a0006be:	22d6      	movs	r2, #214	; 0xd6
1a0006c0:	f8c3 2388 	str.w	r2, [r3, #904]	; 0x388
1a0006c4:	bd38      	pop	{r3, r4, r5, pc}
1a0006c6:	4d0b      	ldr	r5, [pc, #44]	; (1a0006f4 <uartConfig+0x60>)
1a0006c8:	4628      	mov	r0, r5
1a0006ca:	f000 fea5 	bl	1a001418 <Chip_UART_Init>
1a0006ce:	4621      	mov	r1, r4
1a0006d0:	4628      	mov	r0, r5
1a0006d2:	f000 ff27 	bl	1a001524 <Chip_UART_SetBaud>
1a0006d6:	2301      	movs	r3, #1
1a0006d8:	60ab      	str	r3, [r5, #8]
1a0006da:	65eb      	str	r3, [r5, #92]	; 0x5c
1a0006dc:	4b04      	ldr	r3, [pc, #16]	; (1a0006f0 <uartConfig+0x5c>)
1a0006de:	221a      	movs	r2, #26
1a0006e0:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
1a0006e4:	22d2      	movs	r2, #210	; 0xd2
1a0006e6:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
1a0006ea:	bd38      	pop	{r3, r4, r5, pc}
1a0006ec:	400c1000 	.word	0x400c1000
1a0006f0:	40086000 	.word	0x40086000
1a0006f4:	400c2000 	.word	0x400c2000

1a0006f8 <uartReadByte>:
1a0006f8:	b110      	cbz	r0, 1a000700 <uartReadByte+0x8>
1a0006fa:	2801      	cmp	r0, #1
1a0006fc:	d00a      	beq.n	1a000714 <uartReadByte+0x1c>
1a0006fe:	e013      	b.n	1a000728 <uartReadByte+0x30>
1a000700:	4b0c      	ldr	r3, [pc, #48]	; (1a000734 <uartReadByte+0x3c>)
1a000702:	695b      	ldr	r3, [r3, #20]
1a000704:	f013 0f01 	tst.w	r3, #1
1a000708:	d010      	beq.n	1a00072c <uartReadByte+0x34>
1a00070a:	4b0a      	ldr	r3, [pc, #40]	; (1a000734 <uartReadByte+0x3c>)
1a00070c:	681b      	ldr	r3, [r3, #0]
1a00070e:	700b      	strb	r3, [r1, #0]
1a000710:	2001      	movs	r0, #1
1a000712:	4770      	bx	lr
1a000714:	4b08      	ldr	r3, [pc, #32]	; (1a000738 <uartReadByte+0x40>)
1a000716:	695b      	ldr	r3, [r3, #20]
1a000718:	f013 0f01 	tst.w	r3, #1
1a00071c:	d008      	beq.n	1a000730 <uartReadByte+0x38>
1a00071e:	4b06      	ldr	r3, [pc, #24]	; (1a000738 <uartReadByte+0x40>)
1a000720:	681b      	ldr	r3, [r3, #0]
1a000722:	700b      	strb	r3, [r1, #0]
1a000724:	2001      	movs	r0, #1
1a000726:	4770      	bx	lr
1a000728:	2001      	movs	r0, #1
1a00072a:	4770      	bx	lr
1a00072c:	2000      	movs	r0, #0
1a00072e:	4770      	bx	lr
1a000730:	2000      	movs	r0, #0
1a000732:	4770      	bx	lr
1a000734:	400c1000 	.word	0x400c1000
1a000738:	400c2000 	.word	0x400c2000

1a00073c <uartWriteByte>:
1a00073c:	b110      	cbz	r0, 1a000744 <uartWriteByte+0x8>
1a00073e:	2801      	cmp	r0, #1
1a000740:	d008      	beq.n	1a000754 <uartWriteByte+0x18>
1a000742:	4770      	bx	lr
1a000744:	4b07      	ldr	r3, [pc, #28]	; (1a000764 <uartWriteByte+0x28>)
1a000746:	695b      	ldr	r3, [r3, #20]
1a000748:	f013 0f20 	tst.w	r3, #32
1a00074c:	d0fa      	beq.n	1a000744 <uartWriteByte+0x8>
1a00074e:	4b05      	ldr	r3, [pc, #20]	; (1a000764 <uartWriteByte+0x28>)
1a000750:	6019      	str	r1, [r3, #0]
1a000752:	4770      	bx	lr
1a000754:	4b04      	ldr	r3, [pc, #16]	; (1a000768 <uartWriteByte+0x2c>)
1a000756:	695b      	ldr	r3, [r3, #20]
1a000758:	f013 0f20 	tst.w	r3, #32
1a00075c:	d0fa      	beq.n	1a000754 <uartWriteByte+0x18>
1a00075e:	4b02      	ldr	r3, [pc, #8]	; (1a000768 <uartWriteByte+0x2c>)
1a000760:	6019      	str	r1, [r3, #0]
1a000762:	4770      	bx	lr
1a000764:	400c1000 	.word	0x400c1000
1a000768:	400c2000 	.word	0x400c2000

1a00076c <waitForReceiveStringOrTimeout>:
1a00076c:	b510      	push	{r4, lr}
1a00076e:	b082      	sub	sp, #8
1a000770:	460c      	mov	r4, r1
1a000772:	780b      	ldrb	r3, [r1, #0]
1a000774:	2b03      	cmp	r3, #3
1a000776:	d836      	bhi.n	1a0007e6 <waitForReceiveStringOrTimeout+0x7a>
1a000778:	e8df f003 	tbb	[pc, r3]
1a00077c:	322f0d02 	.word	0x322f0d02
1a000780:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1a000784:	f101 0018 	add.w	r0, r1, #24
1a000788:	f000 fa4a 	bl	1a000c20 <delayConfig>
1a00078c:	2300      	movs	r3, #0
1a00078e:	8163      	strh	r3, [r4, #10]
1a000790:	2301      	movs	r3, #1
1a000792:	7023      	strb	r3, [r4, #0]
1a000794:	e029      	b.n	1a0007ea <waitForReceiveStringOrTimeout+0x7e>
1a000796:	f10d 0107 	add.w	r1, sp, #7
1a00079a:	f7ff ffad 	bl	1a0006f8 <uartReadByte>
1a00079e:	b1a0      	cbz	r0, 1a0007ca <waitForReceiveStringOrTimeout+0x5e>
1a0007a0:	f89d 1007 	ldrb.w	r1, [sp, #7]
1a0007a4:	2000      	movs	r0, #0
1a0007a6:	f7ff ffc9 	bl	1a00073c <uartWriteByte>
1a0007aa:	6862      	ldr	r2, [r4, #4]
1a0007ac:	8963      	ldrh	r3, [r4, #10]
1a0007ae:	5cd1      	ldrb	r1, [r2, r3]
1a0007b0:	f89d 2007 	ldrb.w	r2, [sp, #7]
1a0007b4:	4291      	cmp	r1, r2
1a0007b6:	d108      	bne.n	1a0007ca <waitForReceiveStringOrTimeout+0x5e>
1a0007b8:	3301      	adds	r3, #1
1a0007ba:	b29b      	uxth	r3, r3
1a0007bc:	8163      	strh	r3, [r4, #10]
1a0007be:	8922      	ldrh	r2, [r4, #8]
1a0007c0:	3a01      	subs	r2, #1
1a0007c2:	4293      	cmp	r3, r2
1a0007c4:	d101      	bne.n	1a0007ca <waitForReceiveStringOrTimeout+0x5e>
1a0007c6:	2302      	movs	r3, #2
1a0007c8:	7023      	strb	r3, [r4, #0]
1a0007ca:	f104 0018 	add.w	r0, r4, #24
1a0007ce:	f000 fa37 	bl	1a000c40 <delayRead>
1a0007d2:	b150      	cbz	r0, 1a0007ea <waitForReceiveStringOrTimeout+0x7e>
1a0007d4:	2303      	movs	r3, #3
1a0007d6:	7023      	strb	r3, [r4, #0]
1a0007d8:	e007      	b.n	1a0007ea <waitForReceiveStringOrTimeout+0x7e>
1a0007da:	2300      	movs	r3, #0
1a0007dc:	700b      	strb	r3, [r1, #0]
1a0007de:	e004      	b.n	1a0007ea <waitForReceiveStringOrTimeout+0x7e>
1a0007e0:	2300      	movs	r3, #0
1a0007e2:	700b      	strb	r3, [r1, #0]
1a0007e4:	e001      	b.n	1a0007ea <waitForReceiveStringOrTimeout+0x7e>
1a0007e6:	2300      	movs	r3, #0
1a0007e8:	700b      	strb	r3, [r1, #0]
1a0007ea:	7820      	ldrb	r0, [r4, #0]
1a0007ec:	b002      	add	sp, #8
1a0007ee:	bd10      	pop	{r4, pc}

1a0007f0 <waitForReceiveStringOrTimeoutBlocking>:
1a0007f0:	b510      	push	{r4, lr}
1a0007f2:	b08c      	sub	sp, #48	; 0x30
1a0007f4:	4604      	mov	r4, r0
1a0007f6:	2000      	movs	r0, #0
1a0007f8:	f88d 0000 	strb.w	r0, [sp]
1a0007fc:	9101      	str	r1, [sp, #4]
1a0007fe:	f8ad 2008 	strh.w	r2, [sp, #8]
1a000802:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
1a000806:	e9cd 2304 	strd	r2, r3, [sp, #16]
1a00080a:	e003      	b.n	1a000814 <waitForReceiveStringOrTimeoutBlocking+0x24>
1a00080c:	4669      	mov	r1, sp
1a00080e:	4620      	mov	r0, r4
1a000810:	f7ff ffac 	bl	1a00076c <waitForReceiveStringOrTimeout>
1a000814:	1e83      	subs	r3, r0, #2
1a000816:	b2db      	uxtb	r3, r3
1a000818:	2b01      	cmp	r3, #1
1a00081a:	d8f7      	bhi.n	1a00080c <waitForReceiveStringOrTimeoutBlocking+0x1c>
1a00081c:	2803      	cmp	r0, #3
1a00081e:	d001      	beq.n	1a000824 <waitForReceiveStringOrTimeoutBlocking+0x34>
1a000820:	2001      	movs	r0, #1
1a000822:	e000      	b.n	1a000826 <waitForReceiveStringOrTimeoutBlocking+0x36>
1a000824:	2000      	movs	r0, #0
1a000826:	b00c      	add	sp, #48	; 0x30
1a000828:	bd10      	pop	{r4, pc}
1a00082a:	bf00      	nop

1a00082c <uartWriteString>:
1a00082c:	b538      	push	{r3, r4, r5, lr}
1a00082e:	4605      	mov	r5, r0
1a000830:	460c      	mov	r4, r1
1a000832:	e003      	b.n	1a00083c <uartWriteString+0x10>
1a000834:	4628      	mov	r0, r5
1a000836:	f7ff ff81 	bl	1a00073c <uartWriteByte>
1a00083a:	3401      	adds	r4, #1
1a00083c:	7821      	ldrb	r1, [r4, #0]
1a00083e:	2900      	cmp	r1, #0
1a000840:	d1f8      	bne.n	1a000834 <uartWriteString+0x8>
1a000842:	bd38      	pop	{r3, r4, r5, pc}

1a000844 <UART2_IRQHandler>:
1a000844:	4770      	bx	lr
1a000846:	bf00      	nop

1a000848 <UART3_IRQHandler>:
1a000848:	4770      	bx	lr
1a00084a:	bf00      	nop

1a00084c <sAPI_NullFuncPtr>:
1a00084c:	2001      	movs	r0, #1
1a00084e:	4770      	bx	lr

1a000850 <errorOcurred>:
1a000850:	e7fe      	b.n	1a000850 <errorOcurred>
1a000852:	bf00      	nop

1a000854 <doNothing>:
1a000854:	4770      	bx	lr
1a000856:	bf00      	nop

1a000858 <Timer_Init>:
1a000858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a00085c:	b909      	cbnz	r1, 1a000862 <Timer_Init+0xa>
1a00085e:	f7ff fff7 	bl	1a000850 <errorOcurred>
1a000862:	4605      	mov	r5, r0
1a000864:	4617      	mov	r7, r2
1a000866:	460e      	mov	r6, r1
1a000868:	4604      	mov	r4, r0
1a00086a:	4939      	ldr	r1, [pc, #228]	; (1a000950 <Timer_Init+0xf8>)
1a00086c:	0043      	lsls	r3, r0, #1
1a00086e:	4403      	add	r3, r0
1a000870:	009a      	lsls	r2, r3, #2
1a000872:	eb01 0802 	add.w	r8, r1, r2
1a000876:	5888      	ldr	r0, [r1, r2]
1a000878:	f001 fe0e 	bl	1a002498 <Chip_TIMER_Init>
1a00087c:	f898 3004 	ldrb.w	r3, [r8, #4]
1a000880:	095a      	lsrs	r2, r3, #5
1a000882:	f003 031f 	and.w	r3, r3, #31
1a000886:	2101      	movs	r1, #1
1a000888:	fa01 f303 	lsl.w	r3, r1, r3
1a00088c:	3240      	adds	r2, #64	; 0x40
1a00088e:	4931      	ldr	r1, [pc, #196]	; (1a000954 <Timer_Init+0xfc>)
1a000890:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
1a000894:	eb04 0244 	add.w	r2, r4, r4, lsl #1
1a000898:	0093      	lsls	r3, r2, #2
1a00089a:	4a2d      	ldr	r2, [pc, #180]	; (1a000950 <Timer_Init+0xf8>)
1a00089c:	4413      	add	r3, r2
1a00089e:	791b      	ldrb	r3, [r3, #4]
1a0008a0:	095a      	lsrs	r2, r3, #5
1a0008a2:	3254      	adds	r2, #84	; 0x54
1a0008a4:	492b      	ldr	r1, [pc, #172]	; (1a000954 <Timer_Init+0xfc>)
1a0008a6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
1a0008aa:	f003 031f 	and.w	r3, r3, #31
1a0008ae:	2201      	movs	r2, #1
1a0008b0:	fa02 f303 	lsl.w	r3, r2, r3
1a0008b4:	420b      	tst	r3, r1
1a0008b6:	d0ed      	beq.n	1a000894 <Timer_Init+0x3c>
1a0008b8:	4925      	ldr	r1, [pc, #148]	; (1a000950 <Timer_Init+0xf8>)
1a0008ba:	fa05 f302 	lsl.w	r3, r5, r2
1a0008be:	442b      	add	r3, r5
1a0008c0:	009a      	lsls	r2, r3, #2
1a0008c2:	eb01 0802 	add.w	r8, r1, r2
1a0008c6:	588c      	ldr	r4, [r1, r2]
1a0008c8:	4620      	mov	r0, r4
1a0008ca:	f001 fdf1 	bl	1a0024b0 <Chip_TIMER_Reset>
1a0008ce:	012b      	lsls	r3, r5, #4
1a0008d0:	4a21      	ldr	r2, [pc, #132]	; (1a000958 <Timer_Init+0x100>)
1a0008d2:	50d7      	str	r7, [r2, r3]
1a0008d4:	6963      	ldr	r3, [r4, #20]
1a0008d6:	f043 0301 	orr.w	r3, r3, #1
1a0008da:	6163      	str	r3, [r4, #20]
1a0008dc:	61a6      	str	r6, [r4, #24]
1a0008de:	6963      	ldr	r3, [r4, #20]
1a0008e0:	f043 0302 	orr.w	r3, r3, #2
1a0008e4:	6163      	str	r3, [r4, #20]
1a0008e6:	6863      	ldr	r3, [r4, #4]
1a0008e8:	f043 0301 	orr.w	r3, r3, #1
1a0008ec:	6063      	str	r3, [r4, #4]
1a0008ee:	f8d8 2008 	ldr.w	r2, [r8, #8]
1a0008f2:	b253      	sxtb	r3, r2
1a0008f4:	2b00      	cmp	r3, #0
1a0008f6:	da06      	bge.n	1a000906 <Timer_Init+0xae>
1a0008f8:	f002 020f 	and.w	r2, r2, #15
1a0008fc:	4b17      	ldr	r3, [pc, #92]	; (1a00095c <Timer_Init+0x104>)
1a0008fe:	4413      	add	r3, r2
1a000900:	22c0      	movs	r2, #192	; 0xc0
1a000902:	761a      	strb	r2, [r3, #24]
1a000904:	e006      	b.n	1a000914 <Timer_Init+0xbc>
1a000906:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
1a00090a:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
1a00090e:	22c0      	movs	r2, #192	; 0xc0
1a000910:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
1a000914:	4c0e      	ldr	r4, [pc, #56]	; (1a000950 <Timer_Init+0xf8>)
1a000916:	006e      	lsls	r6, r5, #1
1a000918:	1973      	adds	r3, r6, r5
1a00091a:	009a      	lsls	r2, r3, #2
1a00091c:	4422      	add	r2, r4
1a00091e:	6893      	ldr	r3, [r2, #8]
1a000920:	b259      	sxtb	r1, r3
1a000922:	0949      	lsrs	r1, r1, #5
1a000924:	f003 031f 	and.w	r3, r3, #31
1a000928:	2201      	movs	r2, #1
1a00092a:	fa02 f303 	lsl.w	r3, r2, r3
1a00092e:	480c      	ldr	r0, [pc, #48]	; (1a000960 <Timer_Init+0x108>)
1a000930:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
1a000934:	4435      	add	r5, r6
1a000936:	00ab      	lsls	r3, r5, #2
1a000938:	4423      	add	r3, r4
1a00093a:	6899      	ldr	r1, [r3, #8]
1a00093c:	b24b      	sxtb	r3, r1
1a00093e:	095b      	lsrs	r3, r3, #5
1a000940:	f001 011f 	and.w	r1, r1, #31
1a000944:	408a      	lsls	r2, r1
1a000946:	3360      	adds	r3, #96	; 0x60
1a000948:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
1a00094c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a000950:	1a002b94 	.word	0x1a002b94
1a000954:	40053000 	.word	0x40053000
1a000958:	10000030 	.word	0x10000030
1a00095c:	e000ecfc 	.word	0xe000ecfc
1a000960:	e000e100 	.word	0xe000e100

1a000964 <Timer_DeInit>:
1a000964:	b538      	push	{r3, r4, r5, lr}
1a000966:	4c0d      	ldr	r4, [pc, #52]	; (1a00099c <Timer_DeInit+0x38>)
1a000968:	0045      	lsls	r5, r0, #1
1a00096a:	182a      	adds	r2, r5, r0
1a00096c:	0093      	lsls	r3, r2, #2
1a00096e:	4423      	add	r3, r4
1a000970:	689a      	ldr	r2, [r3, #8]
1a000972:	b253      	sxtb	r3, r2
1a000974:	095b      	lsrs	r3, r3, #5
1a000976:	f002 021f 	and.w	r2, r2, #31
1a00097a:	2101      	movs	r1, #1
1a00097c:	fa01 f202 	lsl.w	r2, r1, r2
1a000980:	3320      	adds	r3, #32
1a000982:	4907      	ldr	r1, [pc, #28]	; (1a0009a0 <Timer_DeInit+0x3c>)
1a000984:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000988:	4428      	add	r0, r5
1a00098a:	0083      	lsls	r3, r0, #2
1a00098c:	58e0      	ldr	r0, [r4, r3]
1a00098e:	6843      	ldr	r3, [r0, #4]
1a000990:	f023 0301 	bic.w	r3, r3, #1
1a000994:	6043      	str	r3, [r0, #4]
1a000996:	f001 fd85 	bl	1a0024a4 <Chip_TIMER_DeInit>
1a00099a:	bd38      	pop	{r3, r4, r5, pc}
1a00099c:	1a002b94 	.word	0x1a002b94
1a0009a0:	e000e100 	.word	0xe000e100

1a0009a4 <Timer_microsecondsToTicks>:
1a0009a4:	23cc      	movs	r3, #204	; 0xcc
1a0009a6:	fb03 f000 	mul.w	r0, r3, r0
1a0009aa:	4770      	bx	lr

1a0009ac <Timer_EnableCompareMatch>:
1a0009ac:	b430      	push	{r4, r5}
1a0009ae:	eb01 0580 	add.w	r5, r1, r0, lsl #2
1a0009b2:	4c0a      	ldr	r4, [pc, #40]	; (1a0009dc <Timer_EnableCompareMatch+0x30>)
1a0009b4:	f844 3025 	str.w	r3, [r4, r5, lsl #2]
1a0009b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a0009bc:	0083      	lsls	r3, r0, #2
1a0009be:	4808      	ldr	r0, [pc, #32]	; (1a0009e0 <Timer_EnableCompareMatch+0x34>)
1a0009c0:	58c3      	ldr	r3, [r0, r3]
1a0009c2:	b249      	sxtb	r1, r1
1a0009c4:	695c      	ldr	r4, [r3, #20]
1a0009c6:	eb01 0541 	add.w	r5, r1, r1, lsl #1
1a0009ca:	2001      	movs	r0, #1
1a0009cc:	40a8      	lsls	r0, r5
1a0009ce:	4320      	orrs	r0, r4
1a0009d0:	6158      	str	r0, [r3, #20]
1a0009d2:	3106      	adds	r1, #6
1a0009d4:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
1a0009d8:	bc30      	pop	{r4, r5}
1a0009da:	4770      	bx	lr
1a0009dc:	10000030 	.word	0x10000030
1a0009e0:	1a002b94 	.word	0x1a002b94

1a0009e4 <Timer_DisableCompareMatch>:
1a0009e4:	b410      	push	{r4}
1a0009e6:	eb01 0280 	add.w	r2, r1, r0, lsl #2
1a0009ea:	4c0c      	ldr	r4, [pc, #48]	; (1a000a1c <Timer_DisableCompareMatch+0x38>)
1a0009ec:	4b0c      	ldr	r3, [pc, #48]	; (1a000a20 <Timer_DisableCompareMatch+0x3c>)
1a0009ee:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1a0009f2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a0009f6:	0083      	lsls	r3, r0, #2
1a0009f8:	4a0a      	ldr	r2, [pc, #40]	; (1a000a24 <Timer_DisableCompareMatch+0x40>)
1a0009fa:	58d2      	ldr	r2, [r2, r3]
1a0009fc:	b249      	sxtb	r1, r1
1a0009fe:	2301      	movs	r3, #1
1a000a00:	fa03 f001 	lsl.w	r0, r3, r1
1a000a04:	6010      	str	r0, [r2, #0]
1a000a06:	6950      	ldr	r0, [r2, #20]
1a000a08:	eb01 0141 	add.w	r1, r1, r1, lsl #1
1a000a0c:	fa03 f101 	lsl.w	r1, r3, r1
1a000a10:	ea20 0101 	bic.w	r1, r0, r1
1a000a14:	6151      	str	r1, [r2, #20]
1a000a16:	f85d 4b04 	ldr.w	r4, [sp], #4
1a000a1a:	4770      	bx	lr
1a000a1c:	1a000851 	.word	0x1a000851
1a000a20:	10000030 	.word	0x10000030
1a000a24:	1a002b94 	.word	0x1a002b94

1a000a28 <Timer_SetCompareMatch>:
1a000a28:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a000a2c:	0083      	lsls	r3, r0, #2
1a000a2e:	4803      	ldr	r0, [pc, #12]	; (1a000a3c <Timer_SetCompareMatch+0x14>)
1a000a30:	58c3      	ldr	r3, [r0, r3]
1a000a32:	b249      	sxtb	r1, r1
1a000a34:	3106      	adds	r1, #6
1a000a36:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
1a000a3a:	4770      	bx	lr
1a000a3c:	1a002b94 	.word	0x1a002b94

1a000a40 <TIMER0_IRQHandler>:
1a000a40:	b510      	push	{r4, lr}
1a000a42:	2400      	movs	r4, #0
1a000a44:	e012      	b.n	1a000a6c <TIMER0_IRQHandler+0x2c>
1a000a46:	4b0b      	ldr	r3, [pc, #44]	; (1a000a74 <TIMER0_IRQHandler+0x34>)
1a000a48:	681a      	ldr	r2, [r3, #0]
1a000a4a:	f004 010f 	and.w	r1, r4, #15
1a000a4e:	2301      	movs	r3, #1
1a000a50:	408b      	lsls	r3, r1
1a000a52:	4213      	tst	r3, r2
1a000a54:	d008      	beq.n	1a000a68 <TIMER0_IRQHandler+0x28>
1a000a56:	4b08      	ldr	r3, [pc, #32]	; (1a000a78 <TIMER0_IRQHandler+0x38>)
1a000a58:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
1a000a5c:	4798      	blx	r3
1a000a5e:	b262      	sxtb	r2, r4
1a000a60:	2301      	movs	r3, #1
1a000a62:	4093      	lsls	r3, r2
1a000a64:	4a03      	ldr	r2, [pc, #12]	; (1a000a74 <TIMER0_IRQHandler+0x34>)
1a000a66:	6013      	str	r3, [r2, #0]
1a000a68:	3401      	adds	r4, #1
1a000a6a:	b2e4      	uxtb	r4, r4
1a000a6c:	2c03      	cmp	r4, #3
1a000a6e:	d9ea      	bls.n	1a000a46 <TIMER0_IRQHandler+0x6>
1a000a70:	bd10      	pop	{r4, pc}
1a000a72:	bf00      	nop
1a000a74:	40084000 	.word	0x40084000
1a000a78:	10000030 	.word	0x10000030

1a000a7c <TIMER1_IRQHandler>:
1a000a7c:	b510      	push	{r4, lr}
1a000a7e:	2400      	movs	r4, #0
1a000a80:	e013      	b.n	1a000aaa <TIMER1_IRQHandler+0x2e>
1a000a82:	4b0b      	ldr	r3, [pc, #44]	; (1a000ab0 <TIMER1_IRQHandler+0x34>)
1a000a84:	681a      	ldr	r2, [r3, #0]
1a000a86:	f004 010f 	and.w	r1, r4, #15
1a000a8a:	2301      	movs	r3, #1
1a000a8c:	408b      	lsls	r3, r1
1a000a8e:	4213      	tst	r3, r2
1a000a90:	d009      	beq.n	1a000aa6 <TIMER1_IRQHandler+0x2a>
1a000a92:	1d23      	adds	r3, r4, #4
1a000a94:	4a07      	ldr	r2, [pc, #28]	; (1a000ab4 <TIMER1_IRQHandler+0x38>)
1a000a96:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a000a9a:	4798      	blx	r3
1a000a9c:	b262      	sxtb	r2, r4
1a000a9e:	2301      	movs	r3, #1
1a000aa0:	4093      	lsls	r3, r2
1a000aa2:	4a03      	ldr	r2, [pc, #12]	; (1a000ab0 <TIMER1_IRQHandler+0x34>)
1a000aa4:	6013      	str	r3, [r2, #0]
1a000aa6:	3401      	adds	r4, #1
1a000aa8:	b2e4      	uxtb	r4, r4
1a000aaa:	2c03      	cmp	r4, #3
1a000aac:	d9e9      	bls.n	1a000a82 <TIMER1_IRQHandler+0x6>
1a000aae:	bd10      	pop	{r4, pc}
1a000ab0:	40085000 	.word	0x40085000
1a000ab4:	10000030 	.word	0x10000030

1a000ab8 <TIMER2_IRQHandler>:
1a000ab8:	b510      	push	{r4, lr}
1a000aba:	2400      	movs	r4, #0
1a000abc:	e014      	b.n	1a000ae8 <TIMER2_IRQHandler+0x30>
1a000abe:	4b0c      	ldr	r3, [pc, #48]	; (1a000af0 <TIMER2_IRQHandler+0x38>)
1a000ac0:	681a      	ldr	r2, [r3, #0]
1a000ac2:	f004 010f 	and.w	r1, r4, #15
1a000ac6:	2301      	movs	r3, #1
1a000ac8:	408b      	lsls	r3, r1
1a000aca:	4213      	tst	r3, r2
1a000acc:	d00a      	beq.n	1a000ae4 <TIMER2_IRQHandler+0x2c>
1a000ace:	f104 0308 	add.w	r3, r4, #8
1a000ad2:	4a08      	ldr	r2, [pc, #32]	; (1a000af4 <TIMER2_IRQHandler+0x3c>)
1a000ad4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a000ad8:	4798      	blx	r3
1a000ada:	b262      	sxtb	r2, r4
1a000adc:	2301      	movs	r3, #1
1a000ade:	4093      	lsls	r3, r2
1a000ae0:	4a03      	ldr	r2, [pc, #12]	; (1a000af0 <TIMER2_IRQHandler+0x38>)
1a000ae2:	6013      	str	r3, [r2, #0]
1a000ae4:	3401      	adds	r4, #1
1a000ae6:	b2e4      	uxtb	r4, r4
1a000ae8:	2c03      	cmp	r4, #3
1a000aea:	d9e8      	bls.n	1a000abe <TIMER2_IRQHandler+0x6>
1a000aec:	bd10      	pop	{r4, pc}
1a000aee:	bf00      	nop
1a000af0:	400c3000 	.word	0x400c3000
1a000af4:	10000030 	.word	0x10000030

1a000af8 <TIMER3_IRQHandler>:
1a000af8:	b510      	push	{r4, lr}
1a000afa:	2400      	movs	r4, #0
1a000afc:	e014      	b.n	1a000b28 <TIMER3_IRQHandler+0x30>
1a000afe:	4b0c      	ldr	r3, [pc, #48]	; (1a000b30 <TIMER3_IRQHandler+0x38>)
1a000b00:	681a      	ldr	r2, [r3, #0]
1a000b02:	f004 010f 	and.w	r1, r4, #15
1a000b06:	2301      	movs	r3, #1
1a000b08:	408b      	lsls	r3, r1
1a000b0a:	4213      	tst	r3, r2
1a000b0c:	d00a      	beq.n	1a000b24 <TIMER3_IRQHandler+0x2c>
1a000b0e:	f104 030c 	add.w	r3, r4, #12
1a000b12:	4a08      	ldr	r2, [pc, #32]	; (1a000b34 <TIMER3_IRQHandler+0x3c>)
1a000b14:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a000b18:	4798      	blx	r3
1a000b1a:	b262      	sxtb	r2, r4
1a000b1c:	2301      	movs	r3, #1
1a000b1e:	4093      	lsls	r3, r2
1a000b20:	4a03      	ldr	r2, [pc, #12]	; (1a000b30 <TIMER3_IRQHandler+0x38>)
1a000b22:	6013      	str	r3, [r2, #0]
1a000b24:	3401      	adds	r4, #1
1a000b26:	b2e4      	uxtb	r4, r4
1a000b28:	2c03      	cmp	r4, #3
1a000b2a:	d9e8      	bls.n	1a000afe <TIMER3_IRQHandler+0x6>
1a000b2c:	bd10      	pop	{r4, pc}
1a000b2e:	bf00      	nop
1a000b30:	400c4000 	.word	0x400c4000
1a000b34:	10000030 	.word	0x10000030

1a000b38 <delayInaccurate>:
1a000b38:	b430      	push	{r4, r5}
1a000b3a:	b084      	sub	sp, #16
1a000b3c:	0109      	lsls	r1, r1, #4
1a000b3e:	0104      	lsls	r4, r0, #4
1a000b40:	ea41 7510 	orr.w	r5, r1, r0, lsr #28
1a000b44:	00ab      	lsls	r3, r5, #2
1a000b46:	ea43 7394 	orr.w	r3, r3, r4, lsr #30
1a000b4a:	00a2      	lsls	r2, r4, #2
1a000b4c:	1912      	adds	r2, r2, r4
1a000b4e:	416b      	adcs	r3, r5
1a000b50:	0219      	lsls	r1, r3, #8
1a000b52:	ea41 6112 	orr.w	r1, r1, r2, lsr #24
1a000b56:	0210      	lsls	r0, r2, #8
1a000b58:	1a82      	subs	r2, r0, r2
1a000b5a:	eb61 0303 	sbc.w	r3, r1, r3
1a000b5e:	e9cd 2300 	strd	r2, r3, [sp]
1a000b62:	e9dd 2300 	ldrd	r2, r3, [sp]
1a000b66:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000b6a:	e007      	b.n	1a000b7c <delayInaccurate+0x44>
1a000b6c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000b70:	f112 32ff 	adds.w	r2, r2, #4294967295
1a000b74:	f143 33ff 	adc.w	r3, r3, #4294967295
1a000b78:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000b7c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000b80:	4313      	orrs	r3, r2
1a000b82:	d1f3      	bne.n	1a000b6c <delayInaccurate+0x34>
1a000b84:	b004      	add	sp, #16
1a000b86:	bc30      	pop	{r4, r5}
1a000b88:	4770      	bx	lr
1a000b8a:	bf00      	nop

1a000b8c <delayInaccurateUs>:
1a000b8c:	b500      	push	{lr}
1a000b8e:	b085      	sub	sp, #20
1a000b90:	1802      	adds	r2, r0, r0
1a000b92:	eb41 0301 	adc.w	r3, r1, r1
1a000b96:	1880      	adds	r0, r0, r2
1a000b98:	4159      	adcs	r1, r3
1a000b9a:	010b      	lsls	r3, r1, #4
1a000b9c:	ea43 7310 	orr.w	r3, r3, r0, lsr #28
1a000ba0:	0102      	lsls	r2, r0, #4
1a000ba2:	1880      	adds	r0, r0, r2
1a000ba4:	4159      	adcs	r1, r3
1a000ba6:	008b      	lsls	r3, r1, #2
1a000ba8:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
1a000bac:	0082      	lsls	r2, r0, #2
1a000bae:	4610      	mov	r0, r2
1a000bb0:	4619      	mov	r1, r3
1a000bb2:	220a      	movs	r2, #10
1a000bb4:	2300      	movs	r3, #0
1a000bb6:	f001 fd0b 	bl	1a0025d0 <__aeabi_uldivmod>
1a000bba:	e9cd 0100 	strd	r0, r1, [sp]
1a000bbe:	e9dd 2300 	ldrd	r2, r3, [sp]
1a000bc2:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000bc6:	e007      	b.n	1a000bd8 <delayInaccurateUs+0x4c>
1a000bc8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000bcc:	f112 32ff 	adds.w	r2, r2, #4294967295
1a000bd0:	f143 33ff 	adc.w	r3, r3, #4294967295
1a000bd4:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000bd8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000bdc:	4313      	orrs	r3, r2
1a000bde:	d1f3      	bne.n	1a000bc8 <delayInaccurateUs+0x3c>
1a000be0:	b005      	add	sp, #20
1a000be2:	f85d fb04 	ldr.w	pc, [sp], #4
1a000be6:	bf00      	nop

1a000be8 <delay>:
1a000be8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a000bec:	4680      	mov	r8, r0
1a000bee:	4689      	mov	r9, r1
1a000bf0:	f000 f88e 	bl	1a000d10 <tickRead>
1a000bf4:	4606      	mov	r6, r0
1a000bf6:	460f      	mov	r7, r1
1a000bf8:	f000 f88a 	bl	1a000d10 <tickRead>
1a000bfc:	1b84      	subs	r4, r0, r6
1a000bfe:	eb61 0507 	sbc.w	r5, r1, r7
1a000c02:	4b06      	ldr	r3, [pc, #24]	; (1a000c1c <delay+0x34>)
1a000c04:	e9d3 2300 	ldrd	r2, r3, [r3]
1a000c08:	4640      	mov	r0, r8
1a000c0a:	4649      	mov	r1, r9
1a000c0c:	f001 fce0 	bl	1a0025d0 <__aeabi_uldivmod>
1a000c10:	428d      	cmp	r5, r1
1a000c12:	bf08      	it	eq
1a000c14:	4284      	cmpeq	r4, r0
1a000c16:	d3ef      	bcc.n	1a000bf8 <delay+0x10>
1a000c18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a000c1c:	100001f0 	.word	0x100001f0

1a000c20 <delayConfig>:
1a000c20:	b510      	push	{r4, lr}
1a000c22:	4604      	mov	r4, r0
1a000c24:	4610      	mov	r0, r2
1a000c26:	4619      	mov	r1, r3
1a000c28:	4b04      	ldr	r3, [pc, #16]	; (1a000c3c <delayConfig+0x1c>)
1a000c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
1a000c2e:	f001 fccf 	bl	1a0025d0 <__aeabi_uldivmod>
1a000c32:	e9c4 0102 	strd	r0, r1, [r4, #8]
1a000c36:	2300      	movs	r3, #0
1a000c38:	7423      	strb	r3, [r4, #16]
1a000c3a:	bd10      	pop	{r4, pc}
1a000c3c:	100001f0 	.word	0x100001f0

1a000c40 <delayRead>:
1a000c40:	b510      	push	{r4, lr}
1a000c42:	4604      	mov	r4, r0
1a000c44:	7c03      	ldrb	r3, [r0, #16]
1a000c46:	b93b      	cbnz	r3, 1a000c58 <delayRead+0x18>
1a000c48:	f000 f862 	bl	1a000d10 <tickRead>
1a000c4c:	e9c4 0100 	strd	r0, r1, [r4]
1a000c50:	2301      	movs	r3, #1
1a000c52:	7423      	strb	r3, [r4, #16]
1a000c54:	2000      	movs	r0, #0
1a000c56:	bd10      	pop	{r4, pc}
1a000c58:	f000 f85a 	bl	1a000d10 <tickRead>
1a000c5c:	e9d4 2300 	ldrd	r2, r3, [r4]
1a000c60:	1a80      	subs	r0, r0, r2
1a000c62:	eb61 0103 	sbc.w	r1, r1, r3
1a000c66:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
1a000c6a:	4299      	cmp	r1, r3
1a000c6c:	bf08      	it	eq
1a000c6e:	4290      	cmpeq	r0, r2
1a000c70:	d303      	bcc.n	1a000c7a <delayRead+0x3a>
1a000c72:	2300      	movs	r3, #0
1a000c74:	7423      	strb	r3, [r4, #16]
1a000c76:	2001      	movs	r0, #1
1a000c78:	bd10      	pop	{r4, pc}
1a000c7a:	2000      	movs	r0, #0
1a000c7c:	bd10      	pop	{r4, pc}
1a000c7e:	bf00      	nop

1a000c80 <delayWrite>:
1a000c80:	b510      	push	{r4, lr}
1a000c82:	4604      	mov	r4, r0
1a000c84:	4610      	mov	r0, r2
1a000c86:	4619      	mov	r1, r3
1a000c88:	4b03      	ldr	r3, [pc, #12]	; (1a000c98 <delayWrite+0x18>)
1a000c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
1a000c8e:	f001 fc9f 	bl	1a0025d0 <__aeabi_uldivmod>
1a000c92:	e9c4 0102 	strd	r0, r1, [r4, #8]
1a000c96:	bd10      	pop	{r4, pc}
1a000c98:	100001f0 	.word	0x100001f0

1a000c9c <tickConfig>:
1a000c9c:	b508      	push	{r3, lr}
1a000c9e:	b112      	cbz	r2, 1a000ca6 <tickConfig+0xa>
1a000ca0:	4613      	mov	r3, r2
1a000ca2:	4a16      	ldr	r2, [pc, #88]	; (1a000cfc <tickConfig+0x60>)
1a000ca4:	6013      	str	r3, [r2, #0]
1a000ca6:	f110 32ff 	adds.w	r2, r0, #4294967295
1a000caa:	f141 33ff 	adc.w	r3, r1, #4294967295
1a000cae:	2b00      	cmp	r3, #0
1a000cb0:	bf08      	it	eq
1a000cb2:	2a32      	cmpeq	r2, #50	; 0x32
1a000cb4:	d220      	bcs.n	1a000cf8 <tickConfig+0x5c>
1a000cb6:	4602      	mov	r2, r0
1a000cb8:	460b      	mov	r3, r1
1a000cba:	4911      	ldr	r1, [pc, #68]	; (1a000d00 <tickConfig+0x64>)
1a000cbc:	e9c1 2300 	strd	r2, r3, [r1]
1a000cc0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1a000cc4:	2100      	movs	r1, #0
1a000cc6:	f001 fc83 	bl	1a0025d0 <__aeabi_uldivmod>
1a000cca:	4602      	mov	r2, r0
1a000ccc:	460b      	mov	r3, r1
1a000cce:	490d      	ldr	r1, [pc, #52]	; (1a000d04 <tickConfig+0x68>)
1a000cd0:	6808      	ldr	r0, [r1, #0]
1a000cd2:	2100      	movs	r1, #0
1a000cd4:	f001 fc7c 	bl	1a0025d0 <__aeabi_uldivmod>
1a000cd8:	3801      	subs	r0, #1
1a000cda:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
1a000cde:	d209      	bcs.n	1a000cf4 <tickConfig+0x58>
1a000ce0:	4b09      	ldr	r3, [pc, #36]	; (1a000d08 <tickConfig+0x6c>)
1a000ce2:	6058      	str	r0, [r3, #4]
1a000ce4:	21e0      	movs	r1, #224	; 0xe0
1a000ce6:	4a09      	ldr	r2, [pc, #36]	; (1a000d0c <tickConfig+0x70>)
1a000ce8:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
1a000cec:	2200      	movs	r2, #0
1a000cee:	609a      	str	r2, [r3, #8]
1a000cf0:	2207      	movs	r2, #7
1a000cf2:	601a      	str	r2, [r3, #0]
1a000cf4:	2001      	movs	r0, #1
1a000cf6:	bd08      	pop	{r3, pc}
1a000cf8:	2000      	movs	r0, #0
1a000cfa:	bd08      	pop	{r3, pc}
1a000cfc:	10000070 	.word	0x10000070
1a000d00:	100001f0 	.word	0x100001f0
1a000d04:	100001f8 	.word	0x100001f8
1a000d08:	e000e010 	.word	0xe000e010
1a000d0c:	e000ed00 	.word	0xe000ed00

1a000d10 <tickRead>:
1a000d10:	4b01      	ldr	r3, [pc, #4]	; (1a000d18 <tickRead+0x8>)
1a000d12:	e9d3 0100 	ldrd	r0, r1, [r3]
1a000d16:	4770      	bx	lr
1a000d18:	100001e8 	.word	0x100001e8

1a000d1c <tickWrite>:
1a000d1c:	4b01      	ldr	r3, [pc, #4]	; (1a000d24 <tickWrite+0x8>)
1a000d1e:	e9c3 0100 	strd	r0, r1, [r3]
1a000d22:	4770      	bx	lr
1a000d24:	100001e8 	.word	0x100001e8

1a000d28 <SysTick_Handler>:
1a000d28:	b508      	push	{r3, lr}
1a000d2a:	4906      	ldr	r1, [pc, #24]	; (1a000d44 <SysTick_Handler+0x1c>)
1a000d2c:	e9d1 2300 	ldrd	r2, r3, [r1]
1a000d30:	3201      	adds	r2, #1
1a000d32:	f143 0300 	adc.w	r3, r3, #0
1a000d36:	e9c1 2300 	strd	r2, r3, [r1]
1a000d3a:	4b03      	ldr	r3, [pc, #12]	; (1a000d48 <SysTick_Handler+0x20>)
1a000d3c:	681b      	ldr	r3, [r3, #0]
1a000d3e:	2000      	movs	r0, #0
1a000d40:	4798      	blx	r3
1a000d42:	bd08      	pop	{r3, pc}
1a000d44:	100001e8 	.word	0x100001e8
1a000d48:	10000070 	.word	0x10000070

1a000d4c <boardConfig>:
1a000d4c:	b508      	push	{r3, lr}
1a000d4e:	f000 fe33 	bl	1a0019b8 <SystemCoreClockUpdate>
1a000d52:	f000 fa65 	bl	1a001220 <Board_Init>
1a000d56:	2200      	movs	r2, #0
1a000d58:	2001      	movs	r0, #1
1a000d5a:	2100      	movs	r1, #0
1a000d5c:	f7ff ff9e 	bl	1a000c9c <tickConfig>
1a000d60:	2105      	movs	r1, #5
1a000d62:	2000      	movs	r0, #0
1a000d64:	f000 f884 	bl	1a000e70 <gpioConfig>
1a000d68:	2100      	movs	r1, #0
1a000d6a:	2024      	movs	r0, #36	; 0x24
1a000d6c:	f000 f880 	bl	1a000e70 <gpioConfig>
1a000d70:	2100      	movs	r1, #0
1a000d72:	2025      	movs	r0, #37	; 0x25
1a000d74:	f000 f87c 	bl	1a000e70 <gpioConfig>
1a000d78:	2100      	movs	r1, #0
1a000d7a:	2026      	movs	r0, #38	; 0x26
1a000d7c:	f000 f878 	bl	1a000e70 <gpioConfig>
1a000d80:	2100      	movs	r1, #0
1a000d82:	2027      	movs	r0, #39	; 0x27
1a000d84:	f000 f874 	bl	1a000e70 <gpioConfig>
1a000d88:	2101      	movs	r1, #1
1a000d8a:	2028      	movs	r0, #40	; 0x28
1a000d8c:	f000 f870 	bl	1a000e70 <gpioConfig>
1a000d90:	2101      	movs	r1, #1
1a000d92:	2029      	movs	r0, #41	; 0x29
1a000d94:	f000 f86c 	bl	1a000e70 <gpioConfig>
1a000d98:	2101      	movs	r1, #1
1a000d9a:	202a      	movs	r0, #42	; 0x2a
1a000d9c:	f000 f868 	bl	1a000e70 <gpioConfig>
1a000da0:	2101      	movs	r1, #1
1a000da2:	202b      	movs	r0, #43	; 0x2b
1a000da4:	f000 f864 	bl	1a000e70 <gpioConfig>
1a000da8:	2101      	movs	r1, #1
1a000daa:	202c      	movs	r0, #44	; 0x2c
1a000dac:	f000 f860 	bl	1a000e70 <gpioConfig>
1a000db0:	2101      	movs	r1, #1
1a000db2:	202d      	movs	r0, #45	; 0x2d
1a000db4:	f000 f85c 	bl	1a000e70 <gpioConfig>
1a000db8:	2100      	movs	r1, #0
1a000dba:	202e      	movs	r0, #46	; 0x2e
1a000dbc:	f000 f858 	bl	1a000e70 <gpioConfig>
1a000dc0:	2100      	movs	r1, #0
1a000dc2:	202f      	movs	r0, #47	; 0x2f
1a000dc4:	f000 f854 	bl	1a000e70 <gpioConfig>
1a000dc8:	2100      	movs	r1, #0
1a000dca:	2030      	movs	r0, #48	; 0x30
1a000dcc:	f000 f850 	bl	1a000e70 <gpioConfig>
1a000dd0:	2100      	movs	r1, #0
1a000dd2:	2031      	movs	r0, #49	; 0x31
1a000dd4:	f000 f84c 	bl	1a000e70 <gpioConfig>
1a000dd8:	2100      	movs	r1, #0
1a000dda:	2032      	movs	r0, #50	; 0x32
1a000ddc:	f000 f848 	bl	1a000e70 <gpioConfig>
1a000de0:	2100      	movs	r1, #0
1a000de2:	2033      	movs	r0, #51	; 0x33
1a000de4:	f000 f844 	bl	1a000e70 <gpioConfig>
1a000de8:	2100      	movs	r1, #0
1a000dea:	2034      	movs	r0, #52	; 0x34
1a000dec:	f000 f840 	bl	1a000e70 <gpioConfig>
1a000df0:	2100      	movs	r1, #0
1a000df2:	2035      	movs	r0, #53	; 0x35
1a000df4:	f000 f83c 	bl	1a000e70 <gpioConfig>
1a000df8:	2101      	movs	r1, #1
1a000dfa:	2036      	movs	r0, #54	; 0x36
1a000dfc:	f000 f838 	bl	1a000e70 <gpioConfig>
1a000e00:	2101      	movs	r1, #1
1a000e02:	2037      	movs	r0, #55	; 0x37
1a000e04:	f000 f834 	bl	1a000e70 <gpioConfig>
1a000e08:	2101      	movs	r1, #1
1a000e0a:	2038      	movs	r0, #56	; 0x38
1a000e0c:	f000 f830 	bl	1a000e70 <gpioConfig>
1a000e10:	2101      	movs	r1, #1
1a000e12:	2039      	movs	r0, #57	; 0x39
1a000e14:	f000 f82c 	bl	1a000e70 <gpioConfig>
1a000e18:	2101      	movs	r1, #1
1a000e1a:	203a      	movs	r0, #58	; 0x3a
1a000e1c:	f000 f828 	bl	1a000e70 <gpioConfig>
1a000e20:	2101      	movs	r1, #1
1a000e22:	203b      	movs	r0, #59	; 0x3b
1a000e24:	f000 f824 	bl	1a000e70 <gpioConfig>
1a000e28:	2101      	movs	r1, #1
1a000e2a:	203c      	movs	r0, #60	; 0x3c
1a000e2c:	f000 f820 	bl	1a000e70 <gpioConfig>
1a000e30:	2101      	movs	r1, #1
1a000e32:	203d      	movs	r0, #61	; 0x3d
1a000e34:	f000 f81c 	bl	1a000e70 <gpioConfig>
1a000e38:	bd08      	pop	{r3, pc}
1a000e3a:	bf00      	nop

1a000e3c <gpioObtainPinConfig>:
1a000e3c:	b430      	push	{r4, r5}
1a000e3e:	4d0b      	ldr	r5, [pc, #44]	; (1a000e6c <gpioObtainPinConfig+0x30>)
1a000e40:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1a000e44:	182c      	adds	r4, r5, r0
1a000e46:	5628      	ldrsb	r0, [r5, r0]
1a000e48:	7008      	strb	r0, [r1, #0]
1a000e4a:	f994 1001 	ldrsb.w	r1, [r4, #1]
1a000e4e:	7011      	strb	r1, [r2, #0]
1a000e50:	f994 2002 	ldrsb.w	r2, [r4, #2]
1a000e54:	701a      	strb	r2, [r3, #0]
1a000e56:	f994 2003 	ldrsb.w	r2, [r4, #3]
1a000e5a:	9b02      	ldr	r3, [sp, #8]
1a000e5c:	701a      	strb	r2, [r3, #0]
1a000e5e:	f994 2004 	ldrsb.w	r2, [r4, #4]
1a000e62:	9b03      	ldr	r3, [sp, #12]
1a000e64:	701a      	strb	r2, [r3, #0]
1a000e66:	bc30      	pop	{r4, r5}
1a000e68:	4770      	bx	lr
1a000e6a:	bf00      	nop
1a000e6c:	1a002bc4 	.word	0x1a002bc4

1a000e70 <gpioConfig>:
1a000e70:	b570      	push	{r4, r5, r6, lr}
1a000e72:	b084      	sub	sp, #16
1a000e74:	460c      	mov	r4, r1
1a000e76:	2300      	movs	r3, #0
1a000e78:	f88d 300f 	strb.w	r3, [sp, #15]
1a000e7c:	f88d 300e 	strb.w	r3, [sp, #14]
1a000e80:	f88d 300d 	strb.w	r3, [sp, #13]
1a000e84:	f88d 300c 	strb.w	r3, [sp, #12]
1a000e88:	f88d 300b 	strb.w	r3, [sp, #11]
1a000e8c:	f10d 030b 	add.w	r3, sp, #11
1a000e90:	9301      	str	r3, [sp, #4]
1a000e92:	ab03      	add	r3, sp, #12
1a000e94:	9300      	str	r3, [sp, #0]
1a000e96:	f10d 030d 	add.w	r3, sp, #13
1a000e9a:	f10d 020e 	add.w	r2, sp, #14
1a000e9e:	f10d 010f 	add.w	r1, sp, #15
1a000ea2:	f7ff ffcb 	bl	1a000e3c <gpioObtainPinConfig>
1a000ea6:	2c05      	cmp	r4, #5
1a000ea8:	f200 80a4 	bhi.w	1a000ff4 <gpioConfig+0x184>
1a000eac:	e8df f004 	tbb	[pc, r4]
1a000eb0:	44268008 	.word	0x44268008
1a000eb4:	0362      	.short	0x0362
1a000eb6:	4851      	ldr	r0, [pc, #324]	; (1a000ffc <gpioConfig+0x18c>)
1a000eb8:	f001 fb48 	bl	1a00254c <Chip_GPIO_Init>
1a000ebc:	2001      	movs	r0, #1
1a000ebe:	e09a      	b.n	1a000ff6 <gpioConfig+0x186>
1a000ec0:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000ec4:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000ec8:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000ecc:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a000ed0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000ed4:	494a      	ldr	r1, [pc, #296]	; (1a001000 <gpioConfig+0x190>)
1a000ed6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000eda:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a000ede:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000ee2:	2001      	movs	r0, #1
1a000ee4:	fa00 f102 	lsl.w	r1, r0, r2
1a000ee8:	4c44      	ldr	r4, [pc, #272]	; (1a000ffc <gpioConfig+0x18c>)
1a000eea:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a000eee:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a000ef2:	ea22 0201 	bic.w	r2, r2, r1
1a000ef6:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a000efa:	e07c      	b.n	1a000ff6 <gpioConfig+0x186>
1a000efc:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000f00:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000f04:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000f08:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
1a000f0c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000f10:	493b      	ldr	r1, [pc, #236]	; (1a001000 <gpioConfig+0x190>)
1a000f12:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000f16:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a000f1a:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000f1e:	2001      	movs	r0, #1
1a000f20:	fa00 f102 	lsl.w	r1, r0, r2
1a000f24:	4c35      	ldr	r4, [pc, #212]	; (1a000ffc <gpioConfig+0x18c>)
1a000f26:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a000f2a:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a000f2e:	ea22 0201 	bic.w	r2, r2, r1
1a000f32:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a000f36:	e05e      	b.n	1a000ff6 <gpioConfig+0x186>
1a000f38:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000f3c:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000f40:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000f44:	f042 02d8 	orr.w	r2, r2, #216	; 0xd8
1a000f48:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000f4c:	492c      	ldr	r1, [pc, #176]	; (1a001000 <gpioConfig+0x190>)
1a000f4e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000f52:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a000f56:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000f5a:	2001      	movs	r0, #1
1a000f5c:	fa00 f102 	lsl.w	r1, r0, r2
1a000f60:	4c26      	ldr	r4, [pc, #152]	; (1a000ffc <gpioConfig+0x18c>)
1a000f62:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a000f66:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a000f6a:	ea22 0201 	bic.w	r2, r2, r1
1a000f6e:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a000f72:	e040      	b.n	1a000ff6 <gpioConfig+0x186>
1a000f74:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000f78:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000f7c:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000f80:	f042 02c8 	orr.w	r2, r2, #200	; 0xc8
1a000f84:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000f88:	491d      	ldr	r1, [pc, #116]	; (1a001000 <gpioConfig+0x190>)
1a000f8a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000f8e:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a000f92:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000f96:	2001      	movs	r0, #1
1a000f98:	fa00 f102 	lsl.w	r1, r0, r2
1a000f9c:	4c17      	ldr	r4, [pc, #92]	; (1a000ffc <gpioConfig+0x18c>)
1a000f9e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a000fa2:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a000fa6:	ea22 0201 	bic.w	r2, r2, r1
1a000faa:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a000fae:	e022      	b.n	1a000ff6 <gpioConfig+0x186>
1a000fb0:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a000fb4:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a000fb8:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a000fbc:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a000fc0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a000fc4:	490e      	ldr	r1, [pc, #56]	; (1a001000 <gpioConfig+0x190>)
1a000fc6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000fca:	f89d 400c 	ldrb.w	r4, [sp, #12]
1a000fce:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a000fd2:	2001      	movs	r0, #1
1a000fd4:	fa00 f602 	lsl.w	r6, r0, r2
1a000fd8:	4b08      	ldr	r3, [pc, #32]	; (1a000ffc <gpioConfig+0x18c>)
1a000fda:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a000fde:	f853 1025 	ldr.w	r1, [r3, r5, lsl #2]
1a000fe2:	4331      	orrs	r1, r6
1a000fe4:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
1a000fe8:	b2d2      	uxtb	r2, r2
1a000fea:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a000fee:	2100      	movs	r1, #0
1a000ff0:	5499      	strb	r1, [r3, r2]
1a000ff2:	e000      	b.n	1a000ff6 <gpioConfig+0x186>
1a000ff4:	2000      	movs	r0, #0
1a000ff6:	b004      	add	sp, #16
1a000ff8:	bd70      	pop	{r4, r5, r6, pc}
1a000ffa:	bf00      	nop
1a000ffc:	400f4000 	.word	0x400f4000
1a001000:	40086000 	.word	0x40086000

1a001004 <gpioWrite>:
1a001004:	b510      	push	{r4, lr}
1a001006:	b084      	sub	sp, #16
1a001008:	460c      	mov	r4, r1
1a00100a:	2300      	movs	r3, #0
1a00100c:	f88d 300f 	strb.w	r3, [sp, #15]
1a001010:	f88d 300e 	strb.w	r3, [sp, #14]
1a001014:	f88d 300d 	strb.w	r3, [sp, #13]
1a001018:	f88d 300c 	strb.w	r3, [sp, #12]
1a00101c:	f88d 300b 	strb.w	r3, [sp, #11]
1a001020:	f10d 030b 	add.w	r3, sp, #11
1a001024:	9301      	str	r3, [sp, #4]
1a001026:	ab03      	add	r3, sp, #12
1a001028:	9300      	str	r3, [sp, #0]
1a00102a:	f10d 030d 	add.w	r3, sp, #13
1a00102e:	f10d 020e 	add.w	r2, sp, #14
1a001032:	f10d 010f 	add.w	r1, sp, #15
1a001036:	f7ff ff01 	bl	1a000e3c <gpioObtainPinConfig>
1a00103a:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a00103e:	f89d 200b 	ldrb.w	r2, [sp, #11]
1a001042:	3400      	adds	r4, #0
1a001044:	bf18      	it	ne
1a001046:	2401      	movne	r4, #1
1a001048:	015b      	lsls	r3, r3, #5
1a00104a:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a00104e:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a001052:	549c      	strb	r4, [r3, r2]
1a001054:	2001      	movs	r0, #1
1a001056:	b004      	add	sp, #16
1a001058:	bd10      	pop	{r4, pc}
1a00105a:	bf00      	nop

1a00105c <gpioRead>:
1a00105c:	b500      	push	{lr}
1a00105e:	b085      	sub	sp, #20
1a001060:	2300      	movs	r3, #0
1a001062:	f88d 300f 	strb.w	r3, [sp, #15]
1a001066:	f88d 300e 	strb.w	r3, [sp, #14]
1a00106a:	f88d 300d 	strb.w	r3, [sp, #13]
1a00106e:	f88d 300c 	strb.w	r3, [sp, #12]
1a001072:	f88d 300b 	strb.w	r3, [sp, #11]
1a001076:	f10d 030b 	add.w	r3, sp, #11
1a00107a:	9301      	str	r3, [sp, #4]
1a00107c:	ab03      	add	r3, sp, #12
1a00107e:	9300      	str	r3, [sp, #0]
1a001080:	f10d 030d 	add.w	r3, sp, #13
1a001084:	f10d 020e 	add.w	r2, sp, #14
1a001088:	f10d 010f 	add.w	r1, sp, #15
1a00108c:	f7ff fed6 	bl	1a000e3c <gpioObtainPinConfig>
1a001090:	f99d 300c 	ldrsb.w	r3, [sp, #12]
1a001094:	f89d 200b 	ldrb.w	r2, [sp, #11]
1a001098:	015b      	lsls	r3, r3, #5
1a00109a:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a00109e:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a0010a2:	5c9b      	ldrb	r3, [r3, r2]
1a0010a4:	f013 0fff 	tst.w	r3, #255	; 0xff
1a0010a8:	bf14      	ite	ne
1a0010aa:	2001      	movne	r0, #1
1a0010ac:	2000      	moveq	r0, #0
1a0010ae:	b005      	add	sp, #20
1a0010b0:	f85d fb04 	ldr.w	pc, [sp], #4

1a0010b4 <gpioToggle>:
1a0010b4:	b510      	push	{r4, lr}
1a0010b6:	4604      	mov	r4, r0
1a0010b8:	f7ff ffd0 	bl	1a00105c <gpioRead>
1a0010bc:	fab0 f180 	clz	r1, r0
1a0010c0:	0949      	lsrs	r1, r1, #5
1a0010c2:	4620      	mov	r0, r4
1a0010c4:	f7ff ff9e 	bl	1a001004 <gpioWrite>
1a0010c8:	bd10      	pop	{r4, pc}
1a0010ca:	bf00      	nop

1a0010cc <Board_LED_Init>:
1a0010cc:	b470      	push	{r4, r5, r6}
1a0010ce:	2100      	movs	r1, #0
1a0010d0:	e014      	b.n	1a0010fc <Board_LED_Init+0x30>
1a0010d2:	4a0c      	ldr	r2, [pc, #48]	; (1a001104 <Board_LED_Init+0x38>)
1a0010d4:	f812 4011 	ldrb.w	r4, [r2, r1, lsl #1]
1a0010d8:	eb02 0241 	add.w	r2, r2, r1, lsl #1
1a0010dc:	7850      	ldrb	r0, [r2, #1]
1a0010de:	4b0a      	ldr	r3, [pc, #40]	; (1a001108 <Board_LED_Init+0x3c>)
1a0010e0:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a0010e4:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1a0010e8:	2201      	movs	r2, #1
1a0010ea:	4082      	lsls	r2, r0
1a0010ec:	4332      	orrs	r2, r6
1a0010ee:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
1a0010f2:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a0010f6:	2200      	movs	r2, #0
1a0010f8:	541a      	strb	r2, [r3, r0]
1a0010fa:	3101      	adds	r1, #1
1a0010fc:	2905      	cmp	r1, #5
1a0010fe:	d9e8      	bls.n	1a0010d2 <Board_LED_Init+0x6>
1a001100:	bc70      	pop	{r4, r5, r6}
1a001102:	4770      	bx	lr
1a001104:	1a002cfc 	.word	0x1a002cfc
1a001108:	400f4000 	.word	0x400f4000

1a00110c <Board_UART_Init>:
1a00110c:	4b03      	ldr	r3, [pc, #12]	; (1a00111c <Board_UART_Init+0x10>)
1a00110e:	2212      	movs	r2, #18
1a001110:	f8c3 2310 	str.w	r2, [r3, #784]	; 0x310
1a001114:	22d1      	movs	r2, #209	; 0xd1
1a001116:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
1a00111a:	4770      	bx	lr
1a00111c:	40086000 	.word	0x40086000

1a001120 <Board_Debug_Init>:
1a001120:	b510      	push	{r4, lr}
1a001122:	4c08      	ldr	r4, [pc, #32]	; (1a001144 <Board_Debug_Init+0x24>)
1a001124:	4620      	mov	r0, r4
1a001126:	f7ff fff1 	bl	1a00110c <Board_UART_Init>
1a00112a:	4620      	mov	r0, r4
1a00112c:	f000 f974 	bl	1a001418 <Chip_UART_Init>
1a001130:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a001134:	4620      	mov	r0, r4
1a001136:	f000 fa8d 	bl	1a001654 <Chip_UART_SetBaudFDR>
1a00113a:	2303      	movs	r3, #3
1a00113c:	60e3      	str	r3, [r4, #12]
1a00113e:	2301      	movs	r3, #1
1a001140:	65e3      	str	r3, [r4, #92]	; 0x5c
1a001142:	bd10      	pop	{r4, pc}
1a001144:	400c1000 	.word	0x400c1000

1a001148 <Board_UARTPutChar>:
1a001148:	4b03      	ldr	r3, [pc, #12]	; (1a001158 <Board_UARTPutChar+0x10>)
1a00114a:	695b      	ldr	r3, [r3, #20]
1a00114c:	f013 0f20 	tst.w	r3, #32
1a001150:	d0fa      	beq.n	1a001148 <Board_UARTPutChar>
1a001152:	4b01      	ldr	r3, [pc, #4]	; (1a001158 <Board_UARTPutChar+0x10>)
1a001154:	6018      	str	r0, [r3, #0]
1a001156:	4770      	bx	lr
1a001158:	400c1000 	.word	0x400c1000

1a00115c <Board_UARTGetChar>:
1a00115c:	4b05      	ldr	r3, [pc, #20]	; (1a001174 <Board_UARTGetChar+0x18>)
1a00115e:	695b      	ldr	r3, [r3, #20]
1a001160:	f013 0f01 	tst.w	r3, #1
1a001164:	d003      	beq.n	1a00116e <Board_UARTGetChar+0x12>
1a001166:	4b03      	ldr	r3, [pc, #12]	; (1a001174 <Board_UARTGetChar+0x18>)
1a001168:	6818      	ldr	r0, [r3, #0]
1a00116a:	b2c0      	uxtb	r0, r0
1a00116c:	4770      	bx	lr
1a00116e:	f04f 30ff 	mov.w	r0, #4294967295
1a001172:	4770      	bx	lr
1a001174:	400c1000 	.word	0x400c1000

1a001178 <Board_UARTPutSTR>:
1a001178:	b510      	push	{r4, lr}
1a00117a:	4604      	mov	r4, r0
1a00117c:	e002      	b.n	1a001184 <Board_UARTPutSTR+0xc>
1a00117e:	3401      	adds	r4, #1
1a001180:	f7ff ffe2 	bl	1a001148 <Board_UARTPutChar>
1a001184:	7820      	ldrb	r0, [r4, #0]
1a001186:	2800      	cmp	r0, #0
1a001188:	d1f9      	bne.n	1a00117e <Board_UARTPutSTR+0x6>
1a00118a:	bd10      	pop	{r4, pc}

1a00118c <Board_LED_Set>:
1a00118c:	2805      	cmp	r0, #5
1a00118e:	d80d      	bhi.n	1a0011ac <Board_LED_Set+0x20>
1a001190:	4a07      	ldr	r2, [pc, #28]	; (1a0011b0 <Board_LED_Set+0x24>)
1a001192:	f812 3010 	ldrb.w	r3, [r2, r0, lsl #1]
1a001196:	eb02 0040 	add.w	r0, r2, r0, lsl #1
1a00119a:	7842      	ldrb	r2, [r0, #1]
1a00119c:	f081 0101 	eor.w	r1, r1, #1
1a0011a0:	015b      	lsls	r3, r3, #5
1a0011a2:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a0011a6:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a0011aa:	5499      	strb	r1, [r3, r2]
1a0011ac:	4770      	bx	lr
1a0011ae:	bf00      	nop
1a0011b0:	1a002cfc 	.word	0x1a002cfc

1a0011b4 <Board_LED_Test>:
1a0011b4:	2805      	cmp	r0, #5
1a0011b6:	d811      	bhi.n	1a0011dc <Board_LED_Test+0x28>
1a0011b8:	4a09      	ldr	r2, [pc, #36]	; (1a0011e0 <Board_LED_Test+0x2c>)
1a0011ba:	f812 3010 	ldrb.w	r3, [r2, r0, lsl #1]
1a0011be:	eb02 0040 	add.w	r0, r2, r0, lsl #1
1a0011c2:	7842      	ldrb	r2, [r0, #1]
1a0011c4:	015b      	lsls	r3, r3, #5
1a0011c6:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a0011ca:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a0011ce:	5c9b      	ldrb	r3, [r3, r2]
1a0011d0:	f013 0fff 	tst.w	r3, #255	; 0xff
1a0011d4:	bf0c      	ite	eq
1a0011d6:	2001      	moveq	r0, #1
1a0011d8:	2000      	movne	r0, #0
1a0011da:	4770      	bx	lr
1a0011dc:	2000      	movs	r0, #0
1a0011de:	4770      	bx	lr
1a0011e0:	1a002cfc 	.word	0x1a002cfc

1a0011e4 <Board_LED_Toggle>:
1a0011e4:	b510      	push	{r4, lr}
1a0011e6:	4604      	mov	r4, r0
1a0011e8:	f7ff ffe4 	bl	1a0011b4 <Board_LED_Test>
1a0011ec:	f080 0101 	eor.w	r1, r0, #1
1a0011f0:	b2c9      	uxtb	r1, r1
1a0011f2:	4620      	mov	r0, r4
1a0011f4:	f7ff ffca 	bl	1a00118c <Board_LED_Set>
1a0011f8:	bd10      	pop	{r4, pc}
1a0011fa:	bf00      	nop

1a0011fc <Board_ENET_GetMacADDR>:
1a0011fc:	b082      	sub	sp, #8
1a0011fe:	4602      	mov	r2, r0
1a001200:	4b06      	ldr	r3, [pc, #24]	; (1a00121c <Board_ENET_GetMacADDR+0x20>)
1a001202:	f853 0f0c 	ldr.w	r0, [r3, #12]!
1a001206:	9000      	str	r0, [sp, #0]
1a001208:	889b      	ldrh	r3, [r3, #4]
1a00120a:	f8ad 3004 	strh.w	r3, [sp, #4]
1a00120e:	9800      	ldr	r0, [sp, #0]
1a001210:	6010      	str	r0, [r2, #0]
1a001212:	f8bd 3004 	ldrh.w	r3, [sp, #4]
1a001216:	8093      	strh	r3, [r2, #4]
1a001218:	b002      	add	sp, #8
1a00121a:	4770      	bx	lr
1a00121c:	1a002cfc 	.word	0x1a002cfc

1a001220 <Board_Init>:
1a001220:	b508      	push	{r3, lr}
1a001222:	f7ff ff7d 	bl	1a001120 <Board_Debug_Init>
1a001226:	4806      	ldr	r0, [pc, #24]	; (1a001240 <Board_Init+0x20>)
1a001228:	f001 f990 	bl	1a00254c <Chip_GPIO_Init>
1a00122c:	f7ff ff4e 	bl	1a0010cc <Board_LED_Init>
1a001230:	4a04      	ldr	r2, [pc, #16]	; (1a001244 <Board_Init+0x24>)
1a001232:	f8d2 312c 	ldr.w	r3, [r2, #300]	; 0x12c
1a001236:	f043 0304 	orr.w	r3, r3, #4
1a00123a:	f8c2 312c 	str.w	r3, [r2, #300]	; 0x12c
1a00123e:	bd08      	pop	{r3, pc}
1a001240:	400f4000 	.word	0x400f4000
1a001244:	40043000 	.word	0x40043000

1a001248 <Board_I2C_Init>:
1a001248:	2801      	cmp	r0, #1
1a00124a:	d106      	bne.n	1a00125a <Board_I2C_Init+0x12>
1a00124c:	4b06      	ldr	r3, [pc, #24]	; (1a001268 <Board_I2C_Init+0x20>)
1a00124e:	22c1      	movs	r2, #193	; 0xc1
1a001250:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
1a001254:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
1a001258:	4770      	bx	lr
1a00125a:	f640 0208 	movw	r2, #2056	; 0x808
1a00125e:	4b02      	ldr	r3, [pc, #8]	; (1a001268 <Board_I2C_Init+0x20>)
1a001260:	f8c3 2c84 	str.w	r2, [r3, #3204]	; 0xc84
1a001264:	4770      	bx	lr
1a001266:	bf00      	nop
1a001268:	40086000 	.word	0x40086000

1a00126c <Board_SDMMC_Init>:
1a00126c:	4b09      	ldr	r3, [pc, #36]	; (1a001294 <Board_SDMMC_Init+0x28>)
1a00126e:	22e7      	movs	r2, #231	; 0xe7
1a001270:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
1a001274:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
1a001278:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
1a00127c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
1a001280:	2154      	movs	r1, #84	; 0x54
1a001282:	f8c3 1c08 	str.w	r1, [r3, #3080]	; 0xc08
1a001286:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
1a00128a:	2247      	movs	r2, #71	; 0x47
1a00128c:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
1a001290:	4770      	bx	lr
1a001292:	bf00      	nop
1a001294:	40086000 	.word	0x40086000

1a001298 <Board_SSP_Init>:
1a001298:	4b08      	ldr	r3, [pc, #32]	; (1a0012bc <Board_SSP_Init+0x24>)
1a00129a:	4298      	cmp	r0, r3
1a00129c:	d10c      	bne.n	1a0012b8 <Board_SSP_Init+0x20>
1a00129e:	f5a3 337c 	sub.w	r3, r3, #258048	; 0x3f000
1a0012a2:	22f5      	movs	r2, #245	; 0xf5
1a0012a4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
1a0012a8:	22f0      	movs	r2, #240	; 0xf0
1a0012aa:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
1a0012ae:	22d5      	movs	r2, #213	; 0xd5
1a0012b0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
1a0012b4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
1a0012b8:	4770      	bx	lr
1a0012ba:	bf00      	nop
1a0012bc:	400c5000 	.word	0x400c5000

1a0012c0 <Board_DAC_Init>:
1a0012c0:	4a03      	ldr	r2, [pc, #12]	; (1a0012d0 <Board_DAC_Init+0x10>)
1a0012c2:	f8d2 3c90 	ldr.w	r3, [r2, #3216]	; 0xc90
1a0012c6:	f043 0301 	orr.w	r3, r3, #1
1a0012ca:	f8c2 3c90 	str.w	r3, [r2, #3216]	; 0xc90
1a0012ce:	4770      	bx	lr
1a0012d0:	40086000 	.word	0x40086000

1a0012d4 <SystemInit>:
1a0012d4:	b508      	push	{r3, lr}
1a0012d6:	4b04      	ldr	r3, [pc, #16]	; (1a0012e8 <SystemInit+0x14>)
1a0012d8:	4a04      	ldr	r2, [pc, #16]	; (1a0012ec <SystemInit+0x18>)
1a0012da:	601a      	str	r2, [r3, #0]
1a0012dc:	f001 f90a 	bl	1a0024f4 <fpuInit>
1a0012e0:	f000 f85a 	bl	1a001398 <Board_SystemInit>
1a0012e4:	bd08      	pop	{r3, pc}
1a0012e6:	bf00      	nop
1a0012e8:	e000ed08 	.word	0xe000ed08
1a0012ec:	1a000000 	.word	0x1a000000

1a0012f0 <Board_SetupMuxing>:
1a0012f0:	b410      	push	{r4}
1a0012f2:	2300      	movs	r3, #0
1a0012f4:	e00c      	b.n	1a001310 <Board_SetupMuxing+0x20>
1a0012f6:	4a09      	ldr	r2, [pc, #36]	; (1a00131c <Board_SetupMuxing+0x2c>)
1a0012f8:	eb02 0183 	add.w	r1, r2, r3, lsl #2
1a0012fc:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
1a001300:	784a      	ldrb	r2, [r1, #1]
1a001302:	8848      	ldrh	r0, [r1, #2]
1a001304:	eb02 1244 	add.w	r2, r2, r4, lsl #5
1a001308:	4905      	ldr	r1, [pc, #20]	; (1a001320 <Board_SetupMuxing+0x30>)
1a00130a:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
1a00130e:	3301      	adds	r3, #1
1a001310:	2b17      	cmp	r3, #23
1a001312:	d9f0      	bls.n	1a0012f6 <Board_SetupMuxing+0x6>
1a001314:	f85d 4b04 	ldr.w	r4, [sp], #4
1a001318:	4770      	bx	lr
1a00131a:	bf00      	nop
1a00131c:	1a002d18 	.word	0x1a002d18
1a001320:	40086000 	.word	0x40086000

1a001324 <Board_SetupClocking>:
1a001324:	b510      	push	{r4, lr}
1a001326:	4a19      	ldr	r2, [pc, #100]	; (1a00138c <Board_SetupClocking+0x68>)
1a001328:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
1a00132c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a001330:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a001334:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
1a001338:	f8d2 3124 	ldr.w	r3, [r2, #292]	; 0x124
1a00133c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a001340:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a001344:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
1a001348:	2201      	movs	r2, #1
1a00134a:	4911      	ldr	r1, [pc, #68]	; (1a001390 <Board_SetupClocking+0x6c>)
1a00134c:	2006      	movs	r0, #6
1a00134e:	f000 ffcd 	bl	1a0022ec <Chip_SetupCoreClock>
1a001352:	2400      	movs	r4, #0
1a001354:	e00d      	b.n	1a001372 <Board_SetupClocking+0x4e>
1a001356:	480f      	ldr	r0, [pc, #60]	; (1a001394 <Board_SetupClocking+0x70>)
1a001358:	eb00 0084 	add.w	r0, r0, r4, lsl #2
1a00135c:	f890 3063 	ldrb.w	r3, [r0, #99]	; 0x63
1a001360:	f890 2062 	ldrb.w	r2, [r0, #98]	; 0x62
1a001364:	f890 1061 	ldrb.w	r1, [r0, #97]	; 0x61
1a001368:	f890 0060 	ldrb.w	r0, [r0, #96]	; 0x60
1a00136c:	f000 fe42 	bl	1a001ff4 <Chip_Clock_SetBaseClock>
1a001370:	3401      	adds	r4, #1
1a001372:	2c02      	cmp	r4, #2
1a001374:	d9ef      	bls.n	1a001356 <Board_SetupClocking+0x32>
1a001376:	4b05      	ldr	r3, [pc, #20]	; (1a00138c <Board_SetupClocking+0x68>)
1a001378:	685a      	ldr	r2, [r3, #4]
1a00137a:	f022 020c 	bic.w	r2, r2, #12
1a00137e:	605a      	str	r2, [r3, #4]
1a001380:	685a      	ldr	r2, [r3, #4]
1a001382:	f042 0203 	orr.w	r2, r2, #3
1a001386:	605a      	str	r2, [r3, #4]
1a001388:	bd10      	pop	{r4, pc}
1a00138a:	bf00      	nop
1a00138c:	40043000 	.word	0x40043000
1a001390:	0c28cb00 	.word	0x0c28cb00
1a001394:	1a002d18 	.word	0x1a002d18

1a001398 <Board_SystemInit>:
1a001398:	b508      	push	{r3, lr}
1a00139a:	f7ff ffa9 	bl	1a0012f0 <Board_SetupMuxing>
1a00139e:	f7ff ffc1 	bl	1a001324 <Board_SetupClocking>
1a0013a2:	bd08      	pop	{r3, pc}

1a0013a4 <Chip_UART_GetIndex>:
1a0013a4:	4b09      	ldr	r3, [pc, #36]	; (1a0013cc <Chip_UART_GetIndex+0x28>)
1a0013a6:	4298      	cmp	r0, r3
1a0013a8:	d009      	beq.n	1a0013be <Chip_UART_GetIndex+0x1a>
1a0013aa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a0013ae:	4298      	cmp	r0, r3
1a0013b0:	d007      	beq.n	1a0013c2 <Chip_UART_GetIndex+0x1e>
1a0013b2:	f5a3 2380 	sub.w	r3, r3, #262144	; 0x40000
1a0013b6:	4298      	cmp	r0, r3
1a0013b8:	d005      	beq.n	1a0013c6 <Chip_UART_GetIndex+0x22>
1a0013ba:	2000      	movs	r0, #0
1a0013bc:	4770      	bx	lr
1a0013be:	2002      	movs	r0, #2
1a0013c0:	4770      	bx	lr
1a0013c2:	2003      	movs	r0, #3
1a0013c4:	4770      	bx	lr
1a0013c6:	2001      	movs	r0, #1
1a0013c8:	4770      	bx	lr
1a0013ca:	bf00      	nop
1a0013cc:	400c1000 	.word	0x400c1000

1a0013d0 <Chip_UART_ABIntHandler>:
1a0013d0:	6883      	ldr	r3, [r0, #8]
1a0013d2:	f413 7f80 	tst.w	r3, #256	; 0x100
1a0013d6:	d00f      	beq.n	1a0013f8 <Chip_UART_ABIntHandler+0x28>
1a0013d8:	6a03      	ldr	r3, [r0, #32]
1a0013da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
1a0013de:	6203      	str	r3, [r0, #32]
1a0013e0:	6843      	ldr	r3, [r0, #4]
1a0013e2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
1a0013e6:	6043      	str	r3, [r0, #4]
1a0013e8:	4b0a      	ldr	r3, [pc, #40]	; (1a001414 <Chip_UART_ABIntHandler+0x44>)
1a0013ea:	781b      	ldrb	r3, [r3, #0]
1a0013ec:	f013 0fff 	tst.w	r3, #255	; 0xff
1a0013f0:	d102      	bne.n	1a0013f8 <Chip_UART_ABIntHandler+0x28>
1a0013f2:	2201      	movs	r2, #1
1a0013f4:	4b07      	ldr	r3, [pc, #28]	; (1a001414 <Chip_UART_ABIntHandler+0x44>)
1a0013f6:	701a      	strb	r2, [r3, #0]
1a0013f8:	6883      	ldr	r3, [r0, #8]
1a0013fa:	f413 7f00 	tst.w	r3, #512	; 0x200
1a0013fe:	d007      	beq.n	1a001410 <Chip_UART_ABIntHandler+0x40>
1a001400:	6a03      	ldr	r3, [r0, #32]
1a001402:	f443 7300 	orr.w	r3, r3, #512	; 0x200
1a001406:	6203      	str	r3, [r0, #32]
1a001408:	6843      	ldr	r3, [r0, #4]
1a00140a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
1a00140e:	6043      	str	r3, [r0, #4]
1a001410:	4770      	bx	lr
1a001412:	bf00      	nop
1a001414:	1000008c 	.word	0x1000008c

1a001418 <Chip_UART_Init>:
1a001418:	b530      	push	{r4, r5, lr}
1a00141a:	b083      	sub	sp, #12
1a00141c:	4604      	mov	r4, r0
1a00141e:	f7ff ffc1 	bl	1a0013a4 <Chip_UART_GetIndex>
1a001422:	2301      	movs	r3, #1
1a001424:	461a      	mov	r2, r3
1a001426:	4619      	mov	r1, r3
1a001428:	4d0d      	ldr	r5, [pc, #52]	; (1a001460 <Chip_UART_Init+0x48>)
1a00142a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
1a00142e:	f000 fe71 	bl	1a002114 <Chip_Clock_EnableOpts>
1a001432:	2307      	movs	r3, #7
1a001434:	60a3      	str	r3, [r4, #8]
1a001436:	2300      	movs	r3, #0
1a001438:	65e3      	str	r3, [r4, #92]	; 0x5c
1a00143a:	6063      	str	r3, [r4, #4]
1a00143c:	60e3      	str	r3, [r4, #12]
1a00143e:	6223      	str	r3, [r4, #32]
1a001440:	64e3      	str	r3, [r4, #76]	; 0x4c
1a001442:	6563      	str	r3, [r4, #84]	; 0x54
1a001444:	6523      	str	r3, [r4, #80]	; 0x50
1a001446:	4b07      	ldr	r3, [pc, #28]	; (1a001464 <Chip_UART_Init+0x4c>)
1a001448:	429c      	cmp	r4, r3
1a00144a:	d103      	bne.n	1a001454 <Chip_UART_Init+0x3c>
1a00144c:	2300      	movs	r3, #0
1a00144e:	6123      	str	r3, [r4, #16]
1a001450:	69a3      	ldr	r3, [r4, #24]
1a001452:	9301      	str	r3, [sp, #4]
1a001454:	2303      	movs	r3, #3
1a001456:	60e3      	str	r3, [r4, #12]
1a001458:	2310      	movs	r3, #16
1a00145a:	62a3      	str	r3, [r4, #40]	; 0x28
1a00145c:	b003      	add	sp, #12
1a00145e:	bd30      	pop	{r4, r5, pc}
1a001460:	1a002d84 	.word	0x1a002d84
1a001464:	40082000 	.word	0x40082000

1a001468 <Chip_UART_DeInit>:
1a001468:	b508      	push	{r3, lr}
1a00146a:	2200      	movs	r2, #0
1a00146c:	65c2      	str	r2, [r0, #92]	; 0x5c
1a00146e:	f7ff ff99 	bl	1a0013a4 <Chip_UART_GetIndex>
1a001472:	4b03      	ldr	r3, [pc, #12]	; (1a001480 <Chip_UART_DeInit+0x18>)
1a001474:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a001478:	f000 fe90 	bl	1a00219c <Chip_Clock_Disable>
1a00147c:	bd08      	pop	{r3, pc}
1a00147e:	bf00      	nop
1a001480:	1a002d84 	.word	0x1a002d84

1a001484 <Chip_UART_Send>:
1a001484:	b410      	push	{r4}
1a001486:	2300      	movs	r3, #0
1a001488:	e003      	b.n	1a001492 <Chip_UART_Send+0xe>
1a00148a:	f811 4b01 	ldrb.w	r4, [r1], #1
1a00148e:	6004      	str	r4, [r0, #0]
1a001490:	3301      	adds	r3, #1
1a001492:	4293      	cmp	r3, r2
1a001494:	da03      	bge.n	1a00149e <Chip_UART_Send+0x1a>
1a001496:	6944      	ldr	r4, [r0, #20]
1a001498:	f014 0f20 	tst.w	r4, #32
1a00149c:	d1f5      	bne.n	1a00148a <Chip_UART_Send+0x6>
1a00149e:	4618      	mov	r0, r3
1a0014a0:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0014a4:	4770      	bx	lr
1a0014a6:	bf00      	nop

1a0014a8 <Chip_UART_CheckBusy>:
1a0014a8:	6943      	ldr	r3, [r0, #20]
1a0014aa:	f013 0f40 	tst.w	r3, #64	; 0x40
1a0014ae:	d001      	beq.n	1a0014b4 <Chip_UART_CheckBusy+0xc>
1a0014b0:	2000      	movs	r0, #0
1a0014b2:	4770      	bx	lr
1a0014b4:	2001      	movs	r0, #1
1a0014b6:	4770      	bx	lr

1a0014b8 <Chip_UART_SendBlocking>:
1a0014b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a0014ba:	4607      	mov	r7, r0
1a0014bc:	460d      	mov	r5, r1
1a0014be:	4614      	mov	r4, r2
1a0014c0:	2600      	movs	r6, #0
1a0014c2:	e007      	b.n	1a0014d4 <Chip_UART_SendBlocking+0x1c>
1a0014c4:	4622      	mov	r2, r4
1a0014c6:	4629      	mov	r1, r5
1a0014c8:	4638      	mov	r0, r7
1a0014ca:	f7ff ffdb 	bl	1a001484 <Chip_UART_Send>
1a0014ce:	1a24      	subs	r4, r4, r0
1a0014d0:	4406      	add	r6, r0
1a0014d2:	4405      	add	r5, r0
1a0014d4:	2c00      	cmp	r4, #0
1a0014d6:	dcf5      	bgt.n	1a0014c4 <Chip_UART_SendBlocking+0xc>
1a0014d8:	4630      	mov	r0, r6
1a0014da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1a0014dc <Chip_UART_Read>:
1a0014dc:	b410      	push	{r4}
1a0014de:	2300      	movs	r3, #0
1a0014e0:	e003      	b.n	1a0014ea <Chip_UART_Read+0xe>
1a0014e2:	6804      	ldr	r4, [r0, #0]
1a0014e4:	f801 4b01 	strb.w	r4, [r1], #1
1a0014e8:	3301      	adds	r3, #1
1a0014ea:	4293      	cmp	r3, r2
1a0014ec:	da03      	bge.n	1a0014f6 <Chip_UART_Read+0x1a>
1a0014ee:	6944      	ldr	r4, [r0, #20]
1a0014f0:	f014 0f01 	tst.w	r4, #1
1a0014f4:	d1f5      	bne.n	1a0014e2 <Chip_UART_Read+0x6>
1a0014f6:	4618      	mov	r0, r3
1a0014f8:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0014fc:	4770      	bx	lr
1a0014fe:	bf00      	nop

1a001500 <Chip_UART_ReadBlocking>:
1a001500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a001502:	4607      	mov	r7, r0
1a001504:	460d      	mov	r5, r1
1a001506:	4614      	mov	r4, r2
1a001508:	2600      	movs	r6, #0
1a00150a:	e007      	b.n	1a00151c <Chip_UART_ReadBlocking+0x1c>
1a00150c:	4622      	mov	r2, r4
1a00150e:	4629      	mov	r1, r5
1a001510:	4638      	mov	r0, r7
1a001512:	f7ff ffe3 	bl	1a0014dc <Chip_UART_Read>
1a001516:	1a24      	subs	r4, r4, r0
1a001518:	4406      	add	r6, r0
1a00151a:	4405      	add	r5, r0
1a00151c:	2c00      	cmp	r4, #0
1a00151e:	dcf5      	bgt.n	1a00150c <Chip_UART_ReadBlocking+0xc>
1a001520:	4630      	mov	r0, r6
1a001522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1a001524 <Chip_UART_SetBaud>:
1a001524:	b538      	push	{r3, r4, r5, lr}
1a001526:	4605      	mov	r5, r0
1a001528:	460c      	mov	r4, r1
1a00152a:	f7ff ff3b 	bl	1a0013a4 <Chip_UART_GetIndex>
1a00152e:	4b0d      	ldr	r3, [pc, #52]	; (1a001564 <Chip_UART_SetBaud+0x40>)
1a001530:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a001534:	8900      	ldrh	r0, [r0, #8]
1a001536:	f000 fe5f 	bl	1a0021f8 <Chip_Clock_GetRate>
1a00153a:	0124      	lsls	r4, r4, #4
1a00153c:	fbb0 f3f4 	udiv	r3, r0, r4
1a001540:	68ea      	ldr	r2, [r5, #12]
1a001542:	f042 0280 	orr.w	r2, r2, #128	; 0x80
1a001546:	60ea      	str	r2, [r5, #12]
1a001548:	b2da      	uxtb	r2, r3
1a00154a:	602a      	str	r2, [r5, #0]
1a00154c:	f3c3 2207 	ubfx	r2, r3, #8, #8
1a001550:	606a      	str	r2, [r5, #4]
1a001552:	68ea      	ldr	r2, [r5, #12]
1a001554:	f022 0280 	bic.w	r2, r2, #128	; 0x80
1a001558:	60ea      	str	r2, [r5, #12]
1a00155a:	fbb0 f0f3 	udiv	r0, r0, r3
1a00155e:	0900      	lsrs	r0, r0, #4
1a001560:	bd38      	pop	{r3, r4, r5, pc}
1a001562:	bf00      	nop
1a001564:	1a002d84 	.word	0x1a002d84

1a001568 <Chip_UART_RXIntHandlerRB>:
1a001568:	b530      	push	{r4, r5, lr}
1a00156a:	b083      	sub	sp, #12
1a00156c:	4604      	mov	r4, r0
1a00156e:	460d      	mov	r5, r1
1a001570:	e006      	b.n	1a001580 <Chip_UART_RXIntHandlerRB+0x18>
1a001572:	6823      	ldr	r3, [r4, #0]
1a001574:	a902      	add	r1, sp, #8
1a001576:	f801 3d01 	strb.w	r3, [r1, #-1]!
1a00157a:	4628      	mov	r0, r5
1a00157c:	f000 f908 	bl	1a001790 <RingBuffer_Insert>
1a001580:	6963      	ldr	r3, [r4, #20]
1a001582:	f013 0f01 	tst.w	r3, #1
1a001586:	d1f4      	bne.n	1a001572 <Chip_UART_RXIntHandlerRB+0xa>
1a001588:	b003      	add	sp, #12
1a00158a:	bd30      	pop	{r4, r5, pc}

1a00158c <Chip_UART_TXIntHandlerRB>:
1a00158c:	b530      	push	{r4, r5, lr}
1a00158e:	b083      	sub	sp, #12
1a001590:	4604      	mov	r4, r0
1a001592:	460d      	mov	r5, r1
1a001594:	e002      	b.n	1a00159c <Chip_UART_TXIntHandlerRB+0x10>
1a001596:	f89d 3007 	ldrb.w	r3, [sp, #7]
1a00159a:	6023      	str	r3, [r4, #0]
1a00159c:	6963      	ldr	r3, [r4, #20]
1a00159e:	f013 0f20 	tst.w	r3, #32
1a0015a2:	d006      	beq.n	1a0015b2 <Chip_UART_TXIntHandlerRB+0x26>
1a0015a4:	f10d 0107 	add.w	r1, sp, #7
1a0015a8:	4628      	mov	r0, r5
1a0015aa:	f000 f951 	bl	1a001850 <RingBuffer_Pop>
1a0015ae:	2800      	cmp	r0, #0
1a0015b0:	d1f1      	bne.n	1a001596 <Chip_UART_TXIntHandlerRB+0xa>
1a0015b2:	68ea      	ldr	r2, [r5, #12]
1a0015b4:	692b      	ldr	r3, [r5, #16]
1a0015b6:	429a      	cmp	r2, r3
1a0015b8:	d103      	bne.n	1a0015c2 <Chip_UART_TXIntHandlerRB+0x36>
1a0015ba:	6863      	ldr	r3, [r4, #4]
1a0015bc:	f023 0302 	bic.w	r3, r3, #2
1a0015c0:	6063      	str	r3, [r4, #4]
1a0015c2:	b003      	add	sp, #12
1a0015c4:	bd30      	pop	{r4, r5, pc}
1a0015c6:	bf00      	nop

1a0015c8 <Chip_UART_SendRB>:
1a0015c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0015cc:	4604      	mov	r4, r0
1a0015ce:	460e      	mov	r6, r1
1a0015d0:	4617      	mov	r7, r2
1a0015d2:	4698      	mov	r8, r3
1a0015d4:	6843      	ldr	r3, [r0, #4]
1a0015d6:	f023 0302 	bic.w	r3, r3, #2
1a0015da:	6043      	str	r3, [r0, #4]
1a0015dc:	4642      	mov	r2, r8
1a0015de:	4639      	mov	r1, r7
1a0015e0:	4630      	mov	r0, r6
1a0015e2:	f000 f8ef 	bl	1a0017c4 <RingBuffer_InsertMult>
1a0015e6:	4605      	mov	r5, r0
1a0015e8:	4631      	mov	r1, r6
1a0015ea:	4620      	mov	r0, r4
1a0015ec:	f7ff ffce 	bl	1a00158c <Chip_UART_TXIntHandlerRB>
1a0015f0:	ebc5 0208 	rsb	r2, r5, r8
1a0015f4:	1979      	adds	r1, r7, r5
1a0015f6:	4630      	mov	r0, r6
1a0015f8:	f000 f8e4 	bl	1a0017c4 <RingBuffer_InsertMult>
1a0015fc:	6863      	ldr	r3, [r4, #4]
1a0015fe:	f043 0302 	orr.w	r3, r3, #2
1a001602:	6063      	str	r3, [r4, #4]
1a001604:	4428      	add	r0, r5
1a001606:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00160a:	bf00      	nop

1a00160c <Chip_UART_ReadRB>:
1a00160c:	b508      	push	{r3, lr}
1a00160e:	4608      	mov	r0, r1
1a001610:	4611      	mov	r1, r2
1a001612:	461a      	mov	r2, r3
1a001614:	f000 f936 	bl	1a001884 <RingBuffer_PopMult>
1a001618:	bd08      	pop	{r3, pc}
1a00161a:	bf00      	nop

1a00161c <Chip_UART_IRQRBHandler>:
1a00161c:	b570      	push	{r4, r5, r6, lr}
1a00161e:	4604      	mov	r4, r0
1a001620:	460e      	mov	r6, r1
1a001622:	6843      	ldr	r3, [r0, #4]
1a001624:	f013 0f02 	tst.w	r3, #2
1a001628:	d00b      	beq.n	1a001642 <Chip_UART_IRQRBHandler+0x26>
1a00162a:	4615      	mov	r5, r2
1a00162c:	4611      	mov	r1, r2
1a00162e:	f7ff ffad 	bl	1a00158c <Chip_UART_TXIntHandlerRB>
1a001632:	68ea      	ldr	r2, [r5, #12]
1a001634:	692b      	ldr	r3, [r5, #16]
1a001636:	429a      	cmp	r2, r3
1a001638:	d103      	bne.n	1a001642 <Chip_UART_IRQRBHandler+0x26>
1a00163a:	6863      	ldr	r3, [r4, #4]
1a00163c:	f023 0302 	bic.w	r3, r3, #2
1a001640:	6063      	str	r3, [r4, #4]
1a001642:	4631      	mov	r1, r6
1a001644:	4620      	mov	r0, r4
1a001646:	f7ff ff8f 	bl	1a001568 <Chip_UART_RXIntHandlerRB>
1a00164a:	4620      	mov	r0, r4
1a00164c:	f7ff fec0 	bl	1a0013d0 <Chip_UART_ABIntHandler>
1a001650:	bd70      	pop	{r4, r5, r6, pc}
1a001652:	bf00      	nop

1a001654 <Chip_UART_SetBaudFDR>:
1a001654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a001658:	b083      	sub	sp, #12
1a00165a:	4683      	mov	fp, r0
1a00165c:	4688      	mov	r8, r1
1a00165e:	f7ff fea1 	bl	1a0013a4 <Chip_UART_GetIndex>
1a001662:	4b35      	ldr	r3, [pc, #212]	; (1a001738 <Chip_UART_SetBaudFDR+0xe4>)
1a001664:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a001668:	8900      	ldrh	r0, [r0, #8]
1a00166a:	f000 fdc5 	bl	1a0021f8 <Chip_Clock_GetRate>
1a00166e:	4606      	mov	r6, r0
1a001670:	f04f 37ff 	mov.w	r7, #4294967295
1a001674:	2401      	movs	r4, #1
1a001676:	2300      	movs	r3, #0
1a001678:	9301      	str	r3, [sp, #4]
1a00167a:	46a2      	mov	sl, r4
1a00167c:	4699      	mov	r9, r3
1a00167e:	e029      	b.n	1a0016d4 <Chip_UART_SetBaudFDR+0x80>
1a001680:	2300      	movs	r3, #0
1a001682:	0932      	lsrs	r2, r6, #4
1a001684:	0730      	lsls	r0, r6, #28
1a001686:	fba4 0100 	umull	r0, r1, r4, r0
1a00168a:	fb04 1102 	mla	r1, r4, r2, r1
1a00168e:	1962      	adds	r2, r4, r5
1a001690:	fb08 f202 	mul.w	r2, r8, r2
1a001694:	f000 ff9c 	bl	1a0025d0 <__aeabi_uldivmod>
1a001698:	4603      	mov	r3, r0
1a00169a:	460a      	mov	r2, r1
1a00169c:	2800      	cmp	r0, #0
1a00169e:	da01      	bge.n	1a0016a4 <Chip_UART_SetBaudFDR+0x50>
1a0016a0:	4243      	negs	r3, r0
1a0016a2:	1c4a      	adds	r2, r1, #1
1a0016a4:	429f      	cmp	r7, r3
1a0016a6:	d30a      	bcc.n	1a0016be <Chip_UART_SetBaudFDR+0x6a>
1a0016a8:	b14a      	cbz	r2, 1a0016be <Chip_UART_SetBaudFDR+0x6a>
1a0016aa:	0c11      	lsrs	r1, r2, #16
1a0016ac:	d107      	bne.n	1a0016be <Chip_UART_SetBaudFDR+0x6a>
1a0016ae:	2a02      	cmp	r2, #2
1a0016b0:	d800      	bhi.n	1a0016b4 <Chip_UART_SetBaudFDR+0x60>
1a0016b2:	b925      	cbnz	r5, 1a0016be <Chip_UART_SetBaudFDR+0x6a>
1a0016b4:	b14b      	cbz	r3, 1a0016ca <Chip_UART_SetBaudFDR+0x76>
1a0016b6:	461f      	mov	r7, r3
1a0016b8:	9501      	str	r5, [sp, #4]
1a0016ba:	46a2      	mov	sl, r4
1a0016bc:	4691      	mov	r9, r2
1a0016be:	3501      	adds	r5, #1
1a0016c0:	e000      	b.n	1a0016c4 <Chip_UART_SetBaudFDR+0x70>
1a0016c2:	2500      	movs	r5, #0
1a0016c4:	42ac      	cmp	r4, r5
1a0016c6:	d8db      	bhi.n	1a001680 <Chip_UART_SetBaudFDR+0x2c>
1a0016c8:	e003      	b.n	1a0016d2 <Chip_UART_SetBaudFDR+0x7e>
1a0016ca:	461f      	mov	r7, r3
1a0016cc:	9501      	str	r5, [sp, #4]
1a0016ce:	46a2      	mov	sl, r4
1a0016d0:	4691      	mov	r9, r2
1a0016d2:	3401      	adds	r4, #1
1a0016d4:	b10f      	cbz	r7, 1a0016da <Chip_UART_SetBaudFDR+0x86>
1a0016d6:	2c0f      	cmp	r4, #15
1a0016d8:	d9f3      	bls.n	1a0016c2 <Chip_UART_SetBaudFDR+0x6e>
1a0016da:	f1b9 0f00 	cmp.w	r9, #0
1a0016de:	d026      	beq.n	1a00172e <Chip_UART_SetBaudFDR+0xda>
1a0016e0:	f8db 300c 	ldr.w	r3, [fp, #12]
1a0016e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a0016e8:	f8cb 300c 	str.w	r3, [fp, #12]
1a0016ec:	fa5f f389 	uxtb.w	r3, r9
1a0016f0:	f8cb 3000 	str.w	r3, [fp]
1a0016f4:	f3c9 2307 	ubfx	r3, r9, #8, #8
1a0016f8:	f8cb 3004 	str.w	r3, [fp, #4]
1a0016fc:	f8db 300c 	ldr.w	r3, [fp, #12]
1a001700:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a001704:	f8cb 300c 	str.w	r3, [fp, #12]
1a001708:	ea4f 130a 	mov.w	r3, sl, lsl #4
1a00170c:	b2da      	uxtb	r2, r3
1a00170e:	9901      	ldr	r1, [sp, #4]
1a001710:	f001 030f 	and.w	r3, r1, #15
1a001714:	4313      	orrs	r3, r2
1a001716:	f8cb 3028 	str.w	r3, [fp, #40]	; 0x28
1a00171a:	0933      	lsrs	r3, r6, #4
1a00171c:	fb03 f30a 	mul.w	r3, r3, sl
1a001720:	eb0a 0001 	add.w	r0, sl, r1
1a001724:	fb00 f009 	mul.w	r0, r0, r9
1a001728:	fbb3 f0f0 	udiv	r0, r3, r0
1a00172c:	e000      	b.n	1a001730 <Chip_UART_SetBaudFDR+0xdc>
1a00172e:	2000      	movs	r0, #0
1a001730:	b003      	add	sp, #12
1a001732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001736:	bf00      	nop
1a001738:	1a002d84 	.word	0x1a002d84

1a00173c <Chip_UART_GetABEOStatus>:
1a00173c:	4b01      	ldr	r3, [pc, #4]	; (1a001744 <Chip_UART_GetABEOStatus+0x8>)
1a00173e:	7818      	ldrb	r0, [r3, #0]
1a001740:	4770      	bx	lr
1a001742:	bf00      	nop
1a001744:	1000008c 	.word	0x1000008c

1a001748 <Chip_UART_ABCmd>:
1a001748:	2b01      	cmp	r3, #1
1a00174a:	d116      	bne.n	1a00177a <Chip_UART_ABCmd+0x32>
1a00174c:	68c3      	ldr	r3, [r0, #12]
1a00174e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a001752:	60c3      	str	r3, [r0, #12]
1a001754:	2300      	movs	r3, #0
1a001756:	6003      	str	r3, [r0, #0]
1a001758:	6043      	str	r3, [r0, #4]
1a00175a:	68c3      	ldr	r3, [r0, #12]
1a00175c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a001760:	60c3      	str	r3, [r0, #12]
1a001762:	2310      	movs	r3, #16
1a001764:	6283      	str	r3, [r0, #40]	; 0x28
1a001766:	2901      	cmp	r1, #1
1a001768:	d101      	bne.n	1a00176e <Chip_UART_ABCmd+0x26>
1a00176a:	2303      	movs	r3, #3
1a00176c:	e000      	b.n	1a001770 <Chip_UART_ABCmd+0x28>
1a00176e:	2301      	movs	r3, #1
1a001770:	b10a      	cbz	r2, 1a001776 <Chip_UART_ABCmd+0x2e>
1a001772:	f043 0304 	orr.w	r3, r3, #4
1a001776:	6203      	str	r3, [r0, #32]
1a001778:	4770      	bx	lr
1a00177a:	2300      	movs	r3, #0
1a00177c:	6203      	str	r3, [r0, #32]
1a00177e:	4770      	bx	lr

1a001780 <RingBuffer_Init>:
1a001780:	6001      	str	r1, [r0, #0]
1a001782:	6043      	str	r3, [r0, #4]
1a001784:	6082      	str	r2, [r0, #8]
1a001786:	2300      	movs	r3, #0
1a001788:	6103      	str	r3, [r0, #16]
1a00178a:	60c3      	str	r3, [r0, #12]
1a00178c:	2001      	movs	r0, #1
1a00178e:	4770      	bx	lr

1a001790 <RingBuffer_Insert>:
1a001790:	b538      	push	{r3, r4, r5, lr}
1a001792:	6805      	ldr	r5, [r0, #0]
1a001794:	68c3      	ldr	r3, [r0, #12]
1a001796:	6902      	ldr	r2, [r0, #16]
1a001798:	1a9b      	subs	r3, r3, r2
1a00179a:	6842      	ldr	r2, [r0, #4]
1a00179c:	4293      	cmp	r3, r2
1a00179e:	da0e      	bge.n	1a0017be <RingBuffer_Insert+0x2e>
1a0017a0:	4604      	mov	r4, r0
1a0017a2:	68c3      	ldr	r3, [r0, #12]
1a0017a4:	3a01      	subs	r2, #1
1a0017a6:	4013      	ands	r3, r2
1a0017a8:	6880      	ldr	r0, [r0, #8]
1a0017aa:	4602      	mov	r2, r0
1a0017ac:	fb00 5003 	mla	r0, r0, r3, r5
1a0017b0:	f001 f9dc 	bl	1a002b6c <memcpy>
1a0017b4:	68e3      	ldr	r3, [r4, #12]
1a0017b6:	3301      	adds	r3, #1
1a0017b8:	60e3      	str	r3, [r4, #12]
1a0017ba:	2001      	movs	r0, #1
1a0017bc:	bd38      	pop	{r3, r4, r5, pc}
1a0017be:	2000      	movs	r0, #0
1a0017c0:	bd38      	pop	{r3, r4, r5, pc}
1a0017c2:	bf00      	nop

1a0017c4 <RingBuffer_InsertMult>:
1a0017c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0017c8:	f8d0 e000 	ldr.w	lr, [r0]
1a0017cc:	68c3      	ldr	r3, [r0, #12]
1a0017ce:	6904      	ldr	r4, [r0, #16]
1a0017d0:	1b1c      	subs	r4, r3, r4
1a0017d2:	6843      	ldr	r3, [r0, #4]
1a0017d4:	429c      	cmp	r4, r3
1a0017d6:	da37      	bge.n	1a001848 <RingBuffer_InsertMult+0x84>
1a0017d8:	68c5      	ldr	r5, [r0, #12]
1a0017da:	6907      	ldr	r7, [r0, #16]
1a0017dc:	1bef      	subs	r7, r5, r7
1a0017de:	1bdf      	subs	r7, r3, r7
1a0017e0:	68c4      	ldr	r4, [r0, #12]
1a0017e2:	f103 3cff 	add.w	ip, r3, #4294967295
1a0017e6:	ea0c 0c04 	and.w	ip, ip, r4
1a0017ea:	eb07 040c 	add.w	r4, r7, ip
1a0017ee:	429c      	cmp	r4, r3
1a0017f0:	d302      	bcc.n	1a0017f8 <RingBuffer_InsertMult+0x34>
1a0017f2:	ebcc 0603 	rsb	r6, ip, r3
1a0017f6:	e000      	b.n	1a0017fa <RingBuffer_InsertMult+0x36>
1a0017f8:	463e      	mov	r6, r7
1a0017fa:	4688      	mov	r8, r1
1a0017fc:	4605      	mov	r5, r0
1a0017fe:	1bbf      	subs	r7, r7, r6
1a001800:	4296      	cmp	r6, r2
1a001802:	bfa8      	it	ge
1a001804:	4616      	movge	r6, r2
1a001806:	1b94      	subs	r4, r2, r6
1a001808:	42bc      	cmp	r4, r7
1a00180a:	bfa8      	it	ge
1a00180c:	463c      	movge	r4, r7
1a00180e:	6880      	ldr	r0, [r0, #8]
1a001810:	fb00 f206 	mul.w	r2, r0, r6
1a001814:	fb0c e000 	mla	r0, ip, r0, lr
1a001818:	f001 f9a8 	bl	1a002b6c <memcpy>
1a00181c:	68eb      	ldr	r3, [r5, #12]
1a00181e:	4433      	add	r3, r6
1a001820:	60eb      	str	r3, [r5, #12]
1a001822:	682f      	ldr	r7, [r5, #0]
1a001824:	6868      	ldr	r0, [r5, #4]
1a001826:	3801      	subs	r0, #1
1a001828:	4003      	ands	r3, r0
1a00182a:	68a8      	ldr	r0, [r5, #8]
1a00182c:	fb00 f204 	mul.w	r2, r0, r4
1a001830:	fb00 8106 	mla	r1, r0, r6, r8
1a001834:	fb03 7000 	mla	r0, r3, r0, r7
1a001838:	f001 f998 	bl	1a002b6c <memcpy>
1a00183c:	68eb      	ldr	r3, [r5, #12]
1a00183e:	4423      	add	r3, r4
1a001840:	60eb      	str	r3, [r5, #12]
1a001842:	1930      	adds	r0, r6, r4
1a001844:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a001848:	2000      	movs	r0, #0
1a00184a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00184e:	bf00      	nop

1a001850 <RingBuffer_Pop>:
1a001850:	b538      	push	{r3, r4, r5, lr}
1a001852:	6805      	ldr	r5, [r0, #0]
1a001854:	68c2      	ldr	r2, [r0, #12]
1a001856:	6903      	ldr	r3, [r0, #16]
1a001858:	429a      	cmp	r2, r3
1a00185a:	d011      	beq.n	1a001880 <RingBuffer_Pop+0x30>
1a00185c:	460b      	mov	r3, r1
1a00185e:	4604      	mov	r4, r0
1a001860:	6902      	ldr	r2, [r0, #16]
1a001862:	6840      	ldr	r0, [r0, #4]
1a001864:	3801      	subs	r0, #1
1a001866:	4010      	ands	r0, r2
1a001868:	68a1      	ldr	r1, [r4, #8]
1a00186a:	460a      	mov	r2, r1
1a00186c:	fb01 5100 	mla	r1, r1, r0, r5
1a001870:	4618      	mov	r0, r3
1a001872:	f001 f97b 	bl	1a002b6c <memcpy>
1a001876:	6923      	ldr	r3, [r4, #16]
1a001878:	3301      	adds	r3, #1
1a00187a:	6123      	str	r3, [r4, #16]
1a00187c:	2001      	movs	r0, #1
1a00187e:	bd38      	pop	{r3, r4, r5, pc}
1a001880:	2000      	movs	r0, #0
1a001882:	bd38      	pop	{r3, r4, r5, pc}

1a001884 <RingBuffer_PopMult>:
1a001884:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a001886:	f8d0 e000 	ldr.w	lr, [r0]
1a00188a:	68c4      	ldr	r4, [r0, #12]
1a00188c:	6903      	ldr	r3, [r0, #16]
1a00188e:	429c      	cmp	r4, r3
1a001890:	d037      	beq.n	1a001902 <RingBuffer_PopMult+0x7e>
1a001892:	68c3      	ldr	r3, [r0, #12]
1a001894:	6904      	ldr	r4, [r0, #16]
1a001896:	1b1b      	subs	r3, r3, r4
1a001898:	6904      	ldr	r4, [r0, #16]
1a00189a:	6847      	ldr	r7, [r0, #4]
1a00189c:	f107 3cff 	add.w	ip, r7, #4294967295
1a0018a0:	ea0c 0c04 	and.w	ip, ip, r4
1a0018a4:	eb0c 0403 	add.w	r4, ip, r3
1a0018a8:	42bc      	cmp	r4, r7
1a0018aa:	d302      	bcc.n	1a0018b2 <RingBuffer_PopMult+0x2e>
1a0018ac:	ebcc 0707 	rsb	r7, ip, r7
1a0018b0:	e000      	b.n	1a0018b4 <RingBuffer_PopMult+0x30>
1a0018b2:	461f      	mov	r7, r3
1a0018b4:	460e      	mov	r6, r1
1a0018b6:	4605      	mov	r5, r0
1a0018b8:	1bdb      	subs	r3, r3, r7
1a0018ba:	4297      	cmp	r7, r2
1a0018bc:	bfa8      	it	ge
1a0018be:	4617      	movge	r7, r2
1a0018c0:	1bd4      	subs	r4, r2, r7
1a0018c2:	429c      	cmp	r4, r3
1a0018c4:	bfa8      	it	ge
1a0018c6:	461c      	movge	r4, r3
1a0018c8:	6881      	ldr	r1, [r0, #8]
1a0018ca:	fb01 f207 	mul.w	r2, r1, r7
1a0018ce:	fb0c e101 	mla	r1, ip, r1, lr
1a0018d2:	4630      	mov	r0, r6
1a0018d4:	f001 f94a 	bl	1a002b6c <memcpy>
1a0018d8:	692b      	ldr	r3, [r5, #16]
1a0018da:	443b      	add	r3, r7
1a0018dc:	612b      	str	r3, [r5, #16]
1a0018de:	6829      	ldr	r1, [r5, #0]
1a0018e0:	686a      	ldr	r2, [r5, #4]
1a0018e2:	3a01      	subs	r2, #1
1a0018e4:	4013      	ands	r3, r2
1a0018e6:	68a8      	ldr	r0, [r5, #8]
1a0018e8:	fb00 f204 	mul.w	r2, r0, r4
1a0018ec:	fb03 1100 	mla	r1, r3, r0, r1
1a0018f0:	fb00 6007 	mla	r0, r0, r7, r6
1a0018f4:	f001 f93a 	bl	1a002b6c <memcpy>
1a0018f8:	692b      	ldr	r3, [r5, #16]
1a0018fa:	4423      	add	r3, r4
1a0018fc:	612b      	str	r3, [r5, #16]
1a0018fe:	1938      	adds	r0, r7, r4
1a001900:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a001902:	2000      	movs	r0, #0
1a001904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a001906:	bf00      	nop

1a001908 <Chip_USB_PllSetup>:
1a001908:	b508      	push	{r3, lr}
1a00190a:	2007      	movs	r0, #7
1a00190c:	f000 f9e2 	bl	1a001cd4 <Chip_Clock_GetClockInputHz>
1a001910:	4b08      	ldr	r3, [pc, #32]	; (1a001934 <Chip_USB_PllSetup+0x2c>)
1a001912:	4298      	cmp	r0, r3
1a001914:	d00d      	beq.n	1a001932 <Chip_USB_PllSetup+0x2a>
1a001916:	4a08      	ldr	r2, [pc, #32]	; (1a001938 <Chip_USB_PllSetup+0x30>)
1a001918:	2100      	movs	r1, #0
1a00191a:	2006      	movs	r0, #6
1a00191c:	f000 fcaa 	bl	1a002274 <Chip_Clock_SetupPLL>
1a001920:	2000      	movs	r0, #0
1a001922:	f000 fcc7 	bl	1a0022b4 <Chip_Clock_EnablePLL>
1a001926:	2000      	movs	r0, #0
1a001928:	f000 fcd8 	bl	1a0022dc <Chip_Clock_GetPLLStatus>
1a00192c:	f010 0f01 	tst.w	r0, #1
1a001930:	d0f9      	beq.n	1a001926 <Chip_USB_PllSetup+0x1e>
1a001932:	bd08      	pop	{r3, pc}
1a001934:	1c9c3800 	.word	0x1c9c3800
1a001938:	1a002d94 	.word	0x1a002d94

1a00193c <Chip_USB0_Init>:
1a00193c:	b508      	push	{r3, lr}
1a00193e:	f7ff ffe3 	bl	1a001908 <Chip_USB_PllSetup>
1a001942:	2301      	movs	r3, #1
1a001944:	461a      	mov	r2, r3
1a001946:	2107      	movs	r1, #7
1a001948:	4618      	mov	r0, r3
1a00194a:	f000 fb53 	bl	1a001ff4 <Chip_Clock_SetBaseClock>
1a00194e:	2001      	movs	r0, #1
1a001950:	f000 fb98 	bl	1a002084 <Chip_Clock_EnableBaseClock>
1a001954:	2301      	movs	r3, #1
1a001956:	461a      	mov	r2, r3
1a001958:	4619      	mov	r1, r3
1a00195a:	2065      	movs	r0, #101	; 0x65
1a00195c:	f000 fbda 	bl	1a002114 <Chip_Clock_EnableOpts>
1a001960:	4a02      	ldr	r2, [pc, #8]	; (1a00196c <Chip_USB0_Init+0x30>)
1a001962:	6853      	ldr	r3, [r2, #4]
1a001964:	f023 0320 	bic.w	r3, r3, #32
1a001968:	6053      	str	r3, [r2, #4]
1a00196a:	bd08      	pop	{r3, pc}
1a00196c:	40043000 	.word	0x40043000

1a001970 <Chip_USB1_Init>:
1a001970:	b508      	push	{r3, lr}
1a001972:	f7ff ffc9 	bl	1a001908 <Chip_USB_PllSetup>
1a001976:	2204      	movs	r2, #4
1a001978:	2107      	movs	r1, #7
1a00197a:	2000      	movs	r0, #0
1a00197c:	f000 f964 	bl	1a001c48 <Chip_Clock_SetDivider>
1a001980:	2202      	movs	r2, #2
1a001982:	210c      	movs	r1, #12
1a001984:	2003      	movs	r0, #3
1a001986:	f000 f95f 	bl	1a001c48 <Chip_Clock_SetDivider>
1a00198a:	2301      	movs	r3, #1
1a00198c:	461a      	mov	r2, r3
1a00198e:	210f      	movs	r1, #15
1a001990:	2003      	movs	r0, #3
1a001992:	f000 fb2f 	bl	1a001ff4 <Chip_Clock_SetBaseClock>
1a001996:	2003      	movs	r0, #3
1a001998:	f000 fb74 	bl	1a002084 <Chip_Clock_EnableBaseClock>
1a00199c:	2301      	movs	r3, #1
1a00199e:	461a      	mov	r2, r3
1a0019a0:	4619      	mov	r1, r3
1a0019a2:	206e      	movs	r0, #110	; 0x6e
1a0019a4:	f000 fbb6 	bl	1a002114 <Chip_Clock_EnableOpts>
1a0019a8:	2212      	movs	r2, #18
1a0019aa:	4b02      	ldr	r3, [pc, #8]	; (1a0019b4 <Chip_USB1_Init+0x44>)
1a0019ac:	f8c3 2c80 	str.w	r2, [r3, #3200]	; 0xc80
1a0019b0:	bd08      	pop	{r3, pc}
1a0019b2:	bf00      	nop
1a0019b4:	40086000 	.word	0x40086000

1a0019b8 <SystemCoreClockUpdate>:
1a0019b8:	b508      	push	{r3, lr}
1a0019ba:	2069      	movs	r0, #105	; 0x69
1a0019bc:	f000 fc1c 	bl	1a0021f8 <Chip_Clock_GetRate>
1a0019c0:	4b01      	ldr	r3, [pc, #4]	; (1a0019c8 <SystemCoreClockUpdate+0x10>)
1a0019c2:	6018      	str	r0, [r3, #0]
1a0019c4:	bd08      	pop	{r3, pc}
1a0019c6:	bf00      	nop
1a0019c8:	100001f8 	.word	0x100001f8

1a0019cc <pll_calc_divs>:
1a0019cc:	b5f0      	push	{r4, r5, r6, r7, lr}
1a0019ce:	680b      	ldr	r3, [r1, #0]
1a0019d0:	f013 0f80 	tst.w	r3, #128	; 0x80
1a0019d4:	d002      	beq.n	1a0019dc <pll_calc_divs+0x10>
1a0019d6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a0019da:	600b      	str	r3, [r1, #0]
1a0019dc:	4607      	mov	r7, r0
1a0019de:	2501      	movs	r5, #1
1a0019e0:	e042      	b.n	1a001a68 <pll_calc_divs+0x9c>
1a0019e2:	f8d1 e000 	ldr.w	lr, [r1]
1a0019e6:	f01e 0f40 	tst.w	lr, #64	; 0x40
1a0019ea:	d008      	beq.n	1a0019fe <pll_calc_divs+0x32>
1a0019ec:	1c73      	adds	r3, r6, #1
1a0019ee:	fa04 f203 	lsl.w	r2, r4, r3
1a0019f2:	694b      	ldr	r3, [r1, #20]
1a0019f4:	fb03 f302 	mul.w	r3, r3, r2
1a0019f8:	fbb3 f3f5 	udiv	r3, r3, r5
1a0019fc:	e004      	b.n	1a001a08 <pll_calc_divs+0x3c>
1a0019fe:	694b      	ldr	r3, [r1, #20]
1a001a00:	fb03 f304 	mul.w	r3, r3, r4
1a001a04:	fbb3 f3f5 	udiv	r3, r3, r5
1a001a08:	4a19      	ldr	r2, [pc, #100]	; (1a001a70 <pll_calc_divs+0xa4>)
1a001a0a:	4293      	cmp	r3, r2
1a001a0c:	d920      	bls.n	1a001a50 <pll_calc_divs+0x84>
1a001a0e:	4a19      	ldr	r2, [pc, #100]	; (1a001a74 <pll_calc_divs+0xa8>)
1a001a10:	4293      	cmp	r3, r2
1a001a12:	d823      	bhi.n	1a001a5c <pll_calc_divs+0x90>
1a001a14:	f01e 0f80 	tst.w	lr, #128	; 0x80
1a001a18:	d103      	bne.n	1a001a22 <pll_calc_divs+0x56>
1a001a1a:	1c72      	adds	r2, r6, #1
1a001a1c:	fa23 f202 	lsr.w	r2, r3, r2
1a001a20:	e000      	b.n	1a001a24 <pll_calc_divs+0x58>
1a001a22:	461a      	mov	r2, r3
1a001a24:	ebb0 0e02 	subs.w	lr, r0, r2
1a001a28:	d502      	bpl.n	1a001a30 <pll_calc_divs+0x64>
1a001a2a:	f1ce 0c00 	rsb	ip, lr, #0
1a001a2e:	e000      	b.n	1a001a32 <pll_calc_divs+0x66>
1a001a30:	46f4      	mov	ip, lr
1a001a32:	4567      	cmp	r7, ip
1a001a34:	d90c      	bls.n	1a001a50 <pll_calc_divs+0x84>
1a001a36:	608d      	str	r5, [r1, #8]
1a001a38:	1c77      	adds	r7, r6, #1
1a001a3a:	60cf      	str	r7, [r1, #12]
1a001a3c:	610c      	str	r4, [r1, #16]
1a001a3e:	618a      	str	r2, [r1, #24]
1a001a40:	61cb      	str	r3, [r1, #28]
1a001a42:	f1be 0f00 	cmp.w	lr, #0
1a001a46:	da02      	bge.n	1a001a4e <pll_calc_divs+0x82>
1a001a48:	f1ce 0700 	rsb	r7, lr, #0
1a001a4c:	e000      	b.n	1a001a50 <pll_calc_divs+0x84>
1a001a4e:	4677      	mov	r7, lr
1a001a50:	3401      	adds	r4, #1
1a001a52:	e000      	b.n	1a001a56 <pll_calc_divs+0x8a>
1a001a54:	2401      	movs	r4, #1
1a001a56:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
1a001a5a:	ddc2      	ble.n	1a0019e2 <pll_calc_divs+0x16>
1a001a5c:	3601      	adds	r6, #1
1a001a5e:	e000      	b.n	1a001a62 <pll_calc_divs+0x96>
1a001a60:	2600      	movs	r6, #0
1a001a62:	2e03      	cmp	r6, #3
1a001a64:	ddf6      	ble.n	1a001a54 <pll_calc_divs+0x88>
1a001a66:	3501      	adds	r5, #1
1a001a68:	2d04      	cmp	r5, #4
1a001a6a:	ddf9      	ble.n	1a001a60 <pll_calc_divs+0x94>
1a001a6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a001a6e:	bf00      	nop
1a001a70:	094c5eff 	.word	0x094c5eff
1a001a74:	1312d000 	.word	0x1312d000

1a001a78 <pll_get_frac>:
1a001a78:	b5f0      	push	{r4, r5, r6, r7, lr}
1a001a7a:	b099      	sub	sp, #100	; 0x64
1a001a7c:	4605      	mov	r5, r0
1a001a7e:	460c      	mov	r4, r1
1a001a80:	2260      	movs	r2, #96	; 0x60
1a001a82:	2100      	movs	r1, #0
1a001a84:	4668      	mov	r0, sp
1a001a86:	f001 f87c 	bl	1a002b82 <memset>
1a001a8a:	2380      	movs	r3, #128	; 0x80
1a001a8c:	9300      	str	r3, [sp, #0]
1a001a8e:	6963      	ldr	r3, [r4, #20]
1a001a90:	9305      	str	r3, [sp, #20]
1a001a92:	7923      	ldrb	r3, [r4, #4]
1a001a94:	f88d 3004 	strb.w	r3, [sp, #4]
1a001a98:	4669      	mov	r1, sp
1a001a9a:	4628      	mov	r0, r5
1a001a9c:	f7ff ff96 	bl	1a0019cc <pll_calc_divs>
1a001aa0:	9b06      	ldr	r3, [sp, #24]
1a001aa2:	429d      	cmp	r5, r3
1a001aa4:	d107      	bne.n	1a001ab6 <pll_get_frac+0x3e>
1a001aa6:	466d      	mov	r5, sp
1a001aa8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001aaa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001aac:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001ab0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001ab4:	e05e      	b.n	1a001b74 <pll_get_frac+0xfc>
1a001ab6:	1aeb      	subs	r3, r5, r3
1a001ab8:	d500      	bpl.n	1a001abc <pll_get_frac+0x44>
1a001aba:	425b      	negs	r3, r3
1a001abc:	461e      	mov	r6, r3
1a001abe:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a001ac0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a001ac4:	9310      	str	r3, [sp, #64]	; 0x40
1a001ac6:	6963      	ldr	r3, [r4, #20]
1a001ac8:	9315      	str	r3, [sp, #84]	; 0x54
1a001aca:	7923      	ldrb	r3, [r4, #4]
1a001acc:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
1a001ad0:	a910      	add	r1, sp, #64	; 0x40
1a001ad2:	4628      	mov	r0, r5
1a001ad4:	f7ff ff7a 	bl	1a0019cc <pll_calc_divs>
1a001ad8:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a001ada:	429d      	cmp	r5, r3
1a001adc:	d107      	bne.n	1a001aee <pll_get_frac+0x76>
1a001ade:	ad10      	add	r5, sp, #64	; 0x40
1a001ae0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001ae2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001ae4:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001ae8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001aec:	e042      	b.n	1a001b74 <pll_get_frac+0xfc>
1a001aee:	1aeb      	subs	r3, r5, r3
1a001af0:	d500      	bpl.n	1a001af4 <pll_get_frac+0x7c>
1a001af2:	425b      	negs	r3, r3
1a001af4:	461f      	mov	r7, r3
1a001af6:	4b20      	ldr	r3, [pc, #128]	; (1a001b78 <pll_get_frac+0x100>)
1a001af8:	429d      	cmp	r5, r3
1a001afa:	d812      	bhi.n	1a001b22 <pll_get_frac+0xaa>
1a001afc:	2340      	movs	r3, #64	; 0x40
1a001afe:	9308      	str	r3, [sp, #32]
1a001b00:	6963      	ldr	r3, [r4, #20]
1a001b02:	930d      	str	r3, [sp, #52]	; 0x34
1a001b04:	a908      	add	r1, sp, #32
1a001b06:	4628      	mov	r0, r5
1a001b08:	f7ff ff60 	bl	1a0019cc <pll_calc_divs>
1a001b0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a001b0e:	429d      	cmp	r5, r3
1a001b10:	d107      	bne.n	1a001b22 <pll_get_frac+0xaa>
1a001b12:	ad08      	add	r5, sp, #32
1a001b14:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001b16:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001b18:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001b1c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001b20:	e028      	b.n	1a001b74 <pll_get_frac+0xfc>
1a001b22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a001b24:	1aed      	subs	r5, r5, r3
1a001b26:	d500      	bpl.n	1a001b2a <pll_get_frac+0xb2>
1a001b28:	426d      	negs	r5, r5
1a001b2a:	42ae      	cmp	r6, r5
1a001b2c:	dc11      	bgt.n	1a001b52 <pll_get_frac+0xda>
1a001b2e:	42be      	cmp	r6, r7
1a001b30:	dc07      	bgt.n	1a001b42 <pll_get_frac+0xca>
1a001b32:	466d      	mov	r5, sp
1a001b34:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001b36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001b38:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001b3c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001b40:	e018      	b.n	1a001b74 <pll_get_frac+0xfc>
1a001b42:	ad10      	add	r5, sp, #64	; 0x40
1a001b44:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001b46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001b48:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001b4c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001b50:	e010      	b.n	1a001b74 <pll_get_frac+0xfc>
1a001b52:	42af      	cmp	r7, r5
1a001b54:	db07      	blt.n	1a001b66 <pll_get_frac+0xee>
1a001b56:	ad08      	add	r5, sp, #32
1a001b58:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001b5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001b5c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001b60:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001b64:	e006      	b.n	1a001b74 <pll_get_frac+0xfc>
1a001b66:	ad10      	add	r5, sp, #64	; 0x40
1a001b68:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001b6a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001b6c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001b70:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001b74:	b019      	add	sp, #100	; 0x64
1a001b76:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a001b78:	068e7780 	.word	0x068e7780

1a001b7c <Chip_Clock_TestMainPLLMultiplier>:
1a001b7c:	fb00 f001 	mul.w	r0, r0, r1
1a001b80:	4290      	cmp	r0, r2
1a001b82:	d305      	bcc.n	1a001b90 <Chip_Clock_TestMainPLLMultiplier+0x14>
1a001b84:	4a05      	ldr	r2, [pc, #20]	; (1a001b9c <Chip_Clock_TestMainPLLMultiplier+0x20>)
1a001b86:	4290      	cmp	r0, r2
1a001b88:	d804      	bhi.n	1a001b94 <Chip_Clock_TestMainPLLMultiplier+0x18>
1a001b8a:	4298      	cmp	r0, r3
1a001b8c:	d804      	bhi.n	1a001b98 <Chip_Clock_TestMainPLLMultiplier+0x1c>
1a001b8e:	4770      	bx	lr
1a001b90:	2000      	movs	r0, #0
1a001b92:	4770      	bx	lr
1a001b94:	2000      	movs	r0, #0
1a001b96:	4770      	bx	lr
1a001b98:	2000      	movs	r0, #0
1a001b9a:	4770      	bx	lr
1a001b9c:	0c28cb00 	.word	0x0c28cb00

1a001ba0 <Chip_Clock_FindBaseClock>:
1a001ba0:	b430      	push	{r4, r5}
1a001ba2:	4605      	mov	r5, r0
1a001ba4:	2300      	movs	r3, #0
1a001ba6:	201c      	movs	r0, #28
1a001ba8:	e011      	b.n	1a001bce <Chip_Clock_FindBaseClock+0x2e>
1a001baa:	eb03 0143 	add.w	r1, r3, r3, lsl #1
1a001bae:	004a      	lsls	r2, r1, #1
1a001bb0:	490d      	ldr	r1, [pc, #52]	; (1a001be8 <Chip_Clock_FindBaseClock+0x48>)
1a001bb2:	5a8a      	ldrh	r2, [r1, r2]
1a001bb4:	42aa      	cmp	r2, r5
1a001bb6:	d807      	bhi.n	1a001bc8 <Chip_Clock_FindBaseClock+0x28>
1a001bb8:	eb03 0143 	add.w	r1, r3, r3, lsl #1
1a001bbc:	004a      	lsls	r2, r1, #1
1a001bbe:	490a      	ldr	r1, [pc, #40]	; (1a001be8 <Chip_Clock_FindBaseClock+0x48>)
1a001bc0:	440a      	add	r2, r1
1a001bc2:	8852      	ldrh	r2, [r2, #2]
1a001bc4:	4295      	cmp	r5, r2
1a001bc6:	d901      	bls.n	1a001bcc <Chip_Clock_FindBaseClock+0x2c>
1a001bc8:	3301      	adds	r3, #1
1a001bca:	e000      	b.n	1a001bce <Chip_Clock_FindBaseClock+0x2e>
1a001bcc:	4620      	mov	r0, r4
1a001bce:	281c      	cmp	r0, #28
1a001bd0:	d107      	bne.n	1a001be2 <Chip_Clock_FindBaseClock+0x42>
1a001bd2:	eb03 0143 	add.w	r1, r3, r3, lsl #1
1a001bd6:	004a      	lsls	r2, r1, #1
1a001bd8:	4903      	ldr	r1, [pc, #12]	; (1a001be8 <Chip_Clock_FindBaseClock+0x48>)
1a001bda:	440a      	add	r2, r1
1a001bdc:	7914      	ldrb	r4, [r2, #4]
1a001bde:	42a0      	cmp	r0, r4
1a001be0:	d1e3      	bne.n	1a001baa <Chip_Clock_FindBaseClock+0xa>
1a001be2:	bc30      	pop	{r4, r5}
1a001be4:	4770      	bx	lr
1a001be6:	bf00      	nop
1a001be8:	1a002da8 	.word	0x1a002da8

1a001bec <Chip_Clock_EnableCrystal>:
1a001bec:	b082      	sub	sp, #8
1a001bee:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a001bf2:	9301      	str	r3, [sp, #4]
1a001bf4:	4a0d      	ldr	r2, [pc, #52]	; (1a001c2c <Chip_Clock_EnableCrystal+0x40>)
1a001bf6:	6993      	ldr	r3, [r2, #24]
1a001bf8:	f023 0102 	bic.w	r1, r3, #2
1a001bfc:	6992      	ldr	r2, [r2, #24]
1a001bfe:	4291      	cmp	r1, r2
1a001c00:	d001      	beq.n	1a001c06 <Chip_Clock_EnableCrystal+0x1a>
1a001c02:	4a0a      	ldr	r2, [pc, #40]	; (1a001c2c <Chip_Clock_EnableCrystal+0x40>)
1a001c04:	6191      	str	r1, [r2, #24]
1a001c06:	f023 0303 	bic.w	r3, r3, #3
1a001c0a:	4a09      	ldr	r2, [pc, #36]	; (1a001c30 <Chip_Clock_EnableCrystal+0x44>)
1a001c0c:	6811      	ldr	r1, [r2, #0]
1a001c0e:	4a09      	ldr	r2, [pc, #36]	; (1a001c34 <Chip_Clock_EnableCrystal+0x48>)
1a001c10:	4291      	cmp	r1, r2
1a001c12:	d901      	bls.n	1a001c18 <Chip_Clock_EnableCrystal+0x2c>
1a001c14:	f043 0304 	orr.w	r3, r3, #4
1a001c18:	4a04      	ldr	r2, [pc, #16]	; (1a001c2c <Chip_Clock_EnableCrystal+0x40>)
1a001c1a:	6193      	str	r3, [r2, #24]
1a001c1c:	9b01      	ldr	r3, [sp, #4]
1a001c1e:	1e5a      	subs	r2, r3, #1
1a001c20:	9201      	str	r2, [sp, #4]
1a001c22:	2b00      	cmp	r3, #0
1a001c24:	d1fa      	bne.n	1a001c1c <Chip_Clock_EnableCrystal+0x30>
1a001c26:	b002      	add	sp, #8
1a001c28:	4770      	bx	lr
1a001c2a:	bf00      	nop
1a001c2c:	40050000 	.word	0x40050000
1a001c30:	1a002d10 	.word	0x1a002d10
1a001c34:	01312cff 	.word	0x01312cff

1a001c38 <Chip_Clock_DisableCrystal>:
1a001c38:	4a02      	ldr	r2, [pc, #8]	; (1a001c44 <Chip_Clock_DisableCrystal+0xc>)
1a001c3a:	6993      	ldr	r3, [r2, #24]
1a001c3c:	f043 0301 	orr.w	r3, r3, #1
1a001c40:	6193      	str	r3, [r2, #24]
1a001c42:	4770      	bx	lr
1a001c44:	40050000 	.word	0x40050000

1a001c48 <Chip_Clock_SetDivider>:
1a001c48:	b410      	push	{r4}
1a001c4a:	f100 0412 	add.w	r4, r0, #18
1a001c4e:	4b11      	ldr	r3, [pc, #68]	; (1a001c94 <Chip_Clock_SetDivider+0x4c>)
1a001c50:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
1a001c54:	2911      	cmp	r1, #17
1a001c56:	d014      	beq.n	1a001c82 <Chip_Clock_SetDivider+0x3a>
1a001c58:	3a01      	subs	r2, #1
1a001c5a:	4c0f      	ldr	r4, [pc, #60]	; (1a001c98 <Chip_Clock_SetDivider+0x50>)
1a001c5c:	5c24      	ldrb	r4, [r4, r0]
1a001c5e:	00a4      	lsls	r4, r4, #2
1a001c60:	f044 54f8 	orr.w	r4, r4, #520093696	; 0x1f000000
1a001c64:	f044 0401 	orr.w	r4, r4, #1
1a001c68:	ea23 0304 	bic.w	r3, r3, r4
1a001c6c:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
1a001c70:	ea41 0282 	orr.w	r2, r1, r2, lsl #2
1a001c74:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
1a001c78:	3012      	adds	r0, #18
1a001c7a:	4b06      	ldr	r3, [pc, #24]	; (1a001c94 <Chip_Clock_SetDivider+0x4c>)
1a001c7c:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
1a001c80:	e005      	b.n	1a001c8e <Chip_Clock_SetDivider+0x46>
1a001c82:	f043 0301 	orr.w	r3, r3, #1
1a001c86:	3012      	adds	r0, #18
1a001c88:	4a02      	ldr	r2, [pc, #8]	; (1a001c94 <Chip_Clock_SetDivider+0x4c>)
1a001c8a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
1a001c8e:	f85d 4b04 	ldr.w	r4, [sp], #4
1a001c92:	4770      	bx	lr
1a001c94:	40050000 	.word	0x40050000
1a001c98:	1a002e18 	.word	0x1a002e18

1a001c9c <Chip_Clock_GetDividerSource>:
1a001c9c:	3012      	adds	r0, #18
1a001c9e:	4b05      	ldr	r3, [pc, #20]	; (1a001cb4 <Chip_Clock_GetDividerSource+0x18>)
1a001ca0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
1a001ca4:	f010 0f01 	tst.w	r0, #1
1a001ca8:	d102      	bne.n	1a001cb0 <Chip_Clock_GetDividerSource+0x14>
1a001caa:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a001cae:	4770      	bx	lr
1a001cb0:	2011      	movs	r0, #17
1a001cb2:	4770      	bx	lr
1a001cb4:	40050000 	.word	0x40050000

1a001cb8 <Chip_Clock_GetDividerDivisor>:
1a001cb8:	f100 0212 	add.w	r2, r0, #18
1a001cbc:	4b03      	ldr	r3, [pc, #12]	; (1a001ccc <Chip_Clock_GetDividerDivisor+0x14>)
1a001cbe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1a001cc2:	4b03      	ldr	r3, [pc, #12]	; (1a001cd0 <Chip_Clock_GetDividerDivisor+0x18>)
1a001cc4:	5c18      	ldrb	r0, [r3, r0]
1a001cc6:	ea00 0092 	and.w	r0, r0, r2, lsr #2
1a001cca:	4770      	bx	lr
1a001ccc:	40050000 	.word	0x40050000
1a001cd0:	1a002e18 	.word	0x1a002e18

1a001cd4 <Chip_Clock_GetClockInputHz>:
1a001cd4:	b508      	push	{r3, lr}
1a001cd6:	2810      	cmp	r0, #16
1a001cd8:	d80a      	bhi.n	1a001cf0 <Chip_Clock_GetClockInputHz+0x1c>
1a001cda:	e8df f000 	tbb	[pc, r0]
1a001cde:	0b42      	.short	0x0b42
1a001ce0:	091f160d 	.word	0x091f160d
1a001ce4:	2b282522 	.word	0x2b282522
1a001ce8:	322e0909 	.word	0x322e0909
1a001cec:	3a36      	.short	0x3a36
1a001cee:	3e          	.byte	0x3e
1a001cef:	00          	.byte	0x00
1a001cf0:	2000      	movs	r0, #0
1a001cf2:	bd08      	pop	{r3, pc}
1a001cf4:	481e      	ldr	r0, [pc, #120]	; (1a001d70 <Chip_Clock_GetClockInputHz+0x9c>)
1a001cf6:	bd08      	pop	{r3, pc}
1a001cf8:	4b1e      	ldr	r3, [pc, #120]	; (1a001d74 <Chip_Clock_GetClockInputHz+0xa0>)
1a001cfa:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a001cfe:	f003 0307 	and.w	r3, r3, #7
1a001d02:	2b04      	cmp	r3, #4
1a001d04:	d130      	bne.n	1a001d68 <Chip_Clock_GetClockInputHz+0x94>
1a001d06:	2000      	movs	r0, #0
1a001d08:	bd08      	pop	{r3, pc}
1a001d0a:	4b1a      	ldr	r3, [pc, #104]	; (1a001d74 <Chip_Clock_GetClockInputHz+0xa0>)
1a001d0c:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a001d10:	f003 0307 	and.w	r3, r3, #7
1a001d14:	2b04      	cmp	r3, #4
1a001d16:	d029      	beq.n	1a001d6c <Chip_Clock_GetClockInputHz+0x98>
1a001d18:	4817      	ldr	r0, [pc, #92]	; (1a001d78 <Chip_Clock_GetClockInputHz+0xa4>)
1a001d1a:	bd08      	pop	{r3, pc}
1a001d1c:	4b17      	ldr	r3, [pc, #92]	; (1a001d7c <Chip_Clock_GetClockInputHz+0xa8>)
1a001d1e:	6818      	ldr	r0, [r3, #0]
1a001d20:	bd08      	pop	{r3, pc}
1a001d22:	4b17      	ldr	r3, [pc, #92]	; (1a001d80 <Chip_Clock_GetClockInputHz+0xac>)
1a001d24:	6818      	ldr	r0, [r3, #0]
1a001d26:	bd08      	pop	{r3, pc}
1a001d28:	4b16      	ldr	r3, [pc, #88]	; (1a001d84 <Chip_Clock_GetClockInputHz+0xb0>)
1a001d2a:	6818      	ldr	r0, [r3, #0]
1a001d2c:	bd08      	pop	{r3, pc}
1a001d2e:	4b15      	ldr	r3, [pc, #84]	; (1a001d84 <Chip_Clock_GetClockInputHz+0xb0>)
1a001d30:	6858      	ldr	r0, [r3, #4]
1a001d32:	bd08      	pop	{r3, pc}
1a001d34:	f000 f916 	bl	1a001f64 <Chip_Clock_GetMainPLLHz>
1a001d38:	bd08      	pop	{r3, pc}
1a001d3a:	2100      	movs	r1, #0
1a001d3c:	f000 f948 	bl	1a001fd0 <Chip_Clock_GetDivRate>
1a001d40:	bd08      	pop	{r3, pc}
1a001d42:	2101      	movs	r1, #1
1a001d44:	f000 f944 	bl	1a001fd0 <Chip_Clock_GetDivRate>
1a001d48:	bd08      	pop	{r3, pc}
1a001d4a:	2102      	movs	r1, #2
1a001d4c:	f000 f940 	bl	1a001fd0 <Chip_Clock_GetDivRate>
1a001d50:	bd08      	pop	{r3, pc}
1a001d52:	2103      	movs	r1, #3
1a001d54:	f000 f93c 	bl	1a001fd0 <Chip_Clock_GetDivRate>
1a001d58:	bd08      	pop	{r3, pc}
1a001d5a:	2104      	movs	r1, #4
1a001d5c:	f000 f938 	bl	1a001fd0 <Chip_Clock_GetDivRate>
1a001d60:	bd08      	pop	{r3, pc}
1a001d62:	f44f 4000 	mov.w	r0, #32768	; 0x8000
1a001d66:	bd08      	pop	{r3, pc}
1a001d68:	4803      	ldr	r0, [pc, #12]	; (1a001d78 <Chip_Clock_GetClockInputHz+0xa4>)
1a001d6a:	bd08      	pop	{r3, pc}
1a001d6c:	4806      	ldr	r0, [pc, #24]	; (1a001d88 <Chip_Clock_GetClockInputHz+0xb4>)
1a001d6e:	bd08      	pop	{r3, pc}
1a001d70:	00b71b00 	.word	0x00b71b00
1a001d74:	40043000 	.word	0x40043000
1a001d78:	017d7840 	.word	0x017d7840
1a001d7c:	1a002d14 	.word	0x1a002d14
1a001d80:	1a002d10 	.word	0x1a002d10
1a001d84:	10000090 	.word	0x10000090
1a001d88:	02faf080 	.word	0x02faf080

1a001d8c <Chip_Clock_CalcMainPLLValue>:
1a001d8c:	b538      	push	{r3, r4, r5, lr}
1a001d8e:	4605      	mov	r5, r0
1a001d90:	460c      	mov	r4, r1
1a001d92:	7908      	ldrb	r0, [r1, #4]
1a001d94:	f7ff ff9e 	bl	1a001cd4 <Chip_Clock_GetClockInputHz>
1a001d98:	6160      	str	r0, [r4, #20]
1a001d9a:	4b19      	ldr	r3, [pc, #100]	; (1a001e00 <Chip_Clock_CalcMainPLLValue+0x74>)
1a001d9c:	442b      	add	r3, r5
1a001d9e:	4a19      	ldr	r2, [pc, #100]	; (1a001e04 <Chip_Clock_CalcMainPLLValue+0x78>)
1a001da0:	4293      	cmp	r3, r2
1a001da2:	d821      	bhi.n	1a001de8 <Chip_Clock_CalcMainPLLValue+0x5c>
1a001da4:	b318      	cbz	r0, 1a001dee <Chip_Clock_CalcMainPLLValue+0x62>
1a001da6:	2380      	movs	r3, #128	; 0x80
1a001da8:	6023      	str	r3, [r4, #0]
1a001daa:	2300      	movs	r3, #0
1a001dac:	60a3      	str	r3, [r4, #8]
1a001dae:	60e3      	str	r3, [r4, #12]
1a001db0:	fbb5 f3f0 	udiv	r3, r5, r0
1a001db4:	6123      	str	r3, [r4, #16]
1a001db6:	4a14      	ldr	r2, [pc, #80]	; (1a001e08 <Chip_Clock_CalcMainPLLValue+0x7c>)
1a001db8:	4295      	cmp	r5, r2
1a001dba:	d903      	bls.n	1a001dc4 <Chip_Clock_CalcMainPLLValue+0x38>
1a001dbc:	fb03 f000 	mul.w	r0, r3, r0
1a001dc0:	4285      	cmp	r5, r0
1a001dc2:	d007      	beq.n	1a001dd4 <Chip_Clock_CalcMainPLLValue+0x48>
1a001dc4:	4621      	mov	r1, r4
1a001dc6:	4628      	mov	r0, r5
1a001dc8:	f7ff fe56 	bl	1a001a78 <pll_get_frac>
1a001dcc:	68a3      	ldr	r3, [r4, #8]
1a001dce:	b18b      	cbz	r3, 1a001df4 <Chip_Clock_CalcMainPLLValue+0x68>
1a001dd0:	3b01      	subs	r3, #1
1a001dd2:	60a3      	str	r3, [r4, #8]
1a001dd4:	6923      	ldr	r3, [r4, #16]
1a001dd6:	b183      	cbz	r3, 1a001dfa <Chip_Clock_CalcMainPLLValue+0x6e>
1a001dd8:	68e2      	ldr	r2, [r4, #12]
1a001dda:	b10a      	cbz	r2, 1a001de0 <Chip_Clock_CalcMainPLLValue+0x54>
1a001ddc:	3a01      	subs	r2, #1
1a001dde:	60e2      	str	r2, [r4, #12]
1a001de0:	3b01      	subs	r3, #1
1a001de2:	6123      	str	r3, [r4, #16]
1a001de4:	2000      	movs	r0, #0
1a001de6:	bd38      	pop	{r3, r4, r5, pc}
1a001de8:	f04f 30ff 	mov.w	r0, #4294967295
1a001dec:	bd38      	pop	{r3, r4, r5, pc}
1a001dee:	f04f 30ff 	mov.w	r0, #4294967295
1a001df2:	bd38      	pop	{r3, r4, r5, pc}
1a001df4:	f04f 30ff 	mov.w	r0, #4294967295
1a001df8:	bd38      	pop	{r3, r4, r5, pc}
1a001dfa:	f04f 30ff 	mov.w	r0, #4294967295
1a001dfe:	bd38      	pop	{r3, r4, r5, pc}
1a001e00:	ff6b3a10 	.word	0xff6b3a10
1a001e04:	0b940510 	.word	0x0b940510
1a001e08:	094c5eff 	.word	0x094c5eff

1a001e0c <Chip_Clock_SetupMainPLLMult>:
1a001e0c:	b570      	push	{r4, r5, r6, lr}
1a001e0e:	b082      	sub	sp, #8
1a001e10:	4604      	mov	r4, r0
1a001e12:	460e      	mov	r6, r1
1a001e14:	23fa      	movs	r3, #250	; 0xfa
1a001e16:	9301      	str	r3, [sp, #4]
1a001e18:	f7ff ff5c 	bl	1a001cd4 <Chip_Clock_GetClockInputHz>
1a001e1c:	4b1e      	ldr	r3, [pc, #120]	; (1a001e98 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a001e1e:	6c5d      	ldr	r5, [r3, #68]	; 0x44
1a001e20:	fb06 f000 	mul.w	r0, r6, r0
1a001e24:	1e71      	subs	r1, r6, #1
1a001e26:	f025 55f8 	bic.w	r5, r5, #520093696	; 0x1f000000
1a001e2a:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
1a001e2e:	4c1b      	ldr	r4, [pc, #108]	; (1a001e9c <Chip_Clock_SetupMainPLLMult+0x90>)
1a001e30:	402c      	ands	r4, r5
1a001e32:	f444 6600 	orr.w	r6, r4, #2048	; 0x800
1a001e36:	4b1a      	ldr	r3, [pc, #104]	; (1a001ea0 <Chip_Clock_SetupMainPLLMult+0x94>)
1a001e38:	4298      	cmp	r0, r3
1a001e3a:	d903      	bls.n	1a001e44 <Chip_Clock_SetupMainPLLMult+0x38>
1a001e3c:	e012      	b.n	1a001e64 <Chip_Clock_SetupMainPLLMult+0x58>
1a001e3e:	3201      	adds	r2, #1
1a001e40:	0064      	lsls	r4, r4, #1
1a001e42:	e001      	b.n	1a001e48 <Chip_Clock_SetupMainPLLMult+0x3c>
1a001e44:	2401      	movs	r4, #1
1a001e46:	2200      	movs	r2, #0
1a001e48:	fb00 f304 	mul.w	r3, r0, r4
1a001e4c:	4d14      	ldr	r5, [pc, #80]	; (1a001ea0 <Chip_Clock_SetupMainPLLMult+0x94>)
1a001e4e:	ebb5 0f43 	cmp.w	r5, r3, lsl #1
1a001e52:	d2f4      	bcs.n	1a001e3e <Chip_Clock_SetupMainPLLMult+0x32>
1a001e54:	0212      	lsls	r2, r2, #8
1a001e56:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1a001e5a:	ea46 0302 	orr.w	r3, r6, r2
1a001e5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a001e62:	e00e      	b.n	1a001e82 <Chip_Clock_SetupMainPLLMult+0x76>
1a001e64:	4b0f      	ldr	r3, [pc, #60]	; (1a001ea4 <Chip_Clock_SetupMainPLLMult+0x98>)
1a001e66:	4298      	cmp	r0, r3
1a001e68:	d804      	bhi.n	1a001e74 <Chip_Clock_SetupMainPLLMult+0x68>
1a001e6a:	ea46 4301 	orr.w	r3, r6, r1, lsl #16
1a001e6e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
1a001e72:	e006      	b.n	1a001e82 <Chip_Clock_SetupMainPLLMult+0x76>
1a001e74:	4a08      	ldr	r2, [pc, #32]	; (1a001e98 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a001e76:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a001e78:	f043 0301 	orr.w	r3, r3, #1
1a001e7c:	6453      	str	r3, [r2, #68]	; 0x44
1a001e7e:	2000      	movs	r0, #0
1a001e80:	e008      	b.n	1a001e94 <Chip_Clock_SetupMainPLLMult+0x88>
1a001e82:	f023 0301 	bic.w	r3, r3, #1
1a001e86:	4a04      	ldr	r2, [pc, #16]	; (1a001e98 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a001e88:	6453      	str	r3, [r2, #68]	; 0x44
1a001e8a:	9b01      	ldr	r3, [sp, #4]
1a001e8c:	1e5a      	subs	r2, r3, #1
1a001e8e:	9201      	str	r2, [sp, #4]
1a001e90:	2b00      	cmp	r3, #0
1a001e92:	d1fa      	bne.n	1a001e8a <Chip_Clock_SetupMainPLLMult+0x7e>
1a001e94:	b002      	add	sp, #8
1a001e96:	bd70      	pop	{r4, r5, r6, pc}
1a001e98:	40050000 	.word	0x40050000
1a001e9c:	ff00cc3d 	.word	0xff00cc3d
1a001ea0:	094c5eff 	.word	0x094c5eff
1a001ea4:	1312cfff 	.word	0x1312cfff

1a001ea8 <Chip_Clock_SetupMainPLLHz>:
1a001ea8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a001eac:	4682      	mov	sl, r0
1a001eae:	460f      	mov	r7, r1
1a001eb0:	4690      	mov	r8, r2
1a001eb2:	461e      	mov	r6, r3
1a001eb4:	f7ff ff0e 	bl	1a001cd4 <Chip_Clock_GetClockInputHz>
1a001eb8:	4605      	mov	r5, r0
1a001eba:	f1b8 3fff 	cmp.w	r8, #4294967295
1a001ebe:	d033      	beq.n	1a001f28 <Chip_Clock_SetupMainPLLHz+0x80>
1a001ec0:	fbb8 f9f0 	udiv	r9, r8, r0
1a001ec4:	4633      	mov	r3, r6
1a001ec6:	463a      	mov	r2, r7
1a001ec8:	4649      	mov	r1, r9
1a001eca:	f7ff fe57 	bl	1a001b7c <Chip_Clock_TestMainPLLMultiplier>
1a001ece:	4604      	mov	r4, r0
1a001ed0:	f109 0b01 	add.w	fp, r9, #1
1a001ed4:	4633      	mov	r3, r6
1a001ed6:	463a      	mov	r2, r7
1a001ed8:	4659      	mov	r1, fp
1a001eda:	4628      	mov	r0, r5
1a001edc:	f7ff fe4e 	bl	1a001b7c <Chip_Clock_TestMainPLLMultiplier>
1a001ee0:	b134      	cbz	r4, 1a001ef0 <Chip_Clock_SetupMainPLLHz+0x48>
1a001ee2:	b928      	cbnz	r0, 1a001ef0 <Chip_Clock_SetupMainPLLHz+0x48>
1a001ee4:	4649      	mov	r1, r9
1a001ee6:	4650      	mov	r0, sl
1a001ee8:	f7ff ff90 	bl	1a001e0c <Chip_Clock_SetupMainPLLMult>
1a001eec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001ef0:	b934      	cbnz	r4, 1a001f00 <Chip_Clock_SetupMainPLLHz+0x58>
1a001ef2:	b128      	cbz	r0, 1a001f00 <Chip_Clock_SetupMainPLLHz+0x58>
1a001ef4:	4659      	mov	r1, fp
1a001ef6:	4650      	mov	r0, sl
1a001ef8:	f7ff ff88 	bl	1a001e0c <Chip_Clock_SetupMainPLLMult>
1a001efc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001f00:	b194      	cbz	r4, 1a001f28 <Chip_Clock_SetupMainPLLHz+0x80>
1a001f02:	b188      	cbz	r0, 1a001f28 <Chip_Clock_SetupMainPLLHz+0x80>
1a001f04:	ebc4 0408 	rsb	r4, r4, r8
1a001f08:	ebc8 0000 	rsb	r0, r8, r0
1a001f0c:	4284      	cmp	r4, r0
1a001f0e:	d905      	bls.n	1a001f1c <Chip_Clock_SetupMainPLLHz+0x74>
1a001f10:	4649      	mov	r1, r9
1a001f12:	4650      	mov	r0, sl
1a001f14:	f7ff ff7a 	bl	1a001e0c <Chip_Clock_SetupMainPLLMult>
1a001f18:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001f1c:	4659      	mov	r1, fp
1a001f1e:	4650      	mov	r0, sl
1a001f20:	f7ff ff74 	bl	1a001e0c <Chip_Clock_SetupMainPLLMult>
1a001f24:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001f28:	fbb7 f4f5 	udiv	r4, r7, r5
1a001f2c:	fbb6 f8f5 	udiv	r8, r6, r5
1a001f30:	f04f 0900 	mov.w	r9, #0
1a001f34:	4633      	mov	r3, r6
1a001f36:	463a      	mov	r2, r7
1a001f38:	4621      	mov	r1, r4
1a001f3a:	4628      	mov	r0, r5
1a001f3c:	f7ff fe1e 	bl	1a001b7c <Chip_Clock_TestMainPLLMultiplier>
1a001f40:	b100      	cbz	r0, 1a001f44 <Chip_Clock_SetupMainPLLHz+0x9c>
1a001f42:	46a1      	mov	r9, r4
1a001f44:	4544      	cmp	r4, r8
1a001f46:	d201      	bcs.n	1a001f4c <Chip_Clock_SetupMainPLLHz+0xa4>
1a001f48:	3401      	adds	r4, #1
1a001f4a:	e7f3      	b.n	1a001f34 <Chip_Clock_SetupMainPLLHz+0x8c>
1a001f4c:	f1b9 0f00 	cmp.w	r9, #0
1a001f50:	d005      	beq.n	1a001f5e <Chip_Clock_SetupMainPLLHz+0xb6>
1a001f52:	4649      	mov	r1, r9
1a001f54:	4650      	mov	r0, sl
1a001f56:	f7ff ff59 	bl	1a001e0c <Chip_Clock_SetupMainPLLMult>
1a001f5a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001f5e:	2000      	movs	r0, #0
1a001f60:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

1a001f64 <Chip_Clock_GetMainPLLHz>:
1a001f64:	b530      	push	{r4, r5, lr}
1a001f66:	b083      	sub	sp, #12
1a001f68:	4d17      	ldr	r5, [pc, #92]	; (1a001fc8 <Chip_Clock_GetMainPLLHz+0x64>)
1a001f6a:	6c6c      	ldr	r4, [r5, #68]	; 0x44
1a001f6c:	f3c4 6003 	ubfx	r0, r4, #24, #4
1a001f70:	f7ff feb0 	bl	1a001cd4 <Chip_Clock_GetClockInputHz>
1a001f74:	4601      	mov	r1, r0
1a001f76:	4b15      	ldr	r3, [pc, #84]	; (1a001fcc <Chip_Clock_GetMainPLLHz+0x68>)
1a001f78:	6818      	ldr	r0, [r3, #0]
1a001f7a:	9001      	str	r0, [sp, #4]
1a001f7c:	6c28      	ldr	r0, [r5, #64]	; 0x40
1a001f7e:	f010 0001 	ands.w	r0, r0, #1
1a001f82:	d01e      	beq.n	1a001fc2 <Chip_Clock_GetMainPLLHz+0x5e>
1a001f84:	f3c4 4007 	ubfx	r0, r4, #16, #8
1a001f88:	f3c4 3301 	ubfx	r3, r4, #12, #2
1a001f8c:	f3c4 2201 	ubfx	r2, r4, #8, #2
1a001f90:	f3c4 1580 	ubfx	r5, r4, #6, #1
1a001f94:	3001      	adds	r0, #1
1a001f96:	3301      	adds	r3, #1
1a001f98:	f10d 0e08 	add.w	lr, sp, #8
1a001f9c:	4472      	add	r2, lr
1a001f9e:	f812 2c04 	ldrb.w	r2, [r2, #-4]
1a001fa2:	f014 0f80 	tst.w	r4, #128	; 0x80
1a001fa6:	d100      	bne.n	1a001faa <Chip_Clock_GetMainPLLHz+0x46>
1a001fa8:	b125      	cbz	r5, 1a001fb4 <Chip_Clock_GetMainPLLHz+0x50>
1a001faa:	fbb1 f3f3 	udiv	r3, r1, r3
1a001fae:	fb03 f000 	mul.w	r0, r3, r0
1a001fb2:	e006      	b.n	1a001fc2 <Chip_Clock_GetMainPLLHz+0x5e>
1a001fb4:	0052      	lsls	r2, r2, #1
1a001fb6:	fbb0 f0f2 	udiv	r0, r0, r2
1a001fba:	fbb1 f3f3 	udiv	r3, r1, r3
1a001fbe:	fb03 f000 	mul.w	r0, r3, r0
1a001fc2:	b003      	add	sp, #12
1a001fc4:	bd30      	pop	{r4, r5, pc}
1a001fc6:	bf00      	nop
1a001fc8:	40050000 	.word	0x40050000
1a001fcc:	1a002e14 	.word	0x1a002e14

1a001fd0 <Chip_Clock_GetDivRate>:
1a001fd0:	b538      	push	{r3, r4, r5, lr}
1a001fd2:	460c      	mov	r4, r1
1a001fd4:	4608      	mov	r0, r1
1a001fd6:	f7ff fe61 	bl	1a001c9c <Chip_Clock_GetDividerSource>
1a001fda:	4605      	mov	r5, r0
1a001fdc:	4620      	mov	r0, r4
1a001fde:	f7ff fe6b 	bl	1a001cb8 <Chip_Clock_GetDividerDivisor>
1a001fe2:	4604      	mov	r4, r0
1a001fe4:	4628      	mov	r0, r5
1a001fe6:	f7ff fe75 	bl	1a001cd4 <Chip_Clock_GetClockInputHz>
1a001fea:	3401      	adds	r4, #1
1a001fec:	fbb0 f0f4 	udiv	r0, r0, r4
1a001ff0:	bd38      	pop	{r3, r4, r5, pc}
1a001ff2:	bf00      	nop

1a001ff4 <Chip_Clock_SetBaseClock>:
1a001ff4:	b430      	push	{r4, r5}
1a001ff6:	f100 0416 	add.w	r4, r0, #22
1a001ffa:	00a4      	lsls	r4, r4, #2
1a001ffc:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
1a002000:	f504 24a0 	add.w	r4, r4, #327680	; 0x50000
1a002004:	6865      	ldr	r5, [r4, #4]
1a002006:	281b      	cmp	r0, #27
1a002008:	d813      	bhi.n	1a002032 <Chip_Clock_SetBaseClock+0x3e>
1a00200a:	2911      	cmp	r1, #17
1a00200c:	d01a      	beq.n	1a002044 <Chip_Clock_SetBaseClock+0x50>
1a00200e:	4c0e      	ldr	r4, [pc, #56]	; (1a002048 <Chip_Clock_SetBaseClock+0x54>)
1a002010:	402c      	ands	r4, r5
1a002012:	b10a      	cbz	r2, 1a002018 <Chip_Clock_SetBaseClock+0x24>
1a002014:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
1a002018:	b10b      	cbz	r3, 1a00201e <Chip_Clock_SetBaseClock+0x2a>
1a00201a:	f044 0401 	orr.w	r4, r4, #1
1a00201e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
1a002022:	3016      	adds	r0, #22
1a002024:	0080      	lsls	r0, r0, #2
1a002026:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a00202a:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a00202e:	6044      	str	r4, [r0, #4]
1a002030:	e008      	b.n	1a002044 <Chip_Clock_SetBaseClock+0x50>
1a002032:	f045 0501 	orr.w	r5, r5, #1
1a002036:	3016      	adds	r0, #22
1a002038:	0080      	lsls	r0, r0, #2
1a00203a:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a00203e:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a002042:	6045      	str	r5, [r0, #4]
1a002044:	bc30      	pop	{r4, r5}
1a002046:	4770      	bx	lr
1a002048:	e0fff7fe 	.word	0xe0fff7fe

1a00204c <Chip_Clock_GetBaseClockOpts>:
1a00204c:	b430      	push	{r4, r5}
1a00204e:	f100 0416 	add.w	r4, r0, #22
1a002052:	00a4      	lsls	r4, r4, #2
1a002054:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
1a002058:	f504 24a0 	add.w	r4, r4, #327680	; 0x50000
1a00205c:	6864      	ldr	r4, [r4, #4]
1a00205e:	f3c4 6504 	ubfx	r5, r4, #24, #5
1a002062:	281b      	cmp	r0, #27
1a002064:	d807      	bhi.n	1a002076 <Chip_Clock_GetBaseClockOpts+0x2a>
1a002066:	700d      	strb	r5, [r1, #0]
1a002068:	f3c4 21c0 	ubfx	r1, r4, #11, #1
1a00206c:	7011      	strb	r1, [r2, #0]
1a00206e:	f004 0401 	and.w	r4, r4, #1
1a002072:	701c      	strb	r4, [r3, #0]
1a002074:	e004      	b.n	1a002080 <Chip_Clock_GetBaseClockOpts+0x34>
1a002076:	2011      	movs	r0, #17
1a002078:	7008      	strb	r0, [r1, #0]
1a00207a:	2101      	movs	r1, #1
1a00207c:	7019      	strb	r1, [r3, #0]
1a00207e:	7011      	strb	r1, [r2, #0]
1a002080:	bc30      	pop	{r4, r5}
1a002082:	4770      	bx	lr

1a002084 <Chip_Clock_EnableBaseClock>:
1a002084:	281b      	cmp	r0, #27
1a002086:	d809      	bhi.n	1a00209c <Chip_Clock_EnableBaseClock+0x18>
1a002088:	3016      	adds	r0, #22
1a00208a:	0080      	lsls	r0, r0, #2
1a00208c:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a002090:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a002094:	6843      	ldr	r3, [r0, #4]
1a002096:	f023 0301 	bic.w	r3, r3, #1
1a00209a:	6043      	str	r3, [r0, #4]
1a00209c:	4770      	bx	lr
1a00209e:	bf00      	nop

1a0020a0 <Chip_Clock_DisableBaseClock>:
1a0020a0:	281b      	cmp	r0, #27
1a0020a2:	d809      	bhi.n	1a0020b8 <Chip_Clock_DisableBaseClock+0x18>
1a0020a4:	3016      	adds	r0, #22
1a0020a6:	0080      	lsls	r0, r0, #2
1a0020a8:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a0020ac:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a0020b0:	6843      	ldr	r3, [r0, #4]
1a0020b2:	f043 0301 	orr.w	r3, r3, #1
1a0020b6:	6043      	str	r3, [r0, #4]
1a0020b8:	4770      	bx	lr
1a0020ba:	bf00      	nop

1a0020bc <Chip_Clock_IsBaseClockEnabled>:
1a0020bc:	281b      	cmp	r0, #27
1a0020be:	d80c      	bhi.n	1a0020da <Chip_Clock_IsBaseClockEnabled+0x1e>
1a0020c0:	3016      	adds	r0, #22
1a0020c2:	0080      	lsls	r0, r0, #2
1a0020c4:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a0020c8:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a0020cc:	6843      	ldr	r3, [r0, #4]
1a0020ce:	f013 0f01 	tst.w	r3, #1
1a0020d2:	bf0c      	ite	eq
1a0020d4:	2001      	moveq	r0, #1
1a0020d6:	2000      	movne	r0, #0
1a0020d8:	4770      	bx	lr
1a0020da:	2000      	movs	r0, #0
1a0020dc:	4770      	bx	lr
1a0020de:	bf00      	nop

1a0020e0 <Chip_Clock_GetBaseClock>:
1a0020e0:	281b      	cmp	r0, #27
1a0020e2:	d80c      	bhi.n	1a0020fe <Chip_Clock_GetBaseClock+0x1e>
1a0020e4:	3016      	adds	r0, #22
1a0020e6:	0080      	lsls	r0, r0, #2
1a0020e8:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a0020ec:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a0020f0:	6840      	ldr	r0, [r0, #4]
1a0020f2:	f010 0f01 	tst.w	r0, #1
1a0020f6:	d104      	bne.n	1a002102 <Chip_Clock_GetBaseClock+0x22>
1a0020f8:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a0020fc:	4770      	bx	lr
1a0020fe:	2011      	movs	r0, #17
1a002100:	4770      	bx	lr
1a002102:	2011      	movs	r0, #17
1a002104:	4770      	bx	lr
1a002106:	bf00      	nop

1a002108 <Chip_Clock_GetBaseClocktHz>:
1a002108:	b508      	push	{r3, lr}
1a00210a:	f7ff ffe9 	bl	1a0020e0 <Chip_Clock_GetBaseClock>
1a00210e:	f7ff fde1 	bl	1a001cd4 <Chip_Clock_GetClockInputHz>
1a002112:	bd08      	pop	{r3, pc}

1a002114 <Chip_Clock_EnableOpts>:
1a002114:	b909      	cbnz	r1, 1a00211a <Chip_Clock_EnableOpts+0x6>
1a002116:	2101      	movs	r1, #1
1a002118:	e000      	b.n	1a00211c <Chip_Clock_EnableOpts+0x8>
1a00211a:	2103      	movs	r1, #3
1a00211c:	b10a      	cbz	r2, 1a002122 <Chip_Clock_EnableOpts+0xe>
1a00211e:	f041 0104 	orr.w	r1, r1, #4
1a002122:	2b02      	cmp	r3, #2
1a002124:	d101      	bne.n	1a00212a <Chip_Clock_EnableOpts+0x16>
1a002126:	f041 0120 	orr.w	r1, r1, #32
1a00212a:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a00212e:	d305      	bcc.n	1a00213c <Chip_Clock_EnableOpts+0x28>
1a002130:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a002134:	4b04      	ldr	r3, [pc, #16]	; (1a002148 <Chip_Clock_EnableOpts+0x34>)
1a002136:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a00213a:	4770      	bx	lr
1a00213c:	3020      	adds	r0, #32
1a00213e:	4b03      	ldr	r3, [pc, #12]	; (1a00214c <Chip_Clock_EnableOpts+0x38>)
1a002140:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a002144:	4770      	bx	lr
1a002146:	bf00      	nop
1a002148:	40052000 	.word	0x40052000
1a00214c:	40051000 	.word	0x40051000

1a002150 <Chip_Clock_Enable>:
1a002150:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a002154:	d309      	bcc.n	1a00216a <Chip_Clock_Enable+0x1a>
1a002156:	4a09      	ldr	r2, [pc, #36]	; (1a00217c <Chip_Clock_Enable+0x2c>)
1a002158:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a00215c:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a002160:	f043 0301 	orr.w	r3, r3, #1
1a002164:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a002168:	4770      	bx	lr
1a00216a:	4a05      	ldr	r2, [pc, #20]	; (1a002180 <Chip_Clock_Enable+0x30>)
1a00216c:	3020      	adds	r0, #32
1a00216e:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a002172:	f043 0301 	orr.w	r3, r3, #1
1a002176:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a00217a:	4770      	bx	lr
1a00217c:	40052000 	.word	0x40052000
1a002180:	40051000 	.word	0x40051000

1a002184 <Chip_Clock_RTCEnable>:
1a002184:	4b04      	ldr	r3, [pc, #16]	; (1a002198 <Chip_Clock_RTCEnable+0x14>)
1a002186:	685a      	ldr	r2, [r3, #4]
1a002188:	f022 020c 	bic.w	r2, r2, #12
1a00218c:	605a      	str	r2, [r3, #4]
1a00218e:	685a      	ldr	r2, [r3, #4]
1a002190:	f042 0203 	orr.w	r2, r2, #3
1a002194:	605a      	str	r2, [r3, #4]
1a002196:	4770      	bx	lr
1a002198:	40043000 	.word	0x40043000

1a00219c <Chip_Clock_Disable>:
1a00219c:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0021a0:	d309      	bcc.n	1a0021b6 <Chip_Clock_Disable+0x1a>
1a0021a2:	4a09      	ldr	r2, [pc, #36]	; (1a0021c8 <Chip_Clock_Disable+0x2c>)
1a0021a4:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a0021a8:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a0021ac:	f023 0301 	bic.w	r3, r3, #1
1a0021b0:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a0021b4:	4770      	bx	lr
1a0021b6:	4a05      	ldr	r2, [pc, #20]	; (1a0021cc <Chip_Clock_Disable+0x30>)
1a0021b8:	3020      	adds	r0, #32
1a0021ba:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a0021be:	f023 0301 	bic.w	r3, r3, #1
1a0021c2:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a0021c6:	4770      	bx	lr
1a0021c8:	40052000 	.word	0x40052000
1a0021cc:	40051000 	.word	0x40051000

1a0021d0 <Chip_Clock_StartPowerDown>:
1a0021d0:	2301      	movs	r3, #1
1a0021d2:	4a03      	ldr	r2, [pc, #12]	; (1a0021e0 <Chip_Clock_StartPowerDown+0x10>)
1a0021d4:	6013      	str	r3, [r2, #0]
1a0021d6:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
1a0021da:	6013      	str	r3, [r2, #0]
1a0021dc:	4770      	bx	lr
1a0021de:	bf00      	nop
1a0021e0:	40051000 	.word	0x40051000

1a0021e4 <Chip_Clock_ClearPowerDown>:
1a0021e4:	2300      	movs	r3, #0
1a0021e6:	4a03      	ldr	r2, [pc, #12]	; (1a0021f4 <Chip_Clock_ClearPowerDown+0x10>)
1a0021e8:	6013      	str	r3, [r2, #0]
1a0021ea:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
1a0021ee:	6013      	str	r3, [r2, #0]
1a0021f0:	4770      	bx	lr
1a0021f2:	bf00      	nop
1a0021f4:	40051000 	.word	0x40051000

1a0021f8 <Chip_Clock_GetRate>:
1a0021f8:	b510      	push	{r4, lr}
1a0021fa:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0021fe:	d305      	bcc.n	1a00220c <Chip_Clock_GetRate+0x14>
1a002200:	f5a0 7391 	sub.w	r3, r0, #290	; 0x122
1a002204:	4a0d      	ldr	r2, [pc, #52]	; (1a00223c <Chip_Clock_GetRate+0x44>)
1a002206:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a00220a:	e004      	b.n	1a002216 <Chip_Clock_GetRate+0x1e>
1a00220c:	f100 0320 	add.w	r3, r0, #32
1a002210:	4a0b      	ldr	r2, [pc, #44]	; (1a002240 <Chip_Clock_GetRate+0x48>)
1a002212:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a002216:	f014 0f01 	tst.w	r4, #1
1a00221a:	d00c      	beq.n	1a002236 <Chip_Clock_GetRate+0x3e>
1a00221c:	f7ff fcc0 	bl	1a001ba0 <Chip_Clock_FindBaseClock>
1a002220:	f7ff ff72 	bl	1a002108 <Chip_Clock_GetBaseClocktHz>
1a002224:	f014 0fe0 	tst.w	r4, #224	; 0xe0
1a002228:	d101      	bne.n	1a00222e <Chip_Clock_GetRate+0x36>
1a00222a:	2301      	movs	r3, #1
1a00222c:	e000      	b.n	1a002230 <Chip_Clock_GetRate+0x38>
1a00222e:	2302      	movs	r3, #2
1a002230:	fbb0 f0f3 	udiv	r0, r0, r3
1a002234:	bd10      	pop	{r4, pc}
1a002236:	2000      	movs	r0, #0
1a002238:	bd10      	pop	{r4, pc}
1a00223a:	bf00      	nop
1a00223c:	40052000 	.word	0x40052000
1a002240:	40051000 	.word	0x40051000

1a002244 <Chip_Clock_GetEMCRate>:
1a002244:	b508      	push	{r3, lr}
1a002246:	2066      	movs	r0, #102	; 0x66
1a002248:	f7ff ffd6 	bl	1a0021f8 <Chip_Clock_GetRate>
1a00224c:	4b07      	ldr	r3, [pc, #28]	; (1a00226c <Chip_Clock_GetEMCRate+0x28>)
1a00224e:	f8d3 3478 	ldr.w	r3, [r3, #1144]	; 0x478
1a002252:	f3c3 63c2 	ubfx	r3, r3, #27, #3
1a002256:	2b01      	cmp	r3, #1
1a002258:	d106      	bne.n	1a002268 <Chip_Clock_GetEMCRate+0x24>
1a00225a:	4b05      	ldr	r3, [pc, #20]	; (1a002270 <Chip_Clock_GetEMCRate+0x2c>)
1a00225c:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a002260:	f413 3f80 	tst.w	r3, #65536	; 0x10000
1a002264:	d000      	beq.n	1a002268 <Chip_Clock_GetEMCRate+0x24>
1a002266:	0840      	lsrs	r0, r0, #1
1a002268:	bd08      	pop	{r3, pc}
1a00226a:	bf00      	nop
1a00226c:	40051000 	.word	0x40051000
1a002270:	40043000 	.word	0x40043000

1a002274 <Chip_Clock_SetupPLL>:
1a002274:	b410      	push	{r4}
1a002276:	6813      	ldr	r3, [r2, #0]
1a002278:	ea43 6000 	orr.w	r0, r3, r0, lsl #24
1a00227c:	4b0b      	ldr	r3, [pc, #44]	; (1a0022ac <Chip_Clock_SetupPLL+0x38>)
1a00227e:	eb03 1401 	add.w	r4, r3, r1, lsl #4
1a002282:	6220      	str	r0, [r4, #32]
1a002284:	6850      	ldr	r0, [r2, #4]
1a002286:	1c8c      	adds	r4, r1, #2
1a002288:	eb03 1304 	add.w	r3, r3, r4, lsl #4
1a00228c:	6058      	str	r0, [r3, #4]
1a00228e:	6890      	ldr	r0, [r2, #8]
1a002290:	6098      	str	r0, [r3, #8]
1a002292:	2901      	cmp	r1, #1
1a002294:	d102      	bne.n	1a00229c <Chip_Clock_SetupPLL+0x28>
1a002296:	68d0      	ldr	r0, [r2, #12]
1a002298:	4b04      	ldr	r3, [pc, #16]	; (1a0022ac <Chip_Clock_SetupPLL+0x38>)
1a00229a:	63d8      	str	r0, [r3, #60]	; 0x3c
1a00229c:	6912      	ldr	r2, [r2, #16]
1a00229e:	4b04      	ldr	r3, [pc, #16]	; (1a0022b0 <Chip_Clock_SetupPLL+0x3c>)
1a0022a0:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
1a0022a4:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0022a8:	4770      	bx	lr
1a0022aa:	bf00      	nop
1a0022ac:	40050000 	.word	0x40050000
1a0022b0:	10000090 	.word	0x10000090

1a0022b4 <Chip_Clock_EnablePLL>:
1a0022b4:	0100      	lsls	r0, r0, #4
1a0022b6:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a0022ba:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a0022be:	6a03      	ldr	r3, [r0, #32]
1a0022c0:	f023 0301 	bic.w	r3, r3, #1
1a0022c4:	6203      	str	r3, [r0, #32]
1a0022c6:	4770      	bx	lr

1a0022c8 <Chip_Clock_DisablePLL>:
1a0022c8:	0100      	lsls	r0, r0, #4
1a0022ca:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a0022ce:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a0022d2:	6a03      	ldr	r3, [r0, #32]
1a0022d4:	f043 0301 	orr.w	r3, r3, #1
1a0022d8:	6203      	str	r3, [r0, #32]
1a0022da:	4770      	bx	lr

1a0022dc <Chip_Clock_GetPLLStatus>:
1a0022dc:	0100      	lsls	r0, r0, #4
1a0022de:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a0022e2:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a0022e6:	69c0      	ldr	r0, [r0, #28]
1a0022e8:	4770      	bx	lr
1a0022ea:	bf00      	nop

1a0022ec <Chip_SetupCoreClock>:
1a0022ec:	b570      	push	{r4, r5, r6, lr}
1a0022ee:	b08a      	sub	sp, #40	; 0x28
1a0022f0:	4605      	mov	r5, r0
1a0022f2:	460e      	mov	r6, r1
1a0022f4:	4614      	mov	r4, r2
1a0022f6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
1a0022fa:	9309      	str	r3, [sp, #36]	; 0x24
1a0022fc:	2806      	cmp	r0, #6
1a0022fe:	d101      	bne.n	1a002304 <Chip_SetupCoreClock+0x18>
1a002300:	f7ff fc74 	bl	1a001bec <Chip_Clock_EnableCrystal>
1a002304:	2300      	movs	r3, #0
1a002306:	2201      	movs	r2, #1
1a002308:	4629      	mov	r1, r5
1a00230a:	2004      	movs	r0, #4
1a00230c:	f7ff fe72 	bl	1a001ff4 <Chip_Clock_SetBaseClock>
1a002310:	4a47      	ldr	r2, [pc, #284]	; (1a002430 <Chip_SetupCoreClock+0x144>)
1a002312:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a002314:	f043 0301 	orr.w	r3, r3, #1
1a002318:	6453      	str	r3, [r2, #68]	; 0x44
1a00231a:	f88d 5008 	strb.w	r5, [sp, #8]
1a00231e:	a901      	add	r1, sp, #4
1a002320:	4630      	mov	r0, r6
1a002322:	f7ff fd33 	bl	1a001d8c <Chip_Clock_CalcMainPLLValue>
1a002326:	4b43      	ldr	r3, [pc, #268]	; (1a002434 <Chip_SetupCoreClock+0x148>)
1a002328:	429e      	cmp	r6, r3
1a00232a:	d913      	bls.n	1a002354 <Chip_SetupCoreClock+0x68>
1a00232c:	9b01      	ldr	r3, [sp, #4]
1a00232e:	f013 0f40 	tst.w	r3, #64	; 0x40
1a002332:	d000      	beq.n	1a002336 <Chip_SetupCoreClock+0x4a>
1a002334:	e7fe      	b.n	1a002334 <Chip_SetupCoreClock+0x48>
1a002336:	f013 0f80 	tst.w	r3, #128	; 0x80
1a00233a:	d005      	beq.n	1a002348 <Chip_SetupCoreClock+0x5c>
1a00233c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a002340:	9301      	str	r3, [sp, #4]
1a002342:	2500      	movs	r5, #0
1a002344:	2601      	movs	r6, #1
1a002346:	e007      	b.n	1a002358 <Chip_SetupCoreClock+0x6c>
1a002348:	9b04      	ldr	r3, [sp, #16]
1a00234a:	3301      	adds	r3, #1
1a00234c:	9304      	str	r3, [sp, #16]
1a00234e:	2501      	movs	r5, #1
1a002350:	2600      	movs	r6, #0
1a002352:	e001      	b.n	1a002358 <Chip_SetupCoreClock+0x6c>
1a002354:	2500      	movs	r5, #0
1a002356:	462e      	mov	r6, r5
1a002358:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a00235c:	9b01      	ldr	r3, [sp, #4]
1a00235e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a002362:	9a05      	ldr	r2, [sp, #20]
1a002364:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a002368:	9a03      	ldr	r2, [sp, #12]
1a00236a:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a00236e:	9a04      	ldr	r2, [sp, #16]
1a002370:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a002374:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a002378:	4a2d      	ldr	r2, [pc, #180]	; (1a002430 <Chip_SetupCoreClock+0x144>)
1a00237a:	6453      	str	r3, [r2, #68]	; 0x44
1a00237c:	4b2c      	ldr	r3, [pc, #176]	; (1a002430 <Chip_SetupCoreClock+0x144>)
1a00237e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
1a002380:	f013 0f01 	tst.w	r3, #1
1a002384:	d0fa      	beq.n	1a00237c <Chip_SetupCoreClock+0x90>
1a002386:	2300      	movs	r3, #0
1a002388:	2201      	movs	r2, #1
1a00238a:	2109      	movs	r1, #9
1a00238c:	2004      	movs	r0, #4
1a00238e:	f7ff fe31 	bl	1a001ff4 <Chip_Clock_SetBaseClock>
1a002392:	b1ee      	cbz	r6, 1a0023d0 <Chip_SetupCoreClock+0xe4>
1a002394:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a002398:	9309      	str	r3, [sp, #36]	; 0x24
1a00239a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00239c:	1e5a      	subs	r2, r3, #1
1a00239e:	9209      	str	r2, [sp, #36]	; 0x24
1a0023a0:	2b00      	cmp	r3, #0
1a0023a2:	d1fa      	bne.n	1a00239a <Chip_SetupCoreClock+0xae>
1a0023a4:	9b01      	ldr	r3, [sp, #4]
1a0023a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a0023aa:	9301      	str	r3, [sp, #4]
1a0023ac:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a0023b0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a0023b4:	9a05      	ldr	r2, [sp, #20]
1a0023b6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a0023ba:	9a03      	ldr	r2, [sp, #12]
1a0023bc:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a0023c0:	9a04      	ldr	r2, [sp, #16]
1a0023c2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a0023c6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a0023ca:	4a19      	ldr	r2, [pc, #100]	; (1a002430 <Chip_SetupCoreClock+0x144>)
1a0023cc:	6453      	str	r3, [r2, #68]	; 0x44
1a0023ce:	e01c      	b.n	1a00240a <Chip_SetupCoreClock+0x11e>
1a0023d0:	b1dd      	cbz	r5, 1a00240a <Chip_SetupCoreClock+0x11e>
1a0023d2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a0023d6:	9309      	str	r3, [sp, #36]	; 0x24
1a0023d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0023da:	1e5a      	subs	r2, r3, #1
1a0023dc:	9209      	str	r2, [sp, #36]	; 0x24
1a0023de:	2b00      	cmp	r3, #0
1a0023e0:	d1fa      	bne.n	1a0023d8 <Chip_SetupCoreClock+0xec>
1a0023e2:	9b04      	ldr	r3, [sp, #16]
1a0023e4:	1e59      	subs	r1, r3, #1
1a0023e6:	9104      	str	r1, [sp, #16]
1a0023e8:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a0023ec:	9b01      	ldr	r3, [sp, #4]
1a0023ee:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
1a0023f2:	9b05      	ldr	r3, [sp, #20]
1a0023f4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
1a0023f8:	9b03      	ldr	r3, [sp, #12]
1a0023fa:	ea42 3303 	orr.w	r3, r2, r3, lsl #12
1a0023fe:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
1a002402:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a002406:	4a0a      	ldr	r2, [pc, #40]	; (1a002430 <Chip_SetupCoreClock+0x144>)
1a002408:	6453      	str	r3, [r2, #68]	; 0x44
1a00240a:	b964      	cbnz	r4, 1a002426 <Chip_SetupCoreClock+0x13a>
1a00240c:	e00e      	b.n	1a00242c <Chip_SetupCoreClock+0x140>
1a00240e:	480a      	ldr	r0, [pc, #40]	; (1a002438 <Chip_SetupCoreClock+0x14c>)
1a002410:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a002414:	78cb      	ldrb	r3, [r1, #3]
1a002416:	788a      	ldrb	r2, [r1, #2]
1a002418:	7849      	ldrb	r1, [r1, #1]
1a00241a:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a00241e:	f7ff fde9 	bl	1a001ff4 <Chip_Clock_SetBaseClock>
1a002422:	3401      	adds	r4, #1
1a002424:	e000      	b.n	1a002428 <Chip_SetupCoreClock+0x13c>
1a002426:	2400      	movs	r4, #0
1a002428:	2c11      	cmp	r4, #17
1a00242a:	d9f0      	bls.n	1a00240e <Chip_SetupCoreClock+0x122>
1a00242c:	b00a      	add	sp, #40	; 0x28
1a00242e:	bd70      	pop	{r4, r5, r6, pc}
1a002430:	40050000 	.word	0x40050000
1a002434:	068e7780 	.word	0x068e7780
1a002438:	1a002e20 	.word	0x1a002e20

1a00243c <Chip_SetupXtalClocking>:
1a00243c:	b508      	push	{r3, lr}
1a00243e:	2201      	movs	r2, #1
1a002440:	4902      	ldr	r1, [pc, #8]	; (1a00244c <Chip_SetupXtalClocking+0x10>)
1a002442:	2006      	movs	r0, #6
1a002444:	f7ff ff52 	bl	1a0022ec <Chip_SetupCoreClock>
1a002448:	bd08      	pop	{r3, pc}
1a00244a:	bf00      	nop
1a00244c:	0c28cb00 	.word	0x0c28cb00

1a002450 <Chip_SetupIrcClocking>:
1a002450:	b508      	push	{r3, lr}
1a002452:	2201      	movs	r2, #1
1a002454:	4902      	ldr	r1, [pc, #8]	; (1a002460 <Chip_SetupIrcClocking+0x10>)
1a002456:	4610      	mov	r0, r2
1a002458:	f7ff ff48 	bl	1a0022ec <Chip_SetupCoreClock>
1a00245c:	bd08      	pop	{r3, pc}
1a00245e:	bf00      	nop
1a002460:	0c28cb00 	.word	0x0c28cb00

1a002464 <Chip_SystemInit>:
1a002464:	b508      	push	{r3, lr}
1a002466:	f7ff fff3 	bl	1a002450 <Chip_SetupIrcClocking>
1a00246a:	bd08      	pop	{r3, pc}

1a00246c <Chip_TIMER_GetClockIndex>:
1a00246c:	4b09      	ldr	r3, [pc, #36]	; (1a002494 <Chip_TIMER_GetClockIndex+0x28>)
1a00246e:	4298      	cmp	r0, r3
1a002470:	d009      	beq.n	1a002486 <Chip_TIMER_GetClockIndex+0x1a>
1a002472:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
1a002476:	4298      	cmp	r0, r3
1a002478:	d007      	beq.n	1a00248a <Chip_TIMER_GetClockIndex+0x1e>
1a00247a:	f5a3 3378 	sub.w	r3, r3, #253952	; 0x3e000
1a00247e:	4298      	cmp	r0, r3
1a002480:	d105      	bne.n	1a00248e <Chip_TIMER_GetClockIndex+0x22>
1a002482:	2085      	movs	r0, #133	; 0x85
1a002484:	4770      	bx	lr
1a002486:	20a4      	movs	r0, #164	; 0xa4
1a002488:	4770      	bx	lr
1a00248a:	20a3      	movs	r0, #163	; 0xa3
1a00248c:	4770      	bx	lr
1a00248e:	2084      	movs	r0, #132	; 0x84
1a002490:	4770      	bx	lr
1a002492:	bf00      	nop
1a002494:	400c4000 	.word	0x400c4000

1a002498 <Chip_TIMER_Init>:
1a002498:	b508      	push	{r3, lr}
1a00249a:	f7ff ffe7 	bl	1a00246c <Chip_TIMER_GetClockIndex>
1a00249e:	f7ff fe57 	bl	1a002150 <Chip_Clock_Enable>
1a0024a2:	bd08      	pop	{r3, pc}

1a0024a4 <Chip_TIMER_DeInit>:
1a0024a4:	b508      	push	{r3, lr}
1a0024a6:	f7ff ffe1 	bl	1a00246c <Chip_TIMER_GetClockIndex>
1a0024aa:	f7ff fe77 	bl	1a00219c <Chip_Clock_Disable>
1a0024ae:	bd08      	pop	{r3, pc}

1a0024b0 <Chip_TIMER_Reset>:
1a0024b0:	6842      	ldr	r2, [r0, #4]
1a0024b2:	2300      	movs	r3, #0
1a0024b4:	6043      	str	r3, [r0, #4]
1a0024b6:	2301      	movs	r3, #1
1a0024b8:	6083      	str	r3, [r0, #8]
1a0024ba:	2302      	movs	r3, #2
1a0024bc:	6043      	str	r3, [r0, #4]
1a0024be:	6883      	ldr	r3, [r0, #8]
1a0024c0:	2b00      	cmp	r3, #0
1a0024c2:	d1fc      	bne.n	1a0024be <Chip_TIMER_Reset+0xe>
1a0024c4:	6042      	str	r2, [r0, #4]
1a0024c6:	4770      	bx	lr

1a0024c8 <Chip_TIMER_ExtMatchControlSet>:
1a0024c8:	b470      	push	{r4, r5, r6}
1a0024ca:	2501      	movs	r5, #1
1a0024cc:	fa05 f603 	lsl.w	r6, r5, r3
1a0024d0:	1c9c      	adds	r4, r3, #2
1a0024d2:	40ac      	lsls	r4, r5
1a0024d4:	2503      	movs	r5, #3
1a0024d6:	40a5      	lsls	r5, r4
1a0024d8:	4335      	orrs	r5, r6
1a0024da:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
1a0024dc:	ea26 0505 	bic.w	r5, r6, r5
1a0024e0:	63c5      	str	r5, [r0, #60]	; 0x3c
1a0024e2:	4099      	lsls	r1, r3
1a0024e4:	ea45 0301 	orr.w	r3, r5, r1
1a0024e8:	40a2      	lsls	r2, r4
1a0024ea:	431a      	orrs	r2, r3
1a0024ec:	63c2      	str	r2, [r0, #60]	; 0x3c
1a0024ee:	bc70      	pop	{r4, r5, r6}
1a0024f0:	4770      	bx	lr
1a0024f2:	bf00      	nop

1a0024f4 <fpuInit>:
1a0024f4:	b084      	sub	sp, #16
1a0024f6:	4b10      	ldr	r3, [pc, #64]	; (1a002538 <fpuInit+0x44>)
1a0024f8:	681b      	ldr	r3, [r3, #0]
1a0024fa:	9302      	str	r3, [sp, #8]
1a0024fc:	4b0f      	ldr	r3, [pc, #60]	; (1a00253c <fpuInit+0x48>)
1a0024fe:	681b      	ldr	r3, [r3, #0]
1a002500:	9301      	str	r3, [sp, #4]
1a002502:	9a02      	ldr	r2, [sp, #8]
1a002504:	4b0e      	ldr	r3, [pc, #56]	; (1a002540 <fpuInit+0x4c>)
1a002506:	429a      	cmp	r2, r3
1a002508:	d105      	bne.n	1a002516 <fpuInit+0x22>
1a00250a:	9a01      	ldr	r2, [sp, #4]
1a00250c:	4b0d      	ldr	r3, [pc, #52]	; (1a002544 <fpuInit+0x50>)
1a00250e:	429a      	cmp	r2, r3
1a002510:	d003      	beq.n	1a00251a <fpuInit+0x26>
1a002512:	2300      	movs	r3, #0
1a002514:	e002      	b.n	1a00251c <fpuInit+0x28>
1a002516:	2300      	movs	r3, #0
1a002518:	e000      	b.n	1a00251c <fpuInit+0x28>
1a00251a:	2301      	movs	r3, #1
1a00251c:	f013 0fff 	tst.w	r3, #255	; 0xff
1a002520:	d008      	beq.n	1a002534 <fpuInit+0x40>
1a002522:	4a09      	ldr	r2, [pc, #36]	; (1a002548 <fpuInit+0x54>)
1a002524:	6813      	ldr	r3, [r2, #0]
1a002526:	9303      	str	r3, [sp, #12]
1a002528:	9b03      	ldr	r3, [sp, #12]
1a00252a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
1a00252e:	9303      	str	r3, [sp, #12]
1a002530:	9b03      	ldr	r3, [sp, #12]
1a002532:	6013      	str	r3, [r2, #0]
1a002534:	b004      	add	sp, #16
1a002536:	4770      	bx	lr
1a002538:	e000ef40 	.word	0xe000ef40
1a00253c:	e000ef44 	.word	0xe000ef44
1a002540:	10110021 	.word	0x10110021
1a002544:	11000011 	.word	0x11000011
1a002548:	e000ed88 	.word	0xe000ed88

1a00254c <Chip_GPIO_Init>:
1a00254c:	4770      	bx	lr
1a00254e:	bf00      	nop

1a002550 <Chip_GPIO_DeInit>:
1a002550:	4770      	bx	lr
1a002552:	bf00      	nop

1a002554 <ResetISR>:
1a002554:	b672      	cpsid	i
1a002556:	4a17      	ldr	r2, [pc, #92]	; (1a0025b4 <ResetISR+0x60>)
1a002558:	4b17      	ldr	r3, [pc, #92]	; (1a0025b8 <ResetISR+0x64>)
1a00255a:	601a      	str	r2, [r3, #0]
1a00255c:	4a17      	ldr	r2, [pc, #92]	; (1a0025bc <ResetISR+0x68>)
1a00255e:	3304      	adds	r3, #4
1a002560:	601a      	str	r2, [r3, #0]
1a002562:	2300      	movs	r3, #0
1a002564:	e005      	b.n	1a002572 <ResetISR+0x1e>
1a002566:	f04f 31ff 	mov.w	r1, #4294967295
1a00256a:	4a15      	ldr	r2, [pc, #84]	; (1a0025c0 <ResetISR+0x6c>)
1a00256c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
1a002570:	3301      	adds	r3, #1
1a002572:	2b07      	cmp	r3, #7
1a002574:	d9f7      	bls.n	1a002566 <ResetISR+0x12>
1a002576:	b510      	push	{r4, lr}
1a002578:	b662      	cpsie	i
1a00257a:	f7fe feab 	bl	1a0012d4 <SystemInit>
1a00257e:	4b11      	ldr	r3, [pc, #68]	; (1a0025c4 <ResetISR+0x70>)
1a002580:	e007      	b.n	1a002592 <ResetISR+0x3e>
1a002582:	f103 040c 	add.w	r4, r3, #12
1a002586:	689a      	ldr	r2, [r3, #8]
1a002588:	6859      	ldr	r1, [r3, #4]
1a00258a:	6818      	ldr	r0, [r3, #0]
1a00258c:	f7fd fe0a 	bl	1a0001a4 <data_init>
1a002590:	4623      	mov	r3, r4
1a002592:	4a0d      	ldr	r2, [pc, #52]	; (1a0025c8 <ResetISR+0x74>)
1a002594:	4293      	cmp	r3, r2
1a002596:	d3f4      	bcc.n	1a002582 <ResetISR+0x2e>
1a002598:	e006      	b.n	1a0025a8 <ResetISR+0x54>
1a00259a:	461c      	mov	r4, r3
1a00259c:	6859      	ldr	r1, [r3, #4]
1a00259e:	f854 0b08 	ldr.w	r0, [r4], #8
1a0025a2:	f7fd fe0d 	bl	1a0001c0 <bss_init>
1a0025a6:	4623      	mov	r3, r4
1a0025a8:	4a08      	ldr	r2, [pc, #32]	; (1a0025cc <ResetISR+0x78>)
1a0025aa:	4293      	cmp	r3, r2
1a0025ac:	d3f5      	bcc.n	1a00259a <ResetISR+0x46>
1a0025ae:	f7fe f83d 	bl	1a00062c <main>
1a0025b2:	e7fe      	b.n	1a0025b2 <ResetISR+0x5e>
1a0025b4:	10df1000 	.word	0x10df1000
1a0025b8:	40053100 	.word	0x40053100
1a0025bc:	01dff7ff 	.word	0x01dff7ff
1a0025c0:	e000e280 	.word	0xe000e280
1a0025c4:	1a000114 	.word	0x1a000114
1a0025c8:	1a000150 	.word	0x1a000150
1a0025cc:	1a000178 	.word	0x1a000178

1a0025d0 <__aeabi_uldivmod>:
1a0025d0:	b953      	cbnz	r3, 1a0025e8 <__aeabi_uldivmod+0x18>
1a0025d2:	b94a      	cbnz	r2, 1a0025e8 <__aeabi_uldivmod+0x18>
1a0025d4:	2900      	cmp	r1, #0
1a0025d6:	bf08      	it	eq
1a0025d8:	2800      	cmpeq	r0, #0
1a0025da:	bf1c      	itt	ne
1a0025dc:	f04f 31ff 	movne.w	r1, #4294967295
1a0025e0:	f04f 30ff 	movne.w	r0, #4294967295
1a0025e4:	f000 b83c 	b.w	1a002660 <__aeabi_idiv0>
1a0025e8:	b082      	sub	sp, #8
1a0025ea:	46ec      	mov	ip, sp
1a0025ec:	e92d 5000 	stmdb	sp!, {ip, lr}
1a0025f0:	f000 f81e 	bl	1a002630 <__gnu_uldivmod_helper>
1a0025f4:	f8dd e004 	ldr.w	lr, [sp, #4]
1a0025f8:	b002      	add	sp, #8
1a0025fa:	bc0c      	pop	{r2, r3}
1a0025fc:	4770      	bx	lr
1a0025fe:	bf00      	nop

1a002600 <__gnu_ldivmod_helper>:
1a002600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002604:	9c06      	ldr	r4, [sp, #24]
1a002606:	4615      	mov	r5, r2
1a002608:	4606      	mov	r6, r0
1a00260a:	460f      	mov	r7, r1
1a00260c:	4698      	mov	r8, r3
1a00260e:	f000 f829 	bl	1a002664 <__divdi3>
1a002612:	fb05 f301 	mul.w	r3, r5, r1
1a002616:	fb00 3808 	mla	r8, r0, r8, r3
1a00261a:	fba5 2300 	umull	r2, r3, r5, r0
1a00261e:	1ab2      	subs	r2, r6, r2
1a002620:	4443      	add	r3, r8
1a002622:	eb67 0303 	sbc.w	r3, r7, r3
1a002626:	e9c4 2300 	strd	r2, r3, [r4]
1a00262a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00262e:	bf00      	nop

1a002630 <__gnu_uldivmod_helper>:
1a002630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002634:	9c06      	ldr	r4, [sp, #24]
1a002636:	4690      	mov	r8, r2
1a002638:	4606      	mov	r6, r0
1a00263a:	460f      	mov	r7, r1
1a00263c:	461d      	mov	r5, r3
1a00263e:	f000 f95f 	bl	1a002900 <__udivdi3>
1a002642:	fb00 f505 	mul.w	r5, r0, r5
1a002646:	fba0 2308 	umull	r2, r3, r0, r8
1a00264a:	fb08 5501 	mla	r5, r8, r1, r5
1a00264e:	1ab2      	subs	r2, r6, r2
1a002650:	442b      	add	r3, r5
1a002652:	eb67 0303 	sbc.w	r3, r7, r3
1a002656:	e9c4 2300 	strd	r2, r3, [r4]
1a00265a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00265e:	bf00      	nop

1a002660 <__aeabi_idiv0>:
1a002660:	4770      	bx	lr
1a002662:	bf00      	nop

1a002664 <__divdi3>:
1a002664:	2900      	cmp	r1, #0
1a002666:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a00266a:	f2c0 80a6 	blt.w	1a0027ba <__divdi3+0x156>
1a00266e:	2600      	movs	r6, #0
1a002670:	2b00      	cmp	r3, #0
1a002672:	f2c0 809c 	blt.w	1a0027ae <__divdi3+0x14a>
1a002676:	4688      	mov	r8, r1
1a002678:	4694      	mov	ip, r2
1a00267a:	469e      	mov	lr, r3
1a00267c:	4615      	mov	r5, r2
1a00267e:	4604      	mov	r4, r0
1a002680:	460f      	mov	r7, r1
1a002682:	2b00      	cmp	r3, #0
1a002684:	d13d      	bne.n	1a002702 <__divdi3+0x9e>
1a002686:	428a      	cmp	r2, r1
1a002688:	d959      	bls.n	1a00273e <__divdi3+0xda>
1a00268a:	fab2 f382 	clz	r3, r2
1a00268e:	b13b      	cbz	r3, 1a0026a0 <__divdi3+0x3c>
1a002690:	f1c3 0220 	rsb	r2, r3, #32
1a002694:	409f      	lsls	r7, r3
1a002696:	fa20 f202 	lsr.w	r2, r0, r2
1a00269a:	409d      	lsls	r5, r3
1a00269c:	4317      	orrs	r7, r2
1a00269e:	409c      	lsls	r4, r3
1a0026a0:	0c29      	lsrs	r1, r5, #16
1a0026a2:	0c22      	lsrs	r2, r4, #16
1a0026a4:	fbb7 fef1 	udiv	lr, r7, r1
1a0026a8:	b2a8      	uxth	r0, r5
1a0026aa:	fb01 771e 	mls	r7, r1, lr, r7
1a0026ae:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
1a0026b2:	fb00 f30e 	mul.w	r3, r0, lr
1a0026b6:	42bb      	cmp	r3, r7
1a0026b8:	d90a      	bls.n	1a0026d0 <__divdi3+0x6c>
1a0026ba:	197f      	adds	r7, r7, r5
1a0026bc:	f10e 32ff 	add.w	r2, lr, #4294967295
1a0026c0:	f080 8105 	bcs.w	1a0028ce <__divdi3+0x26a>
1a0026c4:	42bb      	cmp	r3, r7
1a0026c6:	f240 8102 	bls.w	1a0028ce <__divdi3+0x26a>
1a0026ca:	f1ae 0e02 	sub.w	lr, lr, #2
1a0026ce:	442f      	add	r7, r5
1a0026d0:	1aff      	subs	r7, r7, r3
1a0026d2:	b2a4      	uxth	r4, r4
1a0026d4:	fbb7 f3f1 	udiv	r3, r7, r1
1a0026d8:	fb01 7713 	mls	r7, r1, r3, r7
1a0026dc:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
1a0026e0:	fb00 f003 	mul.w	r0, r0, r3
1a0026e4:	42b8      	cmp	r0, r7
1a0026e6:	d908      	bls.n	1a0026fa <__divdi3+0x96>
1a0026e8:	197f      	adds	r7, r7, r5
1a0026ea:	f103 32ff 	add.w	r2, r3, #4294967295
1a0026ee:	f080 80f0 	bcs.w	1a0028d2 <__divdi3+0x26e>
1a0026f2:	42b8      	cmp	r0, r7
1a0026f4:	f240 80ed 	bls.w	1a0028d2 <__divdi3+0x26e>
1a0026f8:	3b02      	subs	r3, #2
1a0026fa:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
1a0026fe:	2200      	movs	r2, #0
1a002700:	e003      	b.n	1a00270a <__divdi3+0xa6>
1a002702:	428b      	cmp	r3, r1
1a002704:	d90f      	bls.n	1a002726 <__divdi3+0xc2>
1a002706:	2200      	movs	r2, #0
1a002708:	4613      	mov	r3, r2
1a00270a:	1c34      	adds	r4, r6, #0
1a00270c:	bf18      	it	ne
1a00270e:	2401      	movne	r4, #1
1a002710:	4260      	negs	r0, r4
1a002712:	f04f 0500 	mov.w	r5, #0
1a002716:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
1a00271a:	4058      	eors	r0, r3
1a00271c:	4051      	eors	r1, r2
1a00271e:	1900      	adds	r0, r0, r4
1a002720:	4169      	adcs	r1, r5
1a002722:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a002726:	fab3 f283 	clz	r2, r3
1a00272a:	2a00      	cmp	r2, #0
1a00272c:	f040 8086 	bne.w	1a00283c <__divdi3+0x1d8>
1a002730:	428b      	cmp	r3, r1
1a002732:	d302      	bcc.n	1a00273a <__divdi3+0xd6>
1a002734:	4584      	cmp	ip, r0
1a002736:	f200 80db 	bhi.w	1a0028f0 <__divdi3+0x28c>
1a00273a:	2301      	movs	r3, #1
1a00273c:	e7e5      	b.n	1a00270a <__divdi3+0xa6>
1a00273e:	b912      	cbnz	r2, 1a002746 <__divdi3+0xe2>
1a002740:	2301      	movs	r3, #1
1a002742:	fbb3 f5f2 	udiv	r5, r3, r2
1a002746:	fab5 f085 	clz	r0, r5
1a00274a:	2800      	cmp	r0, #0
1a00274c:	d13b      	bne.n	1a0027c6 <__divdi3+0x162>
1a00274e:	1b78      	subs	r0, r7, r5
1a002750:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002754:	fa1f fc85 	uxth.w	ip, r5
1a002758:	2201      	movs	r2, #1
1a00275a:	fbb0 f8fe 	udiv	r8, r0, lr
1a00275e:	0c21      	lsrs	r1, r4, #16
1a002760:	fb0e 0718 	mls	r7, lr, r8, r0
1a002764:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
1a002768:	fb0c f308 	mul.w	r3, ip, r8
1a00276c:	42bb      	cmp	r3, r7
1a00276e:	d907      	bls.n	1a002780 <__divdi3+0x11c>
1a002770:	197f      	adds	r7, r7, r5
1a002772:	f108 31ff 	add.w	r1, r8, #4294967295
1a002776:	d202      	bcs.n	1a00277e <__divdi3+0x11a>
1a002778:	42bb      	cmp	r3, r7
1a00277a:	f200 80bd 	bhi.w	1a0028f8 <__divdi3+0x294>
1a00277e:	4688      	mov	r8, r1
1a002780:	1aff      	subs	r7, r7, r3
1a002782:	b2a4      	uxth	r4, r4
1a002784:	fbb7 f3fe 	udiv	r3, r7, lr
1a002788:	fb0e 7713 	mls	r7, lr, r3, r7
1a00278c:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
1a002790:	fb0c fc03 	mul.w	ip, ip, r3
1a002794:	45bc      	cmp	ip, r7
1a002796:	d907      	bls.n	1a0027a8 <__divdi3+0x144>
1a002798:	197f      	adds	r7, r7, r5
1a00279a:	f103 31ff 	add.w	r1, r3, #4294967295
1a00279e:	d202      	bcs.n	1a0027a6 <__divdi3+0x142>
1a0027a0:	45bc      	cmp	ip, r7
1a0027a2:	f200 80a7 	bhi.w	1a0028f4 <__divdi3+0x290>
1a0027a6:	460b      	mov	r3, r1
1a0027a8:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a0027ac:	e7ad      	b.n	1a00270a <__divdi3+0xa6>
1a0027ae:	4252      	negs	r2, r2
1a0027b0:	ea6f 0606 	mvn.w	r6, r6
1a0027b4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1a0027b8:	e75d      	b.n	1a002676 <__divdi3+0x12>
1a0027ba:	4240      	negs	r0, r0
1a0027bc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a0027c0:	f04f 36ff 	mov.w	r6, #4294967295
1a0027c4:	e754      	b.n	1a002670 <__divdi3+0xc>
1a0027c6:	f1c0 0220 	rsb	r2, r0, #32
1a0027ca:	fa24 f102 	lsr.w	r1, r4, r2
1a0027ce:	fa07 f300 	lsl.w	r3, r7, r0
1a0027d2:	4085      	lsls	r5, r0
1a0027d4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a0027d8:	40d7      	lsrs	r7, r2
1a0027da:	4319      	orrs	r1, r3
1a0027dc:	fbb7 f2fe 	udiv	r2, r7, lr
1a0027e0:	0c0b      	lsrs	r3, r1, #16
1a0027e2:	fb0e 7712 	mls	r7, lr, r2, r7
1a0027e6:	fa1f fc85 	uxth.w	ip, r5
1a0027ea:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
1a0027ee:	fb0c f702 	mul.w	r7, ip, r2
1a0027f2:	429f      	cmp	r7, r3
1a0027f4:	fa04 f400 	lsl.w	r4, r4, r0
1a0027f8:	d907      	bls.n	1a00280a <__divdi3+0x1a6>
1a0027fa:	195b      	adds	r3, r3, r5
1a0027fc:	f102 30ff 	add.w	r0, r2, #4294967295
1a002800:	d274      	bcs.n	1a0028ec <__divdi3+0x288>
1a002802:	429f      	cmp	r7, r3
1a002804:	d972      	bls.n	1a0028ec <__divdi3+0x288>
1a002806:	3a02      	subs	r2, #2
1a002808:	442b      	add	r3, r5
1a00280a:	1bdf      	subs	r7, r3, r7
1a00280c:	b289      	uxth	r1, r1
1a00280e:	fbb7 f8fe 	udiv	r8, r7, lr
1a002812:	fb0e 7318 	mls	r3, lr, r8, r7
1a002816:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
1a00281a:	fb0c f708 	mul.w	r7, ip, r8
1a00281e:	429f      	cmp	r7, r3
1a002820:	d908      	bls.n	1a002834 <__divdi3+0x1d0>
1a002822:	195b      	adds	r3, r3, r5
1a002824:	f108 31ff 	add.w	r1, r8, #4294967295
1a002828:	d25c      	bcs.n	1a0028e4 <__divdi3+0x280>
1a00282a:	429f      	cmp	r7, r3
1a00282c:	d95a      	bls.n	1a0028e4 <__divdi3+0x280>
1a00282e:	f1a8 0802 	sub.w	r8, r8, #2
1a002832:	442b      	add	r3, r5
1a002834:	1bd8      	subs	r0, r3, r7
1a002836:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
1a00283a:	e78e      	b.n	1a00275a <__divdi3+0xf6>
1a00283c:	f1c2 0320 	rsb	r3, r2, #32
1a002840:	fa2c f103 	lsr.w	r1, ip, r3
1a002844:	fa0e fe02 	lsl.w	lr, lr, r2
1a002848:	fa20 f703 	lsr.w	r7, r0, r3
1a00284c:	ea41 0e0e 	orr.w	lr, r1, lr
1a002850:	fa08 f002 	lsl.w	r0, r8, r2
1a002854:	fa28 f103 	lsr.w	r1, r8, r3
1a002858:	ea4f 451e 	mov.w	r5, lr, lsr #16
1a00285c:	4338      	orrs	r0, r7
1a00285e:	fbb1 f8f5 	udiv	r8, r1, r5
1a002862:	0c03      	lsrs	r3, r0, #16
1a002864:	fb05 1118 	mls	r1, r5, r8, r1
1a002868:	fa1f f78e 	uxth.w	r7, lr
1a00286c:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
1a002870:	fb07 f308 	mul.w	r3, r7, r8
1a002874:	428b      	cmp	r3, r1
1a002876:	fa0c fc02 	lsl.w	ip, ip, r2
1a00287a:	d909      	bls.n	1a002890 <__divdi3+0x22c>
1a00287c:	eb11 010e 	adds.w	r1, r1, lr
1a002880:	f108 39ff 	add.w	r9, r8, #4294967295
1a002884:	d230      	bcs.n	1a0028e8 <__divdi3+0x284>
1a002886:	428b      	cmp	r3, r1
1a002888:	d92e      	bls.n	1a0028e8 <__divdi3+0x284>
1a00288a:	f1a8 0802 	sub.w	r8, r8, #2
1a00288e:	4471      	add	r1, lr
1a002890:	1ac9      	subs	r1, r1, r3
1a002892:	b280      	uxth	r0, r0
1a002894:	fbb1 f3f5 	udiv	r3, r1, r5
1a002898:	fb05 1113 	mls	r1, r5, r3, r1
1a00289c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
1a0028a0:	fb07 f703 	mul.w	r7, r7, r3
1a0028a4:	428f      	cmp	r7, r1
1a0028a6:	d908      	bls.n	1a0028ba <__divdi3+0x256>
1a0028a8:	eb11 010e 	adds.w	r1, r1, lr
1a0028ac:	f103 30ff 	add.w	r0, r3, #4294967295
1a0028b0:	d216      	bcs.n	1a0028e0 <__divdi3+0x27c>
1a0028b2:	428f      	cmp	r7, r1
1a0028b4:	d914      	bls.n	1a0028e0 <__divdi3+0x27c>
1a0028b6:	3b02      	subs	r3, #2
1a0028b8:	4471      	add	r1, lr
1a0028ba:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a0028be:	1bc9      	subs	r1, r1, r7
1a0028c0:	fba3 890c 	umull	r8, r9, r3, ip
1a0028c4:	4549      	cmp	r1, r9
1a0028c6:	d309      	bcc.n	1a0028dc <__divdi3+0x278>
1a0028c8:	d005      	beq.n	1a0028d6 <__divdi3+0x272>
1a0028ca:	2200      	movs	r2, #0
1a0028cc:	e71d      	b.n	1a00270a <__divdi3+0xa6>
1a0028ce:	4696      	mov	lr, r2
1a0028d0:	e6fe      	b.n	1a0026d0 <__divdi3+0x6c>
1a0028d2:	4613      	mov	r3, r2
1a0028d4:	e711      	b.n	1a0026fa <__divdi3+0x96>
1a0028d6:	4094      	lsls	r4, r2
1a0028d8:	4544      	cmp	r4, r8
1a0028da:	d2f6      	bcs.n	1a0028ca <__divdi3+0x266>
1a0028dc:	3b01      	subs	r3, #1
1a0028de:	e7f4      	b.n	1a0028ca <__divdi3+0x266>
1a0028e0:	4603      	mov	r3, r0
1a0028e2:	e7ea      	b.n	1a0028ba <__divdi3+0x256>
1a0028e4:	4688      	mov	r8, r1
1a0028e6:	e7a5      	b.n	1a002834 <__divdi3+0x1d0>
1a0028e8:	46c8      	mov	r8, r9
1a0028ea:	e7d1      	b.n	1a002890 <__divdi3+0x22c>
1a0028ec:	4602      	mov	r2, r0
1a0028ee:	e78c      	b.n	1a00280a <__divdi3+0x1a6>
1a0028f0:	4613      	mov	r3, r2
1a0028f2:	e70a      	b.n	1a00270a <__divdi3+0xa6>
1a0028f4:	3b02      	subs	r3, #2
1a0028f6:	e757      	b.n	1a0027a8 <__divdi3+0x144>
1a0028f8:	f1a8 0802 	sub.w	r8, r8, #2
1a0028fc:	442f      	add	r7, r5
1a0028fe:	e73f      	b.n	1a002780 <__divdi3+0x11c>

1a002900 <__udivdi3>:
1a002900:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002904:	2b00      	cmp	r3, #0
1a002906:	d144      	bne.n	1a002992 <__udivdi3+0x92>
1a002908:	428a      	cmp	r2, r1
1a00290a:	4615      	mov	r5, r2
1a00290c:	4604      	mov	r4, r0
1a00290e:	d94f      	bls.n	1a0029b0 <__udivdi3+0xb0>
1a002910:	fab2 f782 	clz	r7, r2
1a002914:	460e      	mov	r6, r1
1a002916:	b14f      	cbz	r7, 1a00292c <__udivdi3+0x2c>
1a002918:	f1c7 0320 	rsb	r3, r7, #32
1a00291c:	40b9      	lsls	r1, r7
1a00291e:	fa20 f603 	lsr.w	r6, r0, r3
1a002922:	fa02 f507 	lsl.w	r5, r2, r7
1a002926:	430e      	orrs	r6, r1
1a002928:	fa00 f407 	lsl.w	r4, r0, r7
1a00292c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002930:	0c23      	lsrs	r3, r4, #16
1a002932:	fbb6 f0fe 	udiv	r0, r6, lr
1a002936:	b2af      	uxth	r7, r5
1a002938:	fb0e 6110 	mls	r1, lr, r0, r6
1a00293c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a002940:	fb07 f100 	mul.w	r1, r7, r0
1a002944:	4299      	cmp	r1, r3
1a002946:	d909      	bls.n	1a00295c <__udivdi3+0x5c>
1a002948:	195b      	adds	r3, r3, r5
1a00294a:	f100 32ff 	add.w	r2, r0, #4294967295
1a00294e:	f080 80ec 	bcs.w	1a002b2a <__udivdi3+0x22a>
1a002952:	4299      	cmp	r1, r3
1a002954:	f240 80e9 	bls.w	1a002b2a <__udivdi3+0x22a>
1a002958:	3802      	subs	r0, #2
1a00295a:	442b      	add	r3, r5
1a00295c:	1a5a      	subs	r2, r3, r1
1a00295e:	b2a4      	uxth	r4, r4
1a002960:	fbb2 f3fe 	udiv	r3, r2, lr
1a002964:	fb0e 2213 	mls	r2, lr, r3, r2
1a002968:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
1a00296c:	fb07 f703 	mul.w	r7, r7, r3
1a002970:	4297      	cmp	r7, r2
1a002972:	d908      	bls.n	1a002986 <__udivdi3+0x86>
1a002974:	1952      	adds	r2, r2, r5
1a002976:	f103 31ff 	add.w	r1, r3, #4294967295
1a00297a:	f080 80d8 	bcs.w	1a002b2e <__udivdi3+0x22e>
1a00297e:	4297      	cmp	r7, r2
1a002980:	f240 80d5 	bls.w	1a002b2e <__udivdi3+0x22e>
1a002984:	3b02      	subs	r3, #2
1a002986:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
1a00298a:	2600      	movs	r6, #0
1a00298c:	4631      	mov	r1, r6
1a00298e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002992:	428b      	cmp	r3, r1
1a002994:	d847      	bhi.n	1a002a26 <__udivdi3+0x126>
1a002996:	fab3 f683 	clz	r6, r3
1a00299a:	2e00      	cmp	r6, #0
1a00299c:	d148      	bne.n	1a002a30 <__udivdi3+0x130>
1a00299e:	428b      	cmp	r3, r1
1a0029a0:	d302      	bcc.n	1a0029a8 <__udivdi3+0xa8>
1a0029a2:	4282      	cmp	r2, r0
1a0029a4:	f200 80cd 	bhi.w	1a002b42 <__udivdi3+0x242>
1a0029a8:	2001      	movs	r0, #1
1a0029aa:	4631      	mov	r1, r6
1a0029ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a0029b0:	b912      	cbnz	r2, 1a0029b8 <__udivdi3+0xb8>
1a0029b2:	2501      	movs	r5, #1
1a0029b4:	fbb5 f5f2 	udiv	r5, r5, r2
1a0029b8:	fab5 f885 	clz	r8, r5
1a0029bc:	f1b8 0f00 	cmp.w	r8, #0
1a0029c0:	d177      	bne.n	1a002ab2 <__udivdi3+0x1b2>
1a0029c2:	1b4a      	subs	r2, r1, r5
1a0029c4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a0029c8:	b2af      	uxth	r7, r5
1a0029ca:	2601      	movs	r6, #1
1a0029cc:	fbb2 f0fe 	udiv	r0, r2, lr
1a0029d0:	0c23      	lsrs	r3, r4, #16
1a0029d2:	fb0e 2110 	mls	r1, lr, r0, r2
1a0029d6:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
1a0029da:	fb07 f300 	mul.w	r3, r7, r0
1a0029de:	428b      	cmp	r3, r1
1a0029e0:	d907      	bls.n	1a0029f2 <__udivdi3+0xf2>
1a0029e2:	1949      	adds	r1, r1, r5
1a0029e4:	f100 32ff 	add.w	r2, r0, #4294967295
1a0029e8:	d202      	bcs.n	1a0029f0 <__udivdi3+0xf0>
1a0029ea:	428b      	cmp	r3, r1
1a0029ec:	f200 80ba 	bhi.w	1a002b64 <__udivdi3+0x264>
1a0029f0:	4610      	mov	r0, r2
1a0029f2:	1ac9      	subs	r1, r1, r3
1a0029f4:	b2a4      	uxth	r4, r4
1a0029f6:	fbb1 f3fe 	udiv	r3, r1, lr
1a0029fa:	fb0e 1113 	mls	r1, lr, r3, r1
1a0029fe:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
1a002a02:	fb07 f703 	mul.w	r7, r7, r3
1a002a06:	42a7      	cmp	r7, r4
1a002a08:	d908      	bls.n	1a002a1c <__udivdi3+0x11c>
1a002a0a:	1964      	adds	r4, r4, r5
1a002a0c:	f103 32ff 	add.w	r2, r3, #4294967295
1a002a10:	f080 808f 	bcs.w	1a002b32 <__udivdi3+0x232>
1a002a14:	42a7      	cmp	r7, r4
1a002a16:	f240 808c 	bls.w	1a002b32 <__udivdi3+0x232>
1a002a1a:	3b02      	subs	r3, #2
1a002a1c:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
1a002a20:	4631      	mov	r1, r6
1a002a22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002a26:	2600      	movs	r6, #0
1a002a28:	4630      	mov	r0, r6
1a002a2a:	4631      	mov	r1, r6
1a002a2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002a30:	f1c6 0420 	rsb	r4, r6, #32
1a002a34:	fa22 f504 	lsr.w	r5, r2, r4
1a002a38:	40b3      	lsls	r3, r6
1a002a3a:	432b      	orrs	r3, r5
1a002a3c:	fa20 fc04 	lsr.w	ip, r0, r4
1a002a40:	fa01 f706 	lsl.w	r7, r1, r6
1a002a44:	fa21 f504 	lsr.w	r5, r1, r4
1a002a48:	ea4f 4e13 	mov.w	lr, r3, lsr #16
1a002a4c:	ea4c 0707 	orr.w	r7, ip, r7
1a002a50:	fbb5 f8fe 	udiv	r8, r5, lr
1a002a54:	0c39      	lsrs	r1, r7, #16
1a002a56:	fb0e 5518 	mls	r5, lr, r8, r5
1a002a5a:	fa1f fc83 	uxth.w	ip, r3
1a002a5e:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
1a002a62:	fb0c f108 	mul.w	r1, ip, r8
1a002a66:	42a9      	cmp	r1, r5
1a002a68:	fa02 f206 	lsl.w	r2, r2, r6
1a002a6c:	d904      	bls.n	1a002a78 <__udivdi3+0x178>
1a002a6e:	18ed      	adds	r5, r5, r3
1a002a70:	f108 34ff 	add.w	r4, r8, #4294967295
1a002a74:	d367      	bcc.n	1a002b46 <__udivdi3+0x246>
1a002a76:	46a0      	mov	r8, r4
1a002a78:	1a6d      	subs	r5, r5, r1
1a002a7a:	b2bf      	uxth	r7, r7
1a002a7c:	fbb5 f4fe 	udiv	r4, r5, lr
1a002a80:	fb0e 5514 	mls	r5, lr, r4, r5
1a002a84:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
1a002a88:	fb0c fc04 	mul.w	ip, ip, r4
1a002a8c:	458c      	cmp	ip, r1
1a002a8e:	d904      	bls.n	1a002a9a <__udivdi3+0x19a>
1a002a90:	18c9      	adds	r1, r1, r3
1a002a92:	f104 35ff 	add.w	r5, r4, #4294967295
1a002a96:	d35c      	bcc.n	1a002b52 <__udivdi3+0x252>
1a002a98:	462c      	mov	r4, r5
1a002a9a:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
1a002a9e:	ebcc 0101 	rsb	r1, ip, r1
1a002aa2:	fba4 2302 	umull	r2, r3, r4, r2
1a002aa6:	4299      	cmp	r1, r3
1a002aa8:	d348      	bcc.n	1a002b3c <__udivdi3+0x23c>
1a002aaa:	d044      	beq.n	1a002b36 <__udivdi3+0x236>
1a002aac:	4620      	mov	r0, r4
1a002aae:	2600      	movs	r6, #0
1a002ab0:	e76c      	b.n	1a00298c <__udivdi3+0x8c>
1a002ab2:	f1c8 0420 	rsb	r4, r8, #32
1a002ab6:	fa01 f308 	lsl.w	r3, r1, r8
1a002aba:	fa05 f508 	lsl.w	r5, r5, r8
1a002abe:	fa20 f704 	lsr.w	r7, r0, r4
1a002ac2:	40e1      	lsrs	r1, r4
1a002ac4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002ac8:	431f      	orrs	r7, r3
1a002aca:	fbb1 f6fe 	udiv	r6, r1, lr
1a002ace:	0c3a      	lsrs	r2, r7, #16
1a002ad0:	fb0e 1116 	mls	r1, lr, r6, r1
1a002ad4:	fa1f fc85 	uxth.w	ip, r5
1a002ad8:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
1a002adc:	fb0c f206 	mul.w	r2, ip, r6
1a002ae0:	429a      	cmp	r2, r3
1a002ae2:	fa00 f408 	lsl.w	r4, r0, r8
1a002ae6:	d907      	bls.n	1a002af8 <__udivdi3+0x1f8>
1a002ae8:	195b      	adds	r3, r3, r5
1a002aea:	f106 31ff 	add.w	r1, r6, #4294967295
1a002aee:	d237      	bcs.n	1a002b60 <__udivdi3+0x260>
1a002af0:	429a      	cmp	r2, r3
1a002af2:	d935      	bls.n	1a002b60 <__udivdi3+0x260>
1a002af4:	3e02      	subs	r6, #2
1a002af6:	442b      	add	r3, r5
1a002af8:	1a9b      	subs	r3, r3, r2
1a002afa:	b2bf      	uxth	r7, r7
1a002afc:	fbb3 f0fe 	udiv	r0, r3, lr
1a002b00:	fb0e 3310 	mls	r3, lr, r0, r3
1a002b04:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
1a002b08:	fb0c f100 	mul.w	r1, ip, r0
1a002b0c:	4299      	cmp	r1, r3
1a002b0e:	d907      	bls.n	1a002b20 <__udivdi3+0x220>
1a002b10:	195b      	adds	r3, r3, r5
1a002b12:	f100 32ff 	add.w	r2, r0, #4294967295
1a002b16:	d221      	bcs.n	1a002b5c <__udivdi3+0x25c>
1a002b18:	4299      	cmp	r1, r3
1a002b1a:	d91f      	bls.n	1a002b5c <__udivdi3+0x25c>
1a002b1c:	3802      	subs	r0, #2
1a002b1e:	442b      	add	r3, r5
1a002b20:	1a5a      	subs	r2, r3, r1
1a002b22:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
1a002b26:	4667      	mov	r7, ip
1a002b28:	e750      	b.n	1a0029cc <__udivdi3+0xcc>
1a002b2a:	4610      	mov	r0, r2
1a002b2c:	e716      	b.n	1a00295c <__udivdi3+0x5c>
1a002b2e:	460b      	mov	r3, r1
1a002b30:	e729      	b.n	1a002986 <__udivdi3+0x86>
1a002b32:	4613      	mov	r3, r2
1a002b34:	e772      	b.n	1a002a1c <__udivdi3+0x11c>
1a002b36:	40b0      	lsls	r0, r6
1a002b38:	4290      	cmp	r0, r2
1a002b3a:	d2b7      	bcs.n	1a002aac <__udivdi3+0x1ac>
1a002b3c:	1e60      	subs	r0, r4, #1
1a002b3e:	2600      	movs	r6, #0
1a002b40:	e724      	b.n	1a00298c <__udivdi3+0x8c>
1a002b42:	4630      	mov	r0, r6
1a002b44:	e722      	b.n	1a00298c <__udivdi3+0x8c>
1a002b46:	42a9      	cmp	r1, r5
1a002b48:	d995      	bls.n	1a002a76 <__udivdi3+0x176>
1a002b4a:	f1a8 0802 	sub.w	r8, r8, #2
1a002b4e:	441d      	add	r5, r3
1a002b50:	e792      	b.n	1a002a78 <__udivdi3+0x178>
1a002b52:	458c      	cmp	ip, r1
1a002b54:	d9a0      	bls.n	1a002a98 <__udivdi3+0x198>
1a002b56:	3c02      	subs	r4, #2
1a002b58:	4419      	add	r1, r3
1a002b5a:	e79e      	b.n	1a002a9a <__udivdi3+0x19a>
1a002b5c:	4610      	mov	r0, r2
1a002b5e:	e7df      	b.n	1a002b20 <__udivdi3+0x220>
1a002b60:	460e      	mov	r6, r1
1a002b62:	e7c9      	b.n	1a002af8 <__udivdi3+0x1f8>
1a002b64:	3802      	subs	r0, #2
1a002b66:	4429      	add	r1, r5
1a002b68:	e743      	b.n	1a0029f2 <__udivdi3+0xf2>
1a002b6a:	bf00      	nop

1a002b6c <memcpy>:
1a002b6c:	b510      	push	{r4, lr}
1a002b6e:	1e43      	subs	r3, r0, #1
1a002b70:	440a      	add	r2, r1
1a002b72:	4291      	cmp	r1, r2
1a002b74:	d004      	beq.n	1a002b80 <memcpy+0x14>
1a002b76:	f811 4b01 	ldrb.w	r4, [r1], #1
1a002b7a:	f803 4f01 	strb.w	r4, [r3, #1]!
1a002b7e:	e7f8      	b.n	1a002b72 <memcpy+0x6>
1a002b80:	bd10      	pop	{r4, pc}

1a002b82 <memset>:
1a002b82:	4402      	add	r2, r0
1a002b84:	4603      	mov	r3, r0
1a002b86:	4293      	cmp	r3, r2
1a002b88:	d002      	beq.n	1a002b90 <memset+0xe>
1a002b8a:	f803 1b01 	strb.w	r1, [r3], #1
1a002b8e:	e7fa      	b.n	1a002b86 <memset+0x4>
1a002b90:	4770      	bx	lr
	...

1a002b94 <timer_sd>:
1a002b94:	4000 4008 0020 0000 000c 0000 5000 4008     .@.@ ........P.@
1a002ba4:	0021 0000 000d 0000 3000 400c 0022 0000     !........0.@"...
1a002bb4:	000e 0000 4000 400c 0023 0000 000f 0000     .....@.@#.......

1a002bc4 <gpioPinsConfig>:
1a002bc4:	0104 0200 0701 0005 0d03 0501 0100 0408     ................
1a002bd4:	0002 0202 0304 0200 0403 0000 0002 0407     ................
1a002be4:	0300 030c 0402 0905 0103 0504 0208 0403     ................
1a002bf4:	0305 0402 0504 0604 000c 0802 0b06 0300     ................
1a002c04:	0607 0009 0503 0706 0504 060f 0004 0303     ................
1a002c14:	0404 0200 0404 0005 0502 0604 0200 0406     ................
1a002c24:	0408 0c05 0a04 0504 010e 0003 0a00 1401     ................
1a002c34:	0000 010f 0012 0d00 1101 0000 010c 0010     ................
1a002c44:	0300 0707 0300 000f 0001 0100 0000 0000     ................
1a002c54:	0600 000a 0603 0806 0504 0610 0005 0403     ................
1a002c64:	0106 0300 0400 0409 0d05 0401 0000 010b     ................
1a002c74:	000f 0200 0001 0000 0104 0001 0800 0201     ................
1a002c84:	0000 0109 0006 0901 0002 0504 0200 0401     ................
1a002c94:	0105 0202 0504 0202 000a 0e00 0b02 0100     ................
1a002ca4:	020b 000c 0c01 0004 0200 0400 0001 0102     ................
1a002cb4:	0204 0200 0402 0003 0302 0307 0300 070b     ................
1a002cc4:	0004 0c03 0507 0300 070d 0006 0e03 0102     ................
1a002cd4:	0504 0401 0006 0602 0504 0200 0405 0004     ................
1a002ce4:	0402 0804 0504 040c 0409 0d05 0a04 0504     ................
1a002cf4:	010e 0005 0801 0000                         ........

1a002cfc <gpioLEDBits>:
1a002cfc:	0e00 0b01 0c01 0005 0105 0205 6000 1237     .............`7.
1a002d0c:	5634 0000                                   4V..

1a002d10 <OscRateIn>:
1a002d10:	1b00 00b7                                   ....

1a002d14 <ExtRateIn>:
1a002d14:	0000 0000                                   ....

1a002d18 <pinmuxing>:
1a002d18:	0a02 0040 0b02 0040 0c02 0040 0002 0044     ..@...@...@...D.
1a002d28:	0102 0044 0202 0044 0302 0052 0402 0052     ..D...D...R...R.
1a002d38:	0509 0052 0609 0057 0206 0057 0001 0050     ..R...W...W...P.
1a002d48:	0101 0050 0201 0050 0601 0050 0f01 00f3     ..P...P...P.....
1a002d58:	1001 00f7 1101 00f3 1201 00b3 1301 00f0     ................
1a002d68:	1401 00b3 0707 00b6 0000 00f2 0100 00b6     ................

1a002d78 <InitClkStates>:
1a002d78:	0308 0001 0307 0001 0f01 0101               ............

1a002d84 <UART_PClock>:
1a002d84:	0081 0082 00a1 00a2                         ........

1a002d8c <UART_BClock>:
1a002d8c:	01c2 01a2 0182 0162                         ......b.

1a002d94 <usbPLLSetup>:
1a002d94:	601d 0000 7ffa 0616 0000 0000 0000 0000     .`..............
1a002da4:	3800 1c9c                                   .8..

1a002da8 <periph_to_base>:
1a002da8:	0000 0005 000a 0020 0024 0009 0040 0040     ...... .$...@.@.
1a002db8:	0005 0060 00a6 0004 00c0 00c3 0002 00e0     ..`.............
1a002dc8:	00e0 0001 0100 0100 0003 0120 0120 0006     .......... . ...
1a002dd8:	0140 0140 000c 0142 0142 0019 0162 0162     @.@...B.B...b.b.
1a002de8:	0013 0182 0182 0012 01a2 01a2 0011 01c2     ................
1a002df8:	01c2 0010 01e2 01e2 000f 0202 0202 000e     ................
1a002e08:	0222 0222 000d 0223 0223 001c 0201 0804     "."...#.#.......
1a002e18:	0f03 0f0f 00ff 0000                         ........

1a002e20 <InitClkStates>:
1a002e20:	0100 0001 0909 0001 090a 0001 0701 0101     ................
1a002e30:	0902 0001 0906 0001 090c 0101 090d 0001     ................
1a002e40:	090e 0001 090f 0001 0910 0001 0911 0001     ................
1a002e50:	0912 0001 0913 0001 1114 0001 1119 0001     ................
1a002e60:	111a 0001 111b 0001                         ........
