
misProyectos/ejer4-template/out/ejer4-template.elf:     file format elf32-littlearm
misProyectos/ejer4-template/out/ejer4-template.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1a0027f1

Program Header:
0x70000001 off    0x0000b1f8 vaddr 0x1a0031f8 paddr 0x1a0031f8 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x10000000 paddr 0x10000000 align 2**15
         filesz 0x000000b4 memsz 0x00000284 flags rw-
    LOAD off    0x00008000 vaddr 0x1a000000 paddr 0x1a000000 align 2**15
         filesz 0x00003200 memsz 0x00003200 flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x1a003200 align 2**15
         filesz 0x0000016c memsz 0x0000016c flags rw-
private flags = 5000402: [Version5 EABI] [hard-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000031f8  1a000000  1a000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000016c  10000000  1a003200  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2    00000000  10080000  10080000  0001016c  2**2
                  CONTENTS
  3 .data_RAM3    00000000  20000000  20000000  0001016c  2**2
                  CONTENTS
  4 .data_RAM4    00000000  20008000  20008000  0001016c  2**2
                  CONTENTS
  5 .data_RAM5    00000000  2000c000  2000c000  0001016c  2**2
                  CONTENTS
  6 .bss          00000114  10000170  10000170  00000170  2**3
                  ALLOC
  7 .bss_RAM2     00000000  10080000  10080000  0001016c  2**2
                  CONTENTS
  8 .bss_RAM3     00000000  20000000  20000000  0001016c  2**2
                  CONTENTS
  9 .bss_RAM4     00000000  20008000  20008000  0001016c  2**2
                  CONTENTS
 10 .bss_RAM5     00000000  2000c000  2000c000  0001016c  2**2
                  CONTENTS
 11 .ARM.exidx    00000008  1a0031f8  1a0031f8  0000b1f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .uninit_RESERVED 00000000  10000000  10000000  0001016c  2**2
                  CONTENTS
 13 .noinit_RAM2  00000000  10080000  10080000  0001016c  2**2
                  CONTENTS
 14 .noinit_RAM3  00000000  20000000  20000000  0001016c  2**2
                  CONTENTS
 15 .noinit_RAM4  00000000  20008000  20008000  0001016c  2**2
                  CONTENTS
 16 .noinit_RAM5  00000000  2000c000  2000c000  0001016c  2**2
                  CONTENTS
 17 .noinit       00000000  10000284  10000284  0001016c  2**2
                  CONTENTS
 18 .debug_info   0000f4d6  00000000  00000000  0001016c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 00002faa  00000000  00000000  0001f642  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_loc    00004d85  00000000  00000000  000225ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_aranges 00000400  00000000  00000000  00027371  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_macro  0000b171  00000000  00000000  00027771  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_line   0000d737  00000000  00000000  000328e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_str    0001c433  00000000  00000000  00040019  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      00000070  00000000  00000000  0005c44c  2**0
                  CONTENTS, READONLY
 26 .ARM.attributes 00000039  00000000  00000000  0005c4bc  2**0
                  CONTENTS, READONLY
 27 .debug_frame  000012c0  00000000  00000000  0005c4f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_ranges 000000a0  00000000  00000000  0005d7b8  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1a000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10080000 l    d  .data_RAM2	00000000 .data_RAM2
20000000 l    d  .data_RAM3	00000000 .data_RAM3
20008000 l    d  .data_RAM4	00000000 .data_RAM4
2000c000 l    d  .data_RAM5	00000000 .data_RAM5
10000170 l    d  .bss	00000000 .bss
10080000 l    d  .bss_RAM2	00000000 .bss_RAM2
20000000 l    d  .bss_RAM3	00000000 .bss_RAM3
20008000 l    d  .bss_RAM4	00000000 .bss_RAM4
2000c000 l    d  .bss_RAM5	00000000 .bss_RAM5
1a0031f8 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
10080000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
20000000 l    d  .noinit_RAM3	00000000 .noinit_RAM3
20008000 l    d  .noinit_RAM4	00000000 .noinit_RAM4
2000c000 l    d  .noinit_RAM5	00000000 .noinit_RAM5
10000284 l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 cr_startup_lpc43xx.c
00000000 l    df *ABS*	00000000 sapi_uart.c
00000000 l    df *ABS*	00000000 crp.c
00000000 l    df *ABS*	00000000 colas_datos.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 cooperativeOs_isr.c
00000000 l    df *ABS*	00000000 leds.c
10000170 l     O .bss	00000001 ledState
00000000 l    df *ABS*	00000000 cooperativeOs_scheduler.c
1a0005b8 l     F .text	00000008 schedulerGoToSleep
00000000 l    df *ABS*	00000000 main.c
10000030 l     O .data	000000f5 menu
1000017d l     O .bss	00000001 debugPrint
00000000 l    df *ABS*	00000000 sapi_sleep.c
00000000 l    df *ABS*	00000000 sapi_datatypes.c
00000000 l    df *ABS*	00000000 sapi_timer.c
1a0008f4 l     F .text	00000002 errorOcurred
1a0008f8 l     F .text	00000002 doNothing
1a002ec4 l     O .text	00000030 timer_sd
10000128 l     O .data	00000040 timer_dd
00000000 l    df *ABS*	00000000 sapi_delay.c
00000000 l    df *ABS*	00000000 sapi_tick.c
00000000 l    df *ABS*	00000000 sapi_print.c
00000000 l    df *ABS*	00000000 sapi_board.c
00000000 l    df *ABS*	00000000 sapi_convert.c
10000180 l     O .bss	00000011 result.10353
00000000 l    df *ABS*	00000000 sapi_gpio.c
1a001118 l     F .text	0000002c gpioObtainPinConfig
00000000 l    df *ABS*	00000000 board.c
1a0013a8 l     F .text	00000040 Board_LED_Init
1a00308c l     O .text	0000000c gpioLEDBits
00000000 l    df *ABS*	00000000 sysinit.c
00000000 l    df *ABS*	00000000 board_sysinit.c
1a0030a8 l     O .text	00000060 pinmuxing
1a003108 l     O .text	0000000c InitClkStates
00000000 l    df *ABS*	00000000 uart_18xx_43xx.c
1a001680 l     F .text	0000002c Chip_UART_GetIndex
1a0016ac l     F .text	00000048 Chip_UART_ABIntHandler
1a003114 l     O .text	00000008 UART_PClock
1a00311c l     O .text	00000008 UART_BClock
10000194 l     O .bss	00000001 ABsyncSts
00000000 l    df *ABS*	00000000 ring_buffer.c
00000000 l    df *ABS*	00000000 chip_18xx_43xx.c
1a001be0 l     F .text	00000034 Chip_USB_PllSetup
1a003124 l     O .text	00000014 usbPLLSetup
00000000 l    df *ABS*	00000000 clock_18xx_43xx.c
1a001ca4 l     F .text	000000a8 pll_calc_divs
1a001d4c l     F .text	00000104 pll_get_frac
1a001e50 l     F .text	00000024 Chip_Clock_TestMainPLLMultiplier
1a001e74 l     F .text	00000048 Chip_Clock_FindBaseClock
1a00229c l     F .text	00000022 Chip_Clock_GetDivRate
1a003138 l     O .text	0000006c periph_to_base
10000198 l     O .bss	00000008 audio_usb_pll_freq
00000000 l    df *ABS*	00000000 sysinit_18xx_43xx.c
1a0031b0 l     O .text	00000048 InitClkStates
00000000 l    df *ABS*	00000000 timer_18xx_43xx.c
1a00270c l     F .text	0000002c Chip_TIMER_GetClockIndex
00000000 l    df *ABS*	00000000 fpu_init.c
00000000 l    df *ABS*	00000000 gpio_18xx_43xx.c
00000000 l    df *ABS*	00000000 _aeabi_ldivmod.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 
1a080000 l       *ABS*	00000000 __top_MFlashA512
1a003200 l       .ARM.exidx	00000000 __exidx_end
1a003200 l       .ARM.exidx	00000000 _etext
20008000 l       *ABS*	00000000 __top_RamAHB32
1a0031f8 l       .text	00000000 __exidx_start
20010000 l       *ABS*	00000000 __top_RamAHB_ETB16
10008000 l       *ABS*	00000000 __top_RamLoc32
2000c000 l       *ABS*	00000000 __top_RamAHB16
1008a000 l       *ABS*	00000000 __top_RamLoc40
10000284 l       .bss	00000000 _pvHeapStart
1b080000 l       *ABS*	00000000 __top_MFlashB512
1a001f6c g     F .text	0000001c Chip_Clock_GetDividerSource
10000020 g     O .data	00000008 periodoActivo
1a002904 g     F .text	0000002e .hidden __gnu_uldivmod_helper
1a000b5c g     F .text	00000040 TIMER2_IRQHandler
1a000194  w    F .text	00000002 DebugMon_Handler
1a0001a0  w    F .text	00000002 RIT_IRQHandler
1a000a08 g     F .text	00000040 Timer_DeInit
10000228 g     O .bss	00000004 tareaBlinkyID
1a0001a0  w    F .text	00000002 ADCHS_IRQHandler
1a0004a0 g     F .text	0000002c taskBlinkLed
1a002938 g     F .text	0000029c .hidden __divdi3
1a000114 g       .text	00000000 __section_table_start
1a0001a0  w    F .text	00000002 FLASH_EEPROM_IRQHandler
1a000f74 g     F .text	0000008c int64ToString
1a0001a0  w    F .text	00000002 I2C0_IRQHandler
1a00079c g     F .text	00000044 uartReadByte
1a001c14 g     F .text	00000034 Chip_USB0_Init
1a001784 g     F .text	00000010 Chip_UART_CheckBusy
1a000ce4 g     F .text	0000003e delayRead
1a000180  w    F .text	00000002 HardFault_Handler
1a001a18 g     F .text	0000000c Chip_UART_GetABEOStatus
1a000000 g       *ABS*	00000000 __vectors_start__
1a001b2c g     F .text	00000030 RingBuffer_Pop
1a001454 g     F .text	00000014 Board_UARTPutSTR
1a002350 g     F .text	00000018 Chip_Clock_DisableBaseClock
1a000dd0 g     F .text	00000024 SysTick_Handler
1a001800 g     F .text	00000044 Chip_UART_SetBaud
1a0020dc g     F .text	0000009c Chip_Clock_SetupMainPLLMult
1a000e08 g     F .text	00000008 printString
1a0001a0  w    F .text	00000002 SDIO_IRQHandler
1a001438 g     F .text	0000001c Board_UARTGetChar
1a0001a0  w    F .text	00000002 ATIMER_IRQHandler
1a001074 g     F .text	000000a4 uintToAsciiHex
1a000198  w    F .text	00000002 PendSV_Handler
1a00017c  w    F .text	00000002 NMI_Handler
1a000150 g       .text	00000000 __data_section_table_end
1a0001a0  w    F .text	00000002 I2C1_IRQHandler
1a0001a0  w    F .text	00000002 UART1_IRQHandler
1a0001a0  w    F .text	00000002 GPIO5_IRQHandler
1a000644 g     F .text	00000040 schedulerDispatchTasks
1a0001a0  w    F .text	00000002 CAN1_IRQHandler
1a002558 g     F .text	00000014 Chip_Clock_EnablePLL
53ff5076 g       *ABS*	00000000 __valid_user_code_checksum
1a001574 g     F .text	00000028 Board_SSP_Init
1a0001a0  w    F .text	00000002 USB1_IRQHandler
1a0001a0  w    F .text	00000002 I2S0_IRQHandler
1a000810 g     F .text	00000084 waitForReceiveStringOrTimeout
1a000b9c g     F .text	00000040 TIMER3_IRQHandler
1a0023ac g     F .text	0000000c Chip_Clock_GetBaseClocktHz
1a000178 g     F .text	00000002 UART0_IRQHandler
1a0001c0 g     F .text	00000012 bss_init
1a002768 g     F .text	00000028 Chip_TIMER_ExtMatchControlSet
1a0018e8 g     F .text	0000000e Chip_UART_ReadRB
1a002750 g     F .text	00000018 Chip_TIMER_Reset
1a002e40 g     F .text	00000016 memcpy
1a0001a0  w    F .text	00000002 SGPIO_IRQHandler
1a002744 g     F .text	0000000c Chip_TIMER_DeInit
1a002518 g     F .text	00000040 Chip_Clock_SetupPLL
1a0028a4 g     F .text	00000000 .hidden __aeabi_uldivmod
10000000 g     O .data	00000001 ledActivo
10000284 g       .noinit	00000000 _noinit
100001a0 g     O .bss	00000044 colaTx
1a0008d0 g     F .text	00000018 uartWriteString
10000280 g     O .bss	00000004 SystemCoreClock
1a0016f4 g     F .text	00000050 Chip_UART_Init
1a0001a0  w    F .text	00000002 ADC0_IRQHandler
1a001a9c g     F .text	00000090 RingBuffer_InsertMult
1a000cc4 g     F .text	00000020 delayConfig
1a000e44 g     F .text	00000022 printUIntFormat
1a00018c  w    F .text	00000002 UsageFault_Handler
1a00249c g     F .text	0000004c Chip_Clock_GetRate
1a0001a0  w    F .text	00000002 GPIO6_IRQHandler
10000270 g     O .bss	00000008 tickCounter
1a001600 g     F .text	00000074 Board_SetupClocking
1a002704 g     F .text	00000008 Chip_SystemInit
1a0030a4 g     O .text	00000004 ExtRateIn
1a0003ac g     F .text	00000028 EscribirCadenaCola
1a0001a0  w    F .text	00000002 IntDefaultHandler
1a000300 g       .text	00000000 __CRP_WORD_END__
1a000dc4 g     F .text	0000000c tickWrite
1a0027ec g     F .text	00000002 Chip_GPIO_DeInit
1a0005d0 g     F .text	00000040 schedulerAddTask
1a0001a0  w    F .text	00000002 GPIO1_IRQHandler
1a000d40 g     F .text	00000078 tickConfig
1a001c48 g     F .text	00000048 Chip_USB1_Init
1a0001a0  w    F .text	00000002 SSP0_IRQHandler
1a001144 g     F .text	0000019c gpioConfig
1a0002fc g     O .text	00000004 CRP_WORD
1a0026f0 g     F .text	00000014 Chip_SetupIrcClocking
1a002bd4 g     F .text	0000026a .hidden __udivdi3
1a0001a0  w    F .text	00000002 ADC1_IRQHandler
1000017c g     O .bss	00000001 errorCode
1a001a6c g     F .text	00000030 RingBuffer_Insert
1a0014fc g     F .text	00000028 Board_Init
1a000114 g       .text	00000000 __data_section_table
1a0003d4 g     F .text	00000030 taskUARTGetChar
1a0001a0  w    F .text	00000002 RTC_IRQHandler
10000284 g       .bss	00000000 _ebss
1a000ae4 g     F .text	0000003c TIMER0_IRQHandler
1a0005c0 g     F .text	00000010 schedulerUpdatePeriod
1a0001a0  w    F .text	00000002 SPI_IRQHandler
1a0001a0  w    F .text	00000002 LCD_IRQHandler
1a001ebc g     F .text	0000004c Chip_Clock_EnableCrystal
1a000e84 g     F .text	000000ee boardConfig
1a0004cc g     F .text	000000ec taskActualizarLeds
10000008 g     O .data	00000018 periodos
1a0001a4 g     F .text	0000001a data_init
1a000b20 g     F .text	0000003c TIMER1_IRQHandler
1a001f18 g     F .text	00000054 Chip_Clock_SetDivider
10000028 g     O .data	00000006 leds
1a0008e8 g     F .text	00000002 UART2_IRQHandler
1a000e10 g     F .text	00000010 printEnter
1a002234 g     F .text	00000068 Chip_Clock_GetMainPLLHz
1a001744 g     F .text	0000001c Chip_UART_DeInit
1a0008f0 g     F .text	00000004 sAPI_NullFuncPtr
1a0007e0 g     F .text	00000030 uartWriteByte
1a001390 g     F .text	00000016 gpioToggle
1a0001a0  w    F .text	00000002 GPIO2_IRQHandler
1a001f08 g     F .text	00000010 Chip_Clock_DisableCrystal
1a002474 g     F .text	00000014 Chip_Clock_StartPowerDown
1a0008fc g     F .text	0000010c Timer_Init
1a000490 g     F .text	00000010 schedulerStart
1a000a48 g     F .text	00000008 Timer_microsecondsToTicks
1a002388 g     F .text	00000024 Chip_Clock_GetBaseClock
1a002580 g     F .text	0000000c Chip_Clock_GetPLLStatus
1a001844 g     F .text	00000024 Chip_UART_RXIntHandlerRB
1a0018a4 g     F .text	00000042 Chip_UART_SendRB
10000170 g       .bss	00000000 _bss
1a0001a0  w    F .text	00000002 I2S1_IRQHandler
1a000610 g     F .text	00000034 schedulerDeleteTask
1a002178 g     F .text	000000bc Chip_Clock_SetupMainPLLHz
1a0027e8 g     F .text	00000002 Chip_GPIO_Init
1a0030a0 g     O .text	00000004 OscRateIn
1a001524 g     F .text	00000024 Board_I2C_Init
10000284 g       .noinit	00000000 _end_noinit
10008000 g       *ABS*	00000000 _vStackTop
1a0014d8 g     F .text	00000024 Board_ENET_GetMacADDR
1a000bdc g     F .text	00000052 delayInaccurate
1a0001a0  w    F .text	00000002 SSP1_IRQHandler
1a002738 g     F .text	0000000c Chip_TIMER_Init
1a002368 g     F .text	00000020 Chip_Clock_IsBaseClockEnabled
1a000178 g       .text	00000000 __bss_section_table_end
1a002304 g     F .text	00000034 Chip_Clock_GetBaseClockOpts
1a000734 g     F .text	00000004 sleepUntilNextInterrupt
1a002934  w    F .text	00000002 .hidden __aeabi_ldiv0
1a001b5c g     F .text	00000082 RingBuffer_PopMult
10000178 g     O .bss	00000004 ledIndice
1a0001a0  w    F .text	00000002 USB0_IRQHandler
1a002440 g     F .text	00000034 Chip_Clock_Disable
1a0001a0  w    F .text	00000002 GPIO3_IRQHandler
1a000a88 g     F .text	00000044 Timer_DisableCompareMatch
1a001424 g     F .text	00000014 Board_UARTPutChar
1a001760 g     F .text	00000022 Chip_UART_Send
1a0001a0  w    F .text	00000002 SCT_IRQHandler
1a0024e8 g     F .text	00000030 Chip_Clock_GetEMCRate
1a001000 g     F .text	00000074 uint64ToString
1a0018f8 g     F .text	00000036 Chip_UART_IRQRBHandler
1a001f88 g     F .text	0000001c Chip_Clock_GetDividerDivisor
1a0002fc g       .text	00000000 __CRP_WORD_START__
1a002e56 g     F .text	00000010 memset
1a000184  w    F .text	00000002 MemManage_Handler
1a000688 g     F .text	000000ac main
1a0017b8 g     F .text	00000022 Chip_UART_Read
1a0001a0  w    F .text	00000002 WDT_IRQHandler
1a000190  w    F .text	00000002 SVC_Handler
1a000434 g     F .text	0000003c schedulerUpdate
1a000a50 g     F .text	00000038 Timer_EnableCompareMatch
1a0026dc g     F .text	00000014 Chip_SetupXtalClocking
1a0014c0 g     F .text	00000016 Board_LED_Toggle
1a000314 g     F .text	0000004a EscribirCola
1a0001a0  w    F .text	00000002 GPIO7_IRQHandler
1a0023b8 g     F .text	0000003c Chip_Clock_EnableOpts
1a002f54 g     O .text	00000136 gpioPinsConfig
1a001fa4 g     F .text	000000b8 Chip_Clock_GetClockInputHz
1a002790 g     F .text	00000058 fpuInit
1a001490 g     F .text	00000030 Board_LED_Test
1a00205c g     F .text	00000080 Chip_Clock_CalcMainPLLValue
1a0015b0 g     F .text	0000001c SystemInit
1a0001a0  w    F .text	00000002 SPIFI_IRQHandler
1a000c8c g     F .text	00000038 delay
1a0001a0  w    F .text	00000002 QEI_IRQHandler
1a000150 g       .text	00000000 __bss_section_table
1a002428 g     F .text	00000018 Chip_Clock_RTCEnable
1a0012e0 g     F .text	00000058 gpioWrite
1a001794 g     F .text	00000024 Chip_UART_SendBlocking
1a0015cc g     F .text	00000034 Board_SetupMuxing
1a001930 g     F .text	000000e8 Chip_UART_SetBaudFDR
1a000db8 g     F .text	0000000c tickRead
10000278 g     O .bss	00000008 tickRateMS
1a0001a0  w    F .text	00000002 ETH_IRQHandler
10000168 g     O .data	00000004 tickHookFunction
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
1a000894 g     F .text	0000003a waitForReceiveStringOrTimeoutBlocking
1a0001a0  w    F .text	00000002 CAN0_IRQHandler
1a000e68 g     F .text	0000001a printHex
10000000 g       .data	00000000 _data
1a000178 g       .text	00000000 __section_table_end
1a000e20 g     F .text	00000022 printIntFormat
1a000404 g     F .text	00000030 taskUARTPutChar
1a000738 g     F .text	00000064 uartConfig
1a0001a0  w    F .text	00000002 GINT0_IRQHandler
1a0001a0  w    F .text	00000002 DAC_IRQHandler
1a0013fc g     F .text	00000028 Board_Debug_Init
1000016c g       .data	00000000 _edata
1a0001a0  w    F .text	00000002 M0SUB_IRQHandler
1a001a24 g     F .text	00000038 Chip_UART_ABCmd
1a000684 g     F .text	00000002 schedulerReportStatus
1a00258c g     F .text	00000150 Chip_SetupCoreClock
1a0001a0  w    F .text	00000002 GPIO0_IRQHandler
1a001548 g     F .text	0000002c Board_SDMMC_Init
1a000000 g     O .text	00000114 g_pfnVectors
1a0027f0 g     F .text	0000007c ResetISR
1a001c90 g     F .text	00000014 SystemCoreClockUpdate
1a00159c g     F .text	00000014 Board_DAC_Init
1a000df8 g     F .text	0000000e printConfigUart
1a0001a0  w    F .text	00000002 DMA_IRQHandler
1a0001a0  w    F .text	00000002 EVRT_IRQHandler
1a001a5c g     F .text	00000010 RingBuffer_Init
1a000c30 g     F .text	0000005a delayInaccurateUs
1a002934  w    F .text	00000002 .hidden __aeabi_idiv0
1a00256c g     F .text	00000014 Chip_Clock_DisablePLL
1a000df4 g     F .text	00000004 printSetUart
1a002488 g     F .text	00000014 Chip_Clock_ClearPowerDown
1a001868 g     F .text	0000003a Chip_UART_TXIntHandlerRB
1a000188  w    F .text	00000002 BusFault_Handler
1a0023f4 g     F .text	00000034 Chip_Clock_Enable
1a0008ec g     F .text	00000002 UART3_IRQHandler
1a000d24 g     F .text	0000001c delayWrite
1a0001a0  w    F .text	00000002 MCPWM_IRQHandler
1a0028d4 g     F .text	0000002e .hidden __gnu_ldivmod_helper
100001e4 g     O .bss	00000044 colaRx
1a001468 g     F .text	00000028 Board_LED_Set
1a0001a0  w    F .text	00000002 M0APP_IRQHandler
1a001338 g     F .text	00000058 gpioRead
1000022c g     O .bss	00000040 schedulerTasks
1a000360 g     F .text	0000004c LeerCola
10000174 g     O .bss	00000004 periodoIndice
1a0001a0  w    F .text	00000002 GINT1_IRQHandler
1a000470 g     F .text	00000020 schedulerInit
1a00286c g     F .text	00000000 .hidden __aeabi_ldivmod
1a000acc g     F .text	00000018 Timer_SetCompareMatch
1a0017dc g     F .text	00000024 Chip_UART_ReadBlocking
1a0013e8 g     F .text	00000014 Board_UART_Init
1a000300 g     F .text	00000014 InicializarCola
1a002338 g     F .text	00000018 Chip_Clock_EnableBaseClock
1a0022c0 g     F .text	00000044 Chip_Clock_SetBaseClock
1a0001a0  w    F .text	00000002 GPIO4_IRQHandler
1a001674 g     F .text	0000000c Board_SystemInit



Disassembly of section .text:

1a000000 <g_pfnVectors>:
1a000000:	00 80 00 10 f1 27 00 1a 7d 01 00 1a 81 01 00 1a     .....'..}.......
1a000010:	85 01 00 1a 89 01 00 1a 8d 01 00 1a 76 50 ff 53     ............vP.S
	...
1a00002c:	91 01 00 1a 95 01 00 1a 00 00 00 00 99 01 00 1a     ................
1a00003c:	d1 0d 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00004c:	00 00 00 00 a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00005c:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00006c:	a1 01 00 1a e5 0a 00 1a 21 0b 00 1a 5d 0b 00 1a     ........!...]...
1a00007c:	9d 0b 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00008c:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a00009c:	a1 01 00 1a 79 01 00 1a a1 01 00 1a e9 08 00 1a     ....y...........
1a0000ac:	ed 08 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000bc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000cc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000dc:	a1 01 00 1a a1 01 00 1a a1 01 00 1a a1 01 00 1a     ................
1a0000ec:	a1 01 00 1a 00 00 00 00 a1 01 00 1a a1 01 00 1a     ................
1a0000fc:	a1 01 00 1a 00 00 00 00 a1 01 00 1a a1 01 00 1a     ................
1a00010c:	a1 01 00 1a a1 01 00 1a                             ........

1a000114 <__data_section_table>:
1a000114:	1a003200 	.word	0x1a003200
1a000118:	10000000 	.word	0x10000000
1a00011c:	0000016c 	.word	0x0000016c
1a000120:	1a003200 	.word	0x1a003200
1a000124:	10080000 	.word	0x10080000
1a000128:	00000000 	.word	0x00000000
1a00012c:	1a003200 	.word	0x1a003200
1a000130:	20000000 	.word	0x20000000
1a000134:	00000000 	.word	0x00000000
1a000138:	1a003200 	.word	0x1a003200
1a00013c:	20008000 	.word	0x20008000
1a000140:	00000000 	.word	0x00000000
1a000144:	1a003200 	.word	0x1a003200
1a000148:	2000c000 	.word	0x2000c000
1a00014c:	00000000 	.word	0x00000000

1a000150 <__bss_section_table>:
1a000150:	10000170 	.word	0x10000170
1a000154:	00000114 	.word	0x00000114
1a000158:	10080000 	.word	0x10080000
1a00015c:	00000000 	.word	0x00000000
1a000160:	20000000 	.word	0x20000000
1a000164:	00000000 	.word	0x00000000
1a000168:	20008000 	.word	0x20008000
1a00016c:	00000000 	.word	0x00000000
1a000170:	2000c000 	.word	0x2000c000
1a000174:	00000000 	.word	0x00000000

1a000178 <UART0_IRQHandler>:
1a000178:	4770      	bx	lr
1a00017a:	bf00      	nop

1a00017c <NMI_Handler>:
1a00017c:	e7fe      	b.n	1a00017c <NMI_Handler>
1a00017e:	bf00      	nop

1a000180 <HardFault_Handler>:
1a000180:	e7fe      	b.n	1a000180 <HardFault_Handler>
1a000182:	bf00      	nop

1a000184 <MemManage_Handler>:
1a000184:	e7fe      	b.n	1a000184 <MemManage_Handler>
1a000186:	bf00      	nop

1a000188 <BusFault_Handler>:
1a000188:	e7fe      	b.n	1a000188 <BusFault_Handler>
1a00018a:	bf00      	nop

1a00018c <UsageFault_Handler>:
1a00018c:	e7fe      	b.n	1a00018c <UsageFault_Handler>
1a00018e:	bf00      	nop

1a000190 <SVC_Handler>:
1a000190:	e7fe      	b.n	1a000190 <SVC_Handler>
1a000192:	bf00      	nop

1a000194 <DebugMon_Handler>:
1a000194:	e7fe      	b.n	1a000194 <DebugMon_Handler>
1a000196:	bf00      	nop

1a000198 <PendSV_Handler>:
1a000198:	e7fe      	b.n	1a000198 <PendSV_Handler>
1a00019a:	bf00      	nop
1a00019c:	e7fe      	b.n	1a00019c <PendSV_Handler+0x4>
1a00019e:	bf00      	nop

1a0001a0 <ADC0_IRQHandler>:
1a0001a0:	e7fe      	b.n	1a0001a0 <ADC0_IRQHandler>
1a0001a2:	bf00      	nop

1a0001a4 <data_init>:
1a0001a4:	b410      	push	{r4}
1a0001a6:	2300      	movs	r3, #0
1a0001a8:	e004      	b.n	1a0001b4 <data_init+0x10>
1a0001aa:	6804      	ldr	r4, [r0, #0]
1a0001ac:	600c      	str	r4, [r1, #0]
1a0001ae:	3304      	adds	r3, #4
1a0001b0:	3004      	adds	r0, #4
1a0001b2:	3104      	adds	r1, #4
1a0001b4:	4293      	cmp	r3, r2
1a0001b6:	d3f8      	bcc.n	1a0001aa <data_init+0x6>
1a0001b8:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0001bc:	4770      	bx	lr
1a0001be:	bf00      	nop

1a0001c0 <bss_init>:
1a0001c0:	2300      	movs	r3, #0
1a0001c2:	e003      	b.n	1a0001cc <bss_init+0xc>
1a0001c4:	2200      	movs	r2, #0
1a0001c6:	6002      	str	r2, [r0, #0]
1a0001c8:	3304      	adds	r3, #4
1a0001ca:	3004      	adds	r0, #4
1a0001cc:	428b      	cmp	r3, r1
1a0001ce:	d3f9      	bcc.n	1a0001c4 <bss_init+0x4>
1a0001d0:	4770      	bx	lr
1a0001d2:	bf00      	nop
1a0001d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000200:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000204:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000208:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000210:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000214:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000218:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000220:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000224:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000228:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000230:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000234:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000238:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000240:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000244:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000248:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000250:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000254:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000258:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000260:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000264:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000268:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000270:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000274:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000278:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000280:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000284:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000288:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000290:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000294:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000298:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ac:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a0002fc <CRP_WORD>:
1a0002fc:	ffff ffff                                   ....

1a000300 <InicializarCola>:
 */

void InicializarCola (t_cola* cola)
{

	cola->ini = BUFFER_N - 1;							// Inicializo el "ini" en el último dato
1a000300:	233f      	movs	r3, #63	; 0x3f
1a000302:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
	cola->fin = 0;										// Inicializo "fin" al comienzo del buffer
1a000306:	2300      	movs	r3, #0
1a000308:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
	// cola->datos_pendientes = 0;							// Inicializo el contador de datos pendientes en cero
	cola->estadoBuffer = BUFFER_VACIO;					// Señalizo la estructura como buffer vacío
1a00030c:	2302      	movs	r3, #2
1a00030e:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
1a000312:	4770      	bx	lr

1a000314 <EscribirCola>:
 *
 */

int8_t EscribirCola (t_cola*cola, uint8_t dato_a_escribir)
{
	if(cola->estadoBuffer == BUFFER_LLENO)						// Pregunto si el buffer ya está lleno
1a000314:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
1a000318:	b1e3      	cbz	r3, 1a000354 <EscribirCola+0x40>
		return ESCRIBIR_COLA_COLA_LLENA;						// Retorno error de buffer lleno

	cola->buffer[cola->fin] = dato_a_escribir;					// Escribo el dato en el frente
1a00031a:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
1a00031e:	54c1      	strb	r1, [r0, r3]
	cola->fin++;												// Incremento el puntero del frente
1a000320:	3301      	adds	r3, #1
1a000322:	b2db      	uxtb	r3, r3
1a000324:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
	// cola->datos_pendientes++;									// Incremento el contador de datos pendientes
	cola->estadoBuffer = BUFFER_CARGANDO;						// Señalizo buffer cargando
1a000328:	2201      	movs	r2, #1
1a00032a:	f880 2042 	strb.w	r2, [r0, #66]	; 0x42

	if(cola->fin >= BUFFER_N)									// Pregunto si el puntero del frente llegó al final
1a00032e:	2b3f      	cmp	r3, #63	; 0x3f
1a000330:	d902      	bls.n	1a000338 <EscribirCola+0x24>
		cola->fin = 0;											// Lo inicializo al comienzo
1a000332:	2300      	movs	r3, #0
1a000334:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

	if(((cola->ini + 1) % BUFFER_N) == cola->fin)				// Condición para buffer vacío
1a000338:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
1a00033c:	3301      	adds	r3, #1
1a00033e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
1a000342:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
1a000346:	4293      	cmp	r3, r2
1a000348:	d106      	bne.n	1a000358 <EscribirCola+0x44>
		cola->estadoBuffer = BUFFER_LLENO;						// es porque el buffer está lleno
1a00034a:	2300      	movs	r3, #0
1a00034c:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42

	return ESCRIBIR_COLA_EXITO;
1a000350:	4618      	mov	r0, r3
1a000352:	e002      	b.n	1a00035a <EscribirCola+0x46>
 */

int8_t EscribirCola (t_cola*cola, uint8_t dato_a_escribir)
{
	if(cola->estadoBuffer == BUFFER_LLENO)						// Pregunto si el buffer ya está lleno
		return ESCRIBIR_COLA_COLA_LLENA;						// Retorno error de buffer lleno
1a000354:	20ff      	movs	r0, #255	; 0xff
1a000356:	e000      	b.n	1a00035a <EscribirCola+0x46>
		cola->fin = 0;											// Lo inicializo al comienzo

	if(((cola->ini + 1) % BUFFER_N) == cola->fin)				// Condición para buffer vacío
		cola->estadoBuffer = BUFFER_LLENO;						// es porque el buffer está lleno

	return ESCRIBIR_COLA_EXITO;
1a000358:	2000      	movs	r0, #0
}
1a00035a:	b240      	sxtb	r0, r0
1a00035c:	4770      	bx	lr
1a00035e:	bf00      	nop

1a000360 <LeerCola>:
 */

int8_t LeerCola(t_cola*cola, uint8_t*dato_leido)
{

	if(cola->estadoBuffer == BUFFER_VACIO)						// Si el buffer está vacío
1a000360:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
1a000364:	2b02      	cmp	r3, #2
1a000366:	d01c      	beq.n	1a0003a2 <LeerCola+0x42>
		return LEER_COLA_COLA_VACIA;							// Señalizo y salgo

	cola->ini++;												// Incremento el índice del fondo
1a000368:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
1a00036c:	3301      	adds	r3, #1
1a00036e:	b2db      	uxtb	r3, r3
1a000370:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
	if(cola->ini >= BUFFER_N)									// Pregunto si llegué al final
1a000374:	2b3f      	cmp	r3, #63	; 0x3f
1a000376:	d902      	bls.n	1a00037e <LeerCola+0x1e>
		cola->ini = 0;											// Lo vuelvo a poner al principio
1a000378:	2300      	movs	r3, #0
1a00037a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

	*dato_leido = cola->buffer[cola->ini];						// Guardo el dato leido
1a00037e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
1a000382:	5cc3      	ldrb	r3, [r0, r3]
1a000384:	700b      	strb	r3, [r1, #0]

	if(((cola->ini + 1) % BUFFER_N) == cola->fin)				// Condición para buffer vacío
1a000386:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
1a00038a:	3301      	adds	r3, #1
1a00038c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
1a000390:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
1a000394:	4293      	cmp	r3, r2
1a000396:	d106      	bne.n	1a0003a6 <LeerCola+0x46>
		cola->estadoBuffer = BUFFER_VACIO;						// Caso verdadero: señalizo
1a000398:	2302      	movs	r3, #2
1a00039a:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42

	return LEER_COLA_EXITO;										// Retorno éxito en la lectura
1a00039e:	2000      	movs	r0, #0
1a0003a0:	e002      	b.n	1a0003a8 <LeerCola+0x48>

int8_t LeerCola(t_cola*cola, uint8_t*dato_leido)
{

	if(cola->estadoBuffer == BUFFER_VACIO)						// Si el buffer está vacío
		return LEER_COLA_COLA_VACIA;							// Señalizo y salgo
1a0003a2:	20ff      	movs	r0, #255	; 0xff
1a0003a4:	e000      	b.n	1a0003a8 <LeerCola+0x48>
	*dato_leido = cola->buffer[cola->ini];						// Guardo el dato leido

	if(((cola->ini + 1) % BUFFER_N) == cola->fin)				// Condición para buffer vacío
		cola->estadoBuffer = BUFFER_VACIO;						// Caso verdadero: señalizo

	return LEER_COLA_EXITO;										// Retorno éxito en la lectura
1a0003a6:	2000      	movs	r0, #0
}
1a0003a8:	b240      	sxtb	r0, r0
1a0003aa:	4770      	bx	lr

1a0003ac <EscribirCadenaCola>:
 * 	@returns 	none
 *
 */

int32_t EscribirCadenaCola (uint8_t *cadena, t_cola*cola)
{
1a0003ac:	b570      	push	{r4, r5, r6, lr}
1a0003ae:	4605      	mov	r5, r0
1a0003b0:	460e      	mov	r6, r1

	uint32_t i = 0;
1a0003b2:	2400      	movs	r4, #0

	while(cadena[i] != '\0') {
1a0003b4:	e006      	b.n	1a0003c4 <EscribirCadenaCola+0x18>

		/* Intento agregar el dato a la cola de datos */
		if(EscribirCola(cola, cadena[i]) == ESCRIBIR_COLA_COLA_LLENA)
1a0003b6:	4630      	mov	r0, r6
1a0003b8:	f7ff ffac 	bl	1a000314 <EscribirCola>
1a0003bc:	f1b0 3fff 	cmp.w	r0, #4294967295
1a0003c0:	d005      	beq.n	1a0003ce <EscribirCadenaCola+0x22>
			/* si esta llena, retorno con error */
			return -1;
		i++;
1a0003c2:	3401      	adds	r4, #1
int32_t EscribirCadenaCola (uint8_t *cadena, t_cola*cola)
{

	uint32_t i = 0;

	while(cadena[i] != '\0') {
1a0003c4:	5d29      	ldrb	r1, [r5, r4]
1a0003c6:	2900      	cmp	r1, #0
1a0003c8:	d1f5      	bne.n	1a0003b6 <EscribirCadenaCola+0xa>
			return -1;
		i++;

	}

	return 0;
1a0003ca:	2000      	movs	r0, #0
1a0003cc:	bd70      	pop	{r4, r5, r6, pc}
	while(cadena[i] != '\0') {

		/* Intento agregar el dato a la cola de datos */
		if(EscribirCola(cola, cadena[i]) == ESCRIBIR_COLA_COLA_LLENA)
			/* si esta llena, retorno con error */
			return -1;
1a0003ce:	f04f 30ff 	mov.w	r0, #4294967295
		i++;

	}

	return 0;
}
1a0003d2:	bd70      	pop	{r4, r5, r6, pc}

1a0003d4 <taskUARTGetChar>:
 * @brief void taskUARTGetChar (void)
 *
 * @author Roux, Federico G.
 */

void taskUARTGetChar (void){
1a0003d4:	b500      	push	{lr}
1a0003d6:	b083      	sub	sp, #12

	uint8_t lineaRecibida [2] = " ";
1a0003d8:	a902      	add	r1, sp, #8
1a0003da:	2320      	movs	r3, #32
1a0003dc:	f821 3d04 	strh.w	r3, [r1, #-4]!
	if (uartReadByte( UART_USB, lineaRecibida ) != FALSE) {
1a0003e0:	2000      	movs	r0, #0
1a0003e2:	f000 f9db 	bl	1a00079c <uartReadByte>
1a0003e6:	b138      	cbz	r0, 1a0003f8 <taskUARTGetChar+0x24>
		lineaRecibida[1] = '\0',
1a0003e8:	2300      	movs	r3, #0
1a0003ea:	f88d 3005 	strb.w	r3, [sp, #5]
		EscribirCola(&colaRx, lineaRecibida[0]);
1a0003ee:	4804      	ldr	r0, [pc, #16]	; (1a000400 <taskUARTGetChar+0x2c>)
1a0003f0:	f89d 1004 	ldrb.w	r1, [sp, #4]
1a0003f4:	f7ff ff8e 	bl	1a000314 <EscribirCola>
	}
	return;
}
1a0003f8:	b003      	add	sp, #12
1a0003fa:	f85d fb04 	ldr.w	pc, [sp], #4
1a0003fe:	bf00      	nop
1a000400:	100001e4 	.word	0x100001e4

1a000404 <taskUARTPutChar>:
 * @brief void taskUARTPutChar (void)
 *
 * @author Roux, Federico G.
 */

void taskUARTPutChar (void) {
1a000404:	b500      	push	{lr}
1a000406:	b083      	sub	sp, #12

	uint8_t byteLeido[2] = " ";
1a000408:	a902      	add	r1, sp, #8
1a00040a:	2320      	movs	r3, #32
1a00040c:	f821 3d04 	strh.w	r3, [r1, #-4]!

	if(LeerCola(&colaTx, byteLeido) != LEER_COLA_COLA_VACIA)
1a000410:	4807      	ldr	r0, [pc, #28]	; (1a000430 <taskUARTPutChar+0x2c>)
1a000412:	f7ff ffa5 	bl	1a000360 <LeerCola>
1a000416:	f1b0 3fff 	cmp.w	r0, #4294967295
1a00041a:	d005      	beq.n	1a000428 <taskUARTPutChar+0x24>
	{
		byteLeido[1] = '\0',
1a00041c:	2000      	movs	r0, #0
1a00041e:	f88d 0005 	strb.w	r0, [sp, #5]
		printString(UART_USB, byteLeido);
1a000422:	a901      	add	r1, sp, #4
1a000424:	f000 fcf0 	bl	1a000e08 <printString>
	}

	return;
}
1a000428:	b003      	add	sp, #12
1a00042a:	f85d fb04 	ldr.w	pc, [sp], #4
1a00042e:	bf00      	nop
1a000430:	100001a0 	.word	0x100001a0

1a000434 <schedulerUpdate>:

   int32_t index;
   //serialDebugPrintLnString( "schedulerUpdate." );

   // NOTE: calculations are in *TICKS* (not milliseconds)
   for( index = 0; index < SCHEDULER_MAX_TASKS; index++ ){
1a000434:	2300      	movs	r3, #0
1a000436:	e015      	b.n	1a000464 <schedulerUpdate+0x30>
      // Check if there is a task at this location
      if( schedulerTasks[index].pTask ){
1a000438:	011a      	lsls	r2, r3, #4
1a00043a:	490c      	ldr	r1, [pc, #48]	; (1a00046c <schedulerUpdate+0x38>)
1a00043c:	588a      	ldr	r2, [r1, r2]
1a00043e:	b182      	cbz	r2, 1a000462 <schedulerUpdate+0x2e>
         if( --schedulerTasks[index].delay <= 0 ){
1a000440:	eb01 1103 	add.w	r1, r1, r3, lsl #4
1a000444:	684a      	ldr	r2, [r1, #4]
1a000446:	3a01      	subs	r2, #1
1a000448:	604a      	str	r2, [r1, #4]
1a00044a:	2a00      	cmp	r2, #0
1a00044c:	dc09      	bgt.n	1a000462 <schedulerUpdate+0x2e>
            // The task is due to run
            schedulerTasks[index].runMe += 1; // Inc. the 'runMe' flag
1a00044e:	460a      	mov	r2, r1
1a000450:	68c9      	ldr	r1, [r1, #12]
1a000452:	3101      	adds	r1, #1
1a000454:	60d1      	str	r1, [r2, #12]
            if( schedulerTasks[index].period ){
1a000456:	6892      	ldr	r2, [r2, #8]
1a000458:	b11a      	cbz	r2, 1a000462 <schedulerUpdate+0x2e>
               // Schedule regular tasks to run again
               schedulerTasks[index].delay = schedulerTasks[index].period;
1a00045a:	4904      	ldr	r1, [pc, #16]	; (1a00046c <schedulerUpdate+0x38>)
1a00045c:	eb01 1103 	add.w	r1, r1, r3, lsl #4
1a000460:	604a      	str	r2, [r1, #4]

   int32_t index;
   //serialDebugPrintLnString( "schedulerUpdate." );

   // NOTE: calculations are in *TICKS* (not milliseconds)
   for( index = 0; index < SCHEDULER_MAX_TASKS; index++ ){
1a000462:	3301      	adds	r3, #1
1a000464:	2b03      	cmp	r3, #3
1a000466:	dde7      	ble.n	1a000438 <schedulerUpdate+0x4>
            }
         }
      }
   }
   return 0;
}
1a000468:	2000      	movs	r0, #0
1a00046a:	4770      	bx	lr
1a00046c:	1000022c 	.word	0x1000022c

1a000470 <schedulerInit>:
schedulerInit()
Scheduler initialization function. Prepares scheduler
data structures.
Must call this function before using the scheduler.
-*------------------------------------------------------------------*/
void schedulerInit( void ){
1a000470:	b510      	push	{r4, lr}

   uint32_t i;
   for( i = 0; i < SCHEDULER_MAX_TASKS; i++ ){
1a000472:	2400      	movs	r4, #0
1a000474:	e003      	b.n	1a00047e <schedulerInit+0xe>
      schedulerDeleteTask(i);
1a000476:	4620      	mov	r0, r4
1a000478:	f000 f8ca 	bl	1a000610 <schedulerDeleteTask>
Must call this function before using the scheduler.
-*------------------------------------------------------------------*/
void schedulerInit( void ){

   uint32_t i;
   for( i = 0; i < SCHEDULER_MAX_TASKS; i++ ){
1a00047c:	3401      	adds	r4, #1
1a00047e:	2c03      	cmp	r4, #3
1a000480:	d9f9      	bls.n	1a000476 <schedulerInit+0x6>
      schedulerDeleteTask(i);
   }
   /* Reset the global error variable
      - schedulerDelete_Task() will generate an error code,
        (because the task array is empty) */
   errorCode = 0;
1a000482:	2200      	movs	r2, #0
1a000484:	4b01      	ldr	r3, [pc, #4]	; (1a00048c <schedulerInit+0x1c>)
1a000486:	701a      	strb	r2, [r3, #0]
1a000488:	bd10      	pop	{r4, pc}
1a00048a:	bf00      	nop
1a00048c:	1000017c 	.word	0x1000017c

1a000490 <schedulerStart>:
Starts the scheduler, by enabling timer interrupts.
NOTE: Usually called after all regular tasks are added,
to keep the tasks synchronized.
NOTE: ONLY THE SCHEDULER INTERRUPT SHOULD BE ENABLED!!!
-*------------------------------------------------------------------*/
void schedulerStart( tick_t tickRateMs ){
1a000490:	b508      	push	{r3, lr}
      El tick hook es simplemente una función que se ejecutará períodicamente
      con cada interrupción de Tick, este nombre se refiere a una función
      "enganchada" a una interrupción */

   // Inicializar el conteo de Ticks con resolución de 1ms, con tickHook
   if( tickConfig( tickRateMs, schedulerUpdate ) ){
1a000492:	4a02      	ldr	r2, [pc, #8]	; (1a00049c <schedulerStart+0xc>)
1a000494:	f000 fc54 	bl	1a000d40 <tickConfig>
1a000498:	bd08      	pop	{r3, pc}
1a00049a:	bf00      	nop
1a00049c:	1a000435 	.word	0x1a000435

1a0004a0 <taskBlinkLed>:
 *
 * @brief Tarea de parpadeo de led.
 *
 */

void taskBlinkLed(void){
1a0004a0:	b508      	push	{r3, lr}

   if (ledState == ON){
1a0004a2:	4b08      	ldr	r3, [pc, #32]	; (1a0004c4 <taskBlinkLed+0x24>)
1a0004a4:	781b      	ldrb	r3, [r3, #0]
1a0004a6:	2b01      	cmp	r3, #1
1a0004a8:	d103      	bne.n	1a0004b2 <taskBlinkLed+0x12>
	  ledState = OFF; // Apago el pin
1a0004aa:	2200      	movs	r2, #0
1a0004ac:	4b05      	ldr	r3, [pc, #20]	; (1a0004c4 <taskBlinkLed+0x24>)
1a0004ae:	701a      	strb	r2, [r3, #0]
1a0004b0:	e002      	b.n	1a0004b8 <taskBlinkLed+0x18>
   }
   else{
	  ledState = ON; // Prendo el pin
1a0004b2:	2201      	movs	r2, #1
1a0004b4:	4b03      	ldr	r3, [pc, #12]	; (1a0004c4 <taskBlinkLed+0x24>)
1a0004b6:	701a      	strb	r2, [r3, #0]
   }

   // Use of digitalWrite
   // gpioWrite( LED3, ledState );
   gpioToggle( ledActivo );
1a0004b8:	4b03      	ldr	r3, [pc, #12]	; (1a0004c8 <taskBlinkLed+0x28>)
1a0004ba:	7818      	ldrb	r0, [r3, #0]
1a0004bc:	f000 ff68 	bl	1a001390 <gpioToggle>
1a0004c0:	bd08      	pop	{r3, pc}
1a0004c2:	bf00      	nop
1a0004c4:	10000170 	.word	0x10000170
1a0004c8:	10000000 	.word	0x10000000

1a0004cc <taskActualizarLeds>:
 *
 *
 */

void taskActualizarLeds(void)
{
1a0004cc:	b510      	push	{r4, lr}
1a0004ce:	b082      	sub	sp, #8
	volatile uint8_t datoLeido;
	volatile int8_t estadoColaRx;
	estadoColaRx = LeerCola(&colaRx, &datoLeido);
1a0004d0:	4831      	ldr	r0, [pc, #196]	; (1a000598 <taskActualizarLeds+0xcc>)
1a0004d2:	f10d 0107 	add.w	r1, sp, #7
1a0004d6:	f7ff ff43 	bl	1a000360 <LeerCola>
1a0004da:	f88d 0006 	strb.w	r0, [sp, #6]
	//if (antirreb_tecla1.t == TECLA_PRESIONADA){
	if (estadoColaRx == LEER_COLA_COLA_VACIA)
1a0004de:	f89d 3006 	ldrb.w	r3, [sp, #6]
1a0004e2:	b25b      	sxtb	r3, r3
1a0004e4:	f1b3 3fff 	cmp.w	r3, #4294967295
1a0004e8:	d054      	beq.n	1a000594 <taskActualizarLeds+0xc8>
		return;

	else {

		switch(datoLeido) {
1a0004ea:	f89d 3007 	ldrb.w	r3, [sp, #7]
1a0004ee:	3b4c      	subs	r3, #76	; 0x4c
1a0004f0:	2b28      	cmp	r3, #40	; 0x28
1a0004f2:	d84b      	bhi.n	1a00058c <taskActualizarLeds+0xc0>
1a0004f4:	e8df f003 	tbb	[pc, r3]
1a0004f8:	4a4a4a31 	.word	0x4a4a4a31
1a0004fc:	4a4a4a4a 	.word	0x4a4a4a4a
1a000500:	4a4a4a15 	.word	0x4a4a4a15
1a000504:	4a4a4a4a 	.word	0x4a4a4a4a
1a000508:	4a4a4a4a 	.word	0x4a4a4a4a
1a00050c:	4a4a4a4a 	.word	0x4a4a4a4a
1a000510:	4a4a4a4a 	.word	0x4a4a4a4a
1a000514:	4a4a4a4a 	.word	0x4a4a4a4a
1a000518:	4a4a4a31 	.word	0x4a4a4a31
1a00051c:	4a4a4a4a 	.word	0x4a4a4a4a
1a000520:	15          	.byte	0x15
1a000521:	00          	.byte	0x00

		case 't':
		case 'T':
			periodoIndice++;
1a000522:	4a1e      	ldr	r2, [pc, #120]	; (1a00059c <taskActualizarLeds+0xd0>)
1a000524:	6853      	ldr	r3, [r2, #4]
1a000526:	3301      	adds	r3, #1
1a000528:	6053      	str	r3, [r2, #4]
			if (periodoIndice >= PERIODOS_L)
1a00052a:	2b02      	cmp	r3, #2
1a00052c:	d902      	bls.n	1a000534 <taskActualizarLeds+0x68>
				periodoIndice = 0;
1a00052e:	2200      	movs	r2, #0
1a000530:	4b1a      	ldr	r3, [pc, #104]	; (1a00059c <taskActualizarLeds+0xd0>)
1a000532:	605a      	str	r2, [r3, #4]

			periodoActivo = periodos[periodoIndice];
1a000534:	4c1a      	ldr	r4, [pc, #104]	; (1a0005a0 <taskActualizarLeds+0xd4>)
1a000536:	4b19      	ldr	r3, [pc, #100]	; (1a00059c <taskActualizarLeds+0xd0>)
1a000538:	685b      	ldr	r3, [r3, #4]
1a00053a:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
1a00053e:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
1a000542:	e9c4 2308 	strd	r2, r3, [r4, #32]
			// reiniciar tarea blinky con nuevo periodo

			EscribirCadenaCola ("Periodo actualizado", &colaTx);
1a000546:	4817      	ldr	r0, [pc, #92]	; (1a0005a4 <taskActualizarLeds+0xd8>)
1a000548:	4917      	ldr	r1, [pc, #92]	; (1a0005a8 <taskActualizarLeds+0xdc>)
1a00054a:	f7ff ff2f 	bl	1a0003ac <EscribirCadenaCola>
			schedulerUpdatePeriod(tareaBlinkyID, periodoActivo);
1a00054e:	4b17      	ldr	r3, [pc, #92]	; (1a0005ac <taskActualizarLeds+0xe0>)
1a000550:	6818      	ldr	r0, [r3, #0]
1a000552:	6a21      	ldr	r1, [r4, #32]
1a000554:	f000 f834 	bl	1a0005c0 <schedulerUpdatePeriod>
			break;
1a000558:	e01c      	b.n	1a000594 <taskActualizarLeds+0xc8>

		case 'L':
		case 'l':

			ledIndice++;
1a00055a:	4a10      	ldr	r2, [pc, #64]	; (1a00059c <taskActualizarLeds+0xd0>)
1a00055c:	6893      	ldr	r3, [r2, #8]
1a00055e:	3301      	adds	r3, #1
1a000560:	6093      	str	r3, [r2, #8]
			if (ledIndice >= LEDS_L)
1a000562:	2b05      	cmp	r3, #5
1a000564:	d902      	bls.n	1a00056c <taskActualizarLeds+0xa0>
				ledIndice = 0;
1a000566:	2200      	movs	r2, #0
1a000568:	4b0c      	ldr	r3, [pc, #48]	; (1a00059c <taskActualizarLeds+0xd0>)
1a00056a:	609a      	str	r2, [r3, #8]

			gpioWrite(ledActivo, 0);	// apago el led anterior
1a00056c:	4c0c      	ldr	r4, [pc, #48]	; (1a0005a0 <taskActualizarLeds+0xd4>)
1a00056e:	7820      	ldrb	r0, [r4, #0]
1a000570:	2100      	movs	r1, #0
1a000572:	f000 feb5 	bl	1a0012e0 <gpioWrite>
			ledActivo = leds[ledIndice];
1a000576:	4b09      	ldr	r3, [pc, #36]	; (1a00059c <taskActualizarLeds+0xd0>)
1a000578:	689b      	ldr	r3, [r3, #8]
1a00057a:	4423      	add	r3, r4
1a00057c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
1a000580:	7023      	strb	r3, [r4, #0]
			EscribirCadenaCola ("Led activo actualizado", &colaTx);
1a000582:	480b      	ldr	r0, [pc, #44]	; (1a0005b0 <taskActualizarLeds+0xe4>)
1a000584:	4908      	ldr	r1, [pc, #32]	; (1a0005a8 <taskActualizarLeds+0xdc>)
1a000586:	f7ff ff11 	bl	1a0003ac <EscribirCadenaCola>

			break;
1a00058a:	e003      	b.n	1a000594 <taskActualizarLeds+0xc8>

		default:
			EscribirCadenaCola ("Comando no reconocido", &colaTx);
1a00058c:	4809      	ldr	r0, [pc, #36]	; (1a0005b4 <taskActualizarLeds+0xe8>)
1a00058e:	4906      	ldr	r1, [pc, #24]	; (1a0005a8 <taskActualizarLeds+0xdc>)
1a000590:	f7ff ff0c 	bl	1a0003ac <EscribirCadenaCola>

		}
	}
	return;
}
1a000594:	b002      	add	sp, #8
1a000596:	bd10      	pop	{r4, pc}
1a000598:	100001e4 	.word	0x100001e4
1a00059c:	10000170 	.word	0x10000170
1a0005a0:	10000000 	.word	0x10000000
1a0005a4:	1a002e68 	.word	0x1a002e68
1a0005a8:	100001a0 	.word	0x100001a0
1a0005ac:	10000228 	.word	0x10000228
1a0005b0:	1a002e7c 	.word	0x1a002e7c
1a0005b4:	1a002e94 	.word	0x1a002e94

1a0005b8 <schedulerGoToSleep>:
to save power. The next clock tick will return the processor
to the normal operating state.
*** May wish to disable this if using a watchdog ***
*** ADAPT AS REQUIRED FOR YOUR HARDWARE ***
-*------------------------------------------------------------------*/
static void schedulerGoToSleep(){
1a0005b8:	b508      	push	{r3, lr}
   // Se pone el sistema en bajo consumo hasta que ocurra la proxima
   // interrupcion, en este caso la de Tick.
   sleepUntilNextInterrupt();
1a0005ba:	f000 f8bb 	bl	1a000734 <sleepUntilNextInterrupt>
1a0005be:	bd08      	pop	{r3, pc}

1a0005c0 <schedulerUpdatePeriod>:
/*------------------------------------------------------------------*
schedulerUpdatePeriod()
Esta directiva solo modifica el periodo de una tarea
-*------------------------------------------------------------------*/
void schedulerUpdatePeriod( int32_t index, int32_t periodo ) {
	schedulerTasks[index].period = periodo;
1a0005c0:	4b02      	ldr	r3, [pc, #8]	; (1a0005cc <schedulerUpdatePeriod+0xc>)
1a0005c2:	eb03 1000 	add.w	r0, r3, r0, lsl #4
1a0005c6:	6081      	str	r1, [r0, #8]
1a0005c8:	4770      	bx	lr
1a0005ca:	bf00      	nop
1a0005cc:	1000022c 	.word	0x1000022c

1a0005d0 <schedulerAddTask>:
Task will be first executed at T = 300 ticks, then 1300, 2300, etc.
-*------------------------------------------------------------------*/
int32_t schedulerAddTask( sAPI_FuncPtr_t pFunction,
                          const int32_t DELAY,
                          const int32_t PERIOD
                        ){
1a0005d0:	b470      	push	{r4, r5, r6}

   int32_t index = 0;
1a0005d2:	2300      	movs	r3, #0

   // First find a gap in the array (if there is one)
   while( (schedulerTasks[index].pTask != 0) && (index < SCHEDULER_MAX_TASKS) ){
1a0005d4:	e000      	b.n	1a0005d8 <schedulerAddTask+0x8>
      index++;
1a0005d6:	3301      	adds	r3, #1
                        ){

   int32_t index = 0;

   // First find a gap in the array (if there is one)
   while( (schedulerTasks[index].pTask != 0) && (index < SCHEDULER_MAX_TASKS) ){
1a0005d8:	011c      	lsls	r4, r3, #4
1a0005da:	4d0b      	ldr	r5, [pc, #44]	; (1a000608 <schedulerAddTask+0x38>)
1a0005dc:	592c      	ldr	r4, [r5, r4]
1a0005de:	b10c      	cbz	r4, 1a0005e4 <schedulerAddTask+0x14>
1a0005e0:	2b03      	cmp	r3, #3
1a0005e2:	ddf8      	ble.n	1a0005d6 <schedulerAddTask+0x6>
      index++;
   }

   // Have we reached the end of the list?
   if( index == SCHEDULER_MAX_TASKS ){
1a0005e4:	2b04      	cmp	r3, #4
1a0005e6:	d104      	bne.n	1a0005f2 <schedulerAddTask+0x22>
      // Task list is full
      // Set the global error variable
      errorCode = 2; // ERROR_schedulerTOO_MANYTasks;
1a0005e8:	2202      	movs	r2, #2
1a0005ea:	4b08      	ldr	r3, [pc, #32]	; (1a00060c <schedulerAddTask+0x3c>)
1a0005ec:	701a      	strb	r2, [r3, #0]
      // Also return an error code
      return SCHEDULER_MAX_TASKS;
1a0005ee:	2004      	movs	r0, #4
1a0005f0:	e008      	b.n	1a000604 <schedulerAddTask+0x34>
   }

   // If we're here, there is a space in the task array
   schedulerTasks[index].pTask  = pFunction;
1a0005f2:	4e05      	ldr	r6, [pc, #20]	; (1a000608 <schedulerAddTask+0x38>)
1a0005f4:	011d      	lsls	r5, r3, #4
1a0005f6:	1974      	adds	r4, r6, r5
1a0005f8:	5170      	str	r0, [r6, r5]
   schedulerTasks[index].delay  = DELAY;
1a0005fa:	6061      	str	r1, [r4, #4]
   schedulerTasks[index].period = PERIOD;
1a0005fc:	60a2      	str	r2, [r4, #8]
   schedulerTasks[index].runMe  = 0;
1a0005fe:	2200      	movs	r2, #0
1a000600:	60e2      	str	r2, [r4, #12]

   return index; // return position of task (to allow later deletion)
1a000602:	4618      	mov	r0, r3
}
1a000604:	bc70      	pop	{r4, r5, r6}
1a000606:	4770      	bx	lr
1a000608:	1000022c 	.word	0x1000022c
1a00060c:	1000017c 	.word	0x1000017c

1a000610 <schedulerDeleteTask>:

taskIndex - The task index. Provided by schedulerAddTask().

RETURN VALUE: RETURN_ERROR or RETURN_NORMAL
-*------------------------------------------------------------------*/
int8_t schedulerDeleteTask( int32_t taskIndex ){
1a000610:	b430      	push	{r4, r5}

   int8_t returnCode;

   if(schedulerTasks[taskIndex].pTask == 0){
1a000612:	0103      	lsls	r3, r0, #4
1a000614:	4a09      	ldr	r2, [pc, #36]	; (1a00063c <schedulerDeleteTask+0x2c>)
1a000616:	58d3      	ldr	r3, [r2, r3]
1a000618:	b923      	cbnz	r3, 1a000624 <schedulerDeleteTask+0x14>
      // No task at this location...
      // Set the global error variable
      errorCode = 2; // ERROR_SCH_CANNOT_DELETE_TASK;
1a00061a:	2202      	movs	r2, #2
1a00061c:	4b08      	ldr	r3, [pc, #32]	; (1a000640 <schedulerDeleteTask+0x30>)
1a00061e:	701a      	strb	r2, [r3, #0]
      // ...also return an error code
      returnCode = -1; // RETURN_ERROR;
1a000620:	25ff      	movs	r5, #255	; 0xff
1a000622:	e000      	b.n	1a000626 <schedulerDeleteTask+0x16>
   }
   else{
      returnCode = 0; // RETURN_NORMAL;
1a000624:	2500      	movs	r5, #0
   }
   schedulerTasks[taskIndex].pTask = 0x0000;
1a000626:	4c05      	ldr	r4, [pc, #20]	; (1a00063c <schedulerDeleteTask+0x2c>)
1a000628:	0103      	lsls	r3, r0, #4
1a00062a:	18e1      	adds	r1, r4, r3
1a00062c:	2200      	movs	r2, #0
1a00062e:	50e2      	str	r2, [r4, r3]
   schedulerTasks[taskIndex].delay = (int32_t)0;
1a000630:	604a      	str	r2, [r1, #4]
   schedulerTasks[taskIndex].period = (int32_t)0;
1a000632:	608a      	str	r2, [r1, #8]
   schedulerTasks[taskIndex].runMe = (int8_t)0;
1a000634:	60ca      	str	r2, [r1, #12]
   return returnCode; // return status
}
1a000636:	b268      	sxtb	r0, r5
1a000638:	bc30      	pop	{r4, r5}
1a00063a:	4770      	bx	lr
1a00063c:	1000022c 	.word	0x1000022c
1a000640:	1000017c 	.word	0x1000017c

1a000644 <schedulerDispatchTasks>:
schedulerDispatchTasks()
This is the 'dispatcher' function. When a task (function)
is due to run, schedulerDispatchTasks() will run it.
This function must be called (repeatedly) from the main loop.
-*------------------------------------------------------------------*/
void schedulerDispatchTasks( void ){
1a000644:	b538      	push	{r3, r4, r5, lr}

   int32_t index;
   // Dispatches (runs) the next task (if one is ready)
   for (index = 0; index < SCHEDULER_MAX_TASKS; index++){
1a000646:	2400      	movs	r4, #0
1a000648:	e014      	b.n	1a000674 <schedulerDispatchTasks+0x30>

      if (schedulerTasks[index].runMe > 0){
1a00064a:	4b0d      	ldr	r3, [pc, #52]	; (1a000680 <schedulerDispatchTasks+0x3c>)
1a00064c:	eb03 1304 	add.w	r3, r3, r4, lsl #4
1a000650:	68db      	ldr	r3, [r3, #12]
1a000652:	2b00      	cmp	r3, #0
1a000654:	dd0d      	ble.n	1a000672 <schedulerDispatchTasks+0x2e>

         (*schedulerTasks[index].pTask)(0); // Run the task
1a000656:	4a0a      	ldr	r2, [pc, #40]	; (1a000680 <schedulerDispatchTasks+0x3c>)
1a000658:	0123      	lsls	r3, r4, #4
1a00065a:	18d5      	adds	r5, r2, r3
1a00065c:	58d3      	ldr	r3, [r2, r3]
1a00065e:	2000      	movs	r0, #0
1a000660:	4798      	blx	r3
         schedulerTasks[index].runMe -= 1; // Reset/reduce runMe flag
1a000662:	68eb      	ldr	r3, [r5, #12]
1a000664:	3b01      	subs	r3, #1
1a000666:	60eb      	str	r3, [r5, #12]

         // Periodic tasks will automatically run again
         // - if this is a 'one shot' task, remove it from the array
         if (schedulerTasks[index].period == 0){
1a000668:	68ab      	ldr	r3, [r5, #8]
1a00066a:	b913      	cbnz	r3, 1a000672 <schedulerDispatchTasks+0x2e>
            schedulerDeleteTask(index);
1a00066c:	4620      	mov	r0, r4
1a00066e:	f7ff ffcf 	bl	1a000610 <schedulerDeleteTask>
-*------------------------------------------------------------------*/
void schedulerDispatchTasks( void ){

   int32_t index;
   // Dispatches (runs) the next task (if one is ready)
   for (index = 0; index < SCHEDULER_MAX_TASKS; index++){
1a000672:	3401      	adds	r4, #1
1a000674:	2c03      	cmp	r4, #3
1a000676:	dde8      	ble.n	1a00064a <schedulerDispatchTasks+0x6>
   }

   // Report system status
   schedulerReportStatus();
   // The scheduler enters idle mode at this point32_t
   schedulerGoToSleep();
1a000678:	f7ff ff9e 	bl	1a0005b8 <schedulerGoToSleep>
1a00067c:	bd38      	pop	{r3, r4, r5, pc}
1a00067e:	bf00      	nop
1a000680:	1000022c 	.word	0x1000022c

1a000684 <schedulerReportStatus>:
After this the the error code is reset to 0.
This code may be easily adapted to display the last
error 'for ever': this may be appropriate in your
application.
-*------------------------------------------------------------------*/
void schedulerReportStatus( void ){
1a000684:	4770      	bx	lr
1a000686:	bf00      	nop

1a000688 <main>:

/*==================[declaraciones de funciones externas]====================*/

/*==================[funcion principal]======================================*/

int main( void ){
1a000688:	b508      	push	{r3, lr}

	//Inicializar el hardware, perifericos, puertos, clock, etc.
	boardConfig();
1a00068a:	f000 fbfb 	bl	1a000e84 <boardConfig>
	// Inicializar UART_USB como salida de consola
	debugPrintConfigUart( UART_USB, UART_BAUD_RATE );
1a00068e:	4c1f      	ldr	r4, [pc, #124]	; (1a00070c <main+0x84>)
1a000690:	4620      	mov	r0, r4
1a000692:	2100      	movs	r1, #0
1a000694:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
1a000698:	f000 fbae 	bl	1a000df8 <printConfigUart>
	debugPrintlnString( "UART_USB configurada.\n\r" );
1a00069c:	7820      	ldrb	r0, [r4, #0]
1a00069e:	491c      	ldr	r1, [pc, #112]	; (1a000710 <main+0x88>)
1a0006a0:	f000 fbb2 	bl	1a000e08 <printString>
1a0006a4:	7820      	ldrb	r0, [r4, #0]
1a0006a6:	f000 fbb3 	bl	1a000e10 <printEnter>

	InicializarCola(&colaRx);
1a0006aa:	481a      	ldr	r0, [pc, #104]	; (1a000714 <main+0x8c>)
1a0006ac:	f7ff fe28 	bl	1a000300 <InicializarCola>
	InicializarCola(&colaTx);
1a0006b0:	4819      	ldr	r0, [pc, #100]	; (1a000718 <main+0x90>)
1a0006b2:	f7ff fe25 	bl	1a000300 <InicializarCola>

	uartWriteString(UART_USB, menu);
1a0006b6:	4d19      	ldr	r5, [pc, #100]	; (1a00071c <main+0x94>)
1a0006b8:	2000      	movs	r0, #0
1a0006ba:	4629      	mov	r1, r5
1a0006bc:	f000 f908 	bl	1a0008d0 <uartWriteString>

	//FUNCION que inicializa el planificador de tareas
	schedulerInit();
1a0006c0:	f7ff fed6 	bl	1a000470 <schedulerInit>
	//Cargar las tareas del sistema operativo con sus periodicidades
	tareaBlinkyID = schedulerAddTask( (sAPI_FuncPtr_t) taskBlinkLed, 0, BLINK_TIME_PERIOD );
1a0006c4:	4816      	ldr	r0, [pc, #88]	; (1a000720 <main+0x98>)
1a0006c6:	2100      	movs	r1, #0
1a0006c8:	2232      	movs	r2, #50	; 0x32
1a0006ca:	f7ff ff81 	bl	1a0005d0 <schedulerAddTask>
1a0006ce:	4b15      	ldr	r3, [pc, #84]	; (1a000724 <main+0x9c>)
1a0006d0:	6018      	str	r0, [r3, #0]
// 	schedulerAddTask( (sAPI_FuncPtr_t) taskMenuUpdate, 1, CONSOLE_TIME_PERIOD );
	schedulerAddTask( (sAPI_FuncPtr_t) taskActualizarLeds, 1, BLINK_TIME_PERIOD );
1a0006d2:	4815      	ldr	r0, [pc, #84]	; (1a000728 <main+0xa0>)
1a0006d4:	2101      	movs	r1, #1
1a0006d6:	2232      	movs	r2, #50	; 0x32
1a0006d8:	f7ff ff7a 	bl	1a0005d0 <schedulerAddTask>

	schedulerAddTask( (sAPI_FuncPtr_t) taskUARTPutChar, 3, UART_PUT_CHAR_TIME_PERIOD );
1a0006dc:	4813      	ldr	r0, [pc, #76]	; (1a00072c <main+0xa4>)
1a0006de:	2103      	movs	r1, #3
1a0006e0:	2232      	movs	r2, #50	; 0x32
1a0006e2:	f7ff ff75 	bl	1a0005d0 <schedulerAddTask>
	schedulerAddTask( (sAPI_FuncPtr_t) taskUARTGetChar, 2, UART_GET_CHAR_TIME_PERIOD );
1a0006e6:	4812      	ldr	r0, [pc, #72]	; (1a000730 <main+0xa8>)
1a0006e8:	2102      	movs	r1, #2
1a0006ea:	2232      	movs	r2, #50	; 0x32
1a0006ec:	f7ff ff70 	bl	1a0005d0 <schedulerAddTask>


	//Iniciar el planificador de tareas
	schedulerStart( 1 );
1a0006f0:	2001      	movs	r0, #1
1a0006f2:	2100      	movs	r1, #0
1a0006f4:	f7ff fecc 	bl	1a000490 <schedulerStart>

	debugPrintlnString(menu);
1a0006f8:	7820      	ldrb	r0, [r4, #0]
1a0006fa:	4629      	mov	r1, r5
1a0006fc:	f000 fb84 	bl	1a000e08 <printString>
1a000700:	7820      	ldrb	r0, [r4, #0]
1a000702:	f000 fb85 	bl	1a000e10 <printEnter>
	//Lazo infinito

	while(TRUE) {
		//Ejecutar tareas
		schedulerDispatchTasks();
1a000706:	f7ff ff9d 	bl	1a000644 <schedulerDispatchTasks>
	}
1a00070a:	e7fc      	b.n	1a000706 <main+0x7e>
1a00070c:	1000017d 	.word	0x1000017d
1a000710:	1a002eac 	.word	0x1a002eac
1a000714:	100001e4 	.word	0x100001e4
1a000718:	100001a0 	.word	0x100001a0
1a00071c:	10000030 	.word	0x10000030
1a000720:	1a0004a1 	.word	0x1a0004a1
1a000724:	10000228 	.word	0x10000228
1a000728:	1a0004cd 	.word	0x1a0004cd
1a00072c:	1a000405 	.word	0x1a000405
1a000730:	1a0003d5 	.word	0x1a0003d5

1a000734 <sleepUntilNextInterrupt>:
1a000734:	bf30      	wfi
1a000736:	4770      	bx	lr

1a000738 <uartConfig>:
1a000738:	b538      	push	{r3, r4, r5, lr}
1a00073a:	460c      	mov	r4, r1
1a00073c:	b110      	cbz	r0, 1a000744 <uartConfig+0xc>
1a00073e:	2801      	cmp	r0, #1
1a000740:	d013      	beq.n	1a00076a <uartConfig+0x32>
1a000742:	bd38      	pop	{r3, r4, r5, pc}
1a000744:	4d12      	ldr	r5, [pc, #72]	; (1a000790 <uartConfig+0x58>)
1a000746:	4628      	mov	r0, r5
1a000748:	f000 ffd4 	bl	1a0016f4 <Chip_UART_Init>
1a00074c:	4628      	mov	r0, r5
1a00074e:	4621      	mov	r1, r4
1a000750:	f001 f856 	bl	1a001800 <Chip_UART_SetBaud>
1a000754:	2301      	movs	r3, #1
1a000756:	60ab      	str	r3, [r5, #8]
1a000758:	65eb      	str	r3, [r5, #92]	; 0x5c
1a00075a:	4b0e      	ldr	r3, [pc, #56]	; (1a000794 <uartConfig+0x5c>)
1a00075c:	221e      	movs	r2, #30
1a00075e:	f8c3 2384 	str.w	r2, [r3, #900]	; 0x384
1a000762:	22d6      	movs	r2, #214	; 0xd6
1a000764:	f8c3 2388 	str.w	r2, [r3, #904]	; 0x388
1a000768:	bd38      	pop	{r3, r4, r5, pc}
1a00076a:	4d0b      	ldr	r5, [pc, #44]	; (1a000798 <uartConfig+0x60>)
1a00076c:	4628      	mov	r0, r5
1a00076e:	f000 ffc1 	bl	1a0016f4 <Chip_UART_Init>
1a000772:	4628      	mov	r0, r5
1a000774:	4621      	mov	r1, r4
1a000776:	f001 f843 	bl	1a001800 <Chip_UART_SetBaud>
1a00077a:	2301      	movs	r3, #1
1a00077c:	60ab      	str	r3, [r5, #8]
1a00077e:	65eb      	str	r3, [r5, #92]	; 0x5c
1a000780:	4b04      	ldr	r3, [pc, #16]	; (1a000794 <uartConfig+0x5c>)
1a000782:	221a      	movs	r2, #26
1a000784:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
1a000788:	22d2      	movs	r2, #210	; 0xd2
1a00078a:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
1a00078e:	bd38      	pop	{r3, r4, r5, pc}
1a000790:	400c1000 	.word	0x400c1000
1a000794:	40086000 	.word	0x40086000
1a000798:	400c2000 	.word	0x400c2000

1a00079c <uartReadByte>:
1a00079c:	b110      	cbz	r0, 1a0007a4 <uartReadByte+0x8>
1a00079e:	2801      	cmp	r0, #1
1a0007a0:	d00a      	beq.n	1a0007b8 <uartReadByte+0x1c>
1a0007a2:	e013      	b.n	1a0007cc <uartReadByte+0x30>
1a0007a4:	4b0c      	ldr	r3, [pc, #48]	; (1a0007d8 <uartReadByte+0x3c>)
1a0007a6:	695b      	ldr	r3, [r3, #20]
1a0007a8:	f013 0f01 	tst.w	r3, #1
1a0007ac:	d010      	beq.n	1a0007d0 <uartReadByte+0x34>
1a0007ae:	4b0a      	ldr	r3, [pc, #40]	; (1a0007d8 <uartReadByte+0x3c>)
1a0007b0:	681b      	ldr	r3, [r3, #0]
1a0007b2:	700b      	strb	r3, [r1, #0]
1a0007b4:	2001      	movs	r0, #1
1a0007b6:	4770      	bx	lr
1a0007b8:	4b08      	ldr	r3, [pc, #32]	; (1a0007dc <uartReadByte+0x40>)
1a0007ba:	695b      	ldr	r3, [r3, #20]
1a0007bc:	f013 0f01 	tst.w	r3, #1
1a0007c0:	d008      	beq.n	1a0007d4 <uartReadByte+0x38>
1a0007c2:	4b06      	ldr	r3, [pc, #24]	; (1a0007dc <uartReadByte+0x40>)
1a0007c4:	681b      	ldr	r3, [r3, #0]
1a0007c6:	700b      	strb	r3, [r1, #0]
1a0007c8:	2001      	movs	r0, #1
1a0007ca:	4770      	bx	lr
1a0007cc:	2001      	movs	r0, #1
1a0007ce:	4770      	bx	lr
1a0007d0:	2000      	movs	r0, #0
1a0007d2:	4770      	bx	lr
1a0007d4:	2000      	movs	r0, #0
1a0007d6:	4770      	bx	lr
1a0007d8:	400c1000 	.word	0x400c1000
1a0007dc:	400c2000 	.word	0x400c2000

1a0007e0 <uartWriteByte>:
1a0007e0:	b110      	cbz	r0, 1a0007e8 <uartWriteByte+0x8>
1a0007e2:	2801      	cmp	r0, #1
1a0007e4:	d008      	beq.n	1a0007f8 <uartWriteByte+0x18>
1a0007e6:	4770      	bx	lr
1a0007e8:	4b07      	ldr	r3, [pc, #28]	; (1a000808 <uartWriteByte+0x28>)
1a0007ea:	695b      	ldr	r3, [r3, #20]
1a0007ec:	f013 0f20 	tst.w	r3, #32
1a0007f0:	d0fa      	beq.n	1a0007e8 <uartWriteByte+0x8>
1a0007f2:	4b05      	ldr	r3, [pc, #20]	; (1a000808 <uartWriteByte+0x28>)
1a0007f4:	6019      	str	r1, [r3, #0]
1a0007f6:	4770      	bx	lr
1a0007f8:	4b04      	ldr	r3, [pc, #16]	; (1a00080c <uartWriteByte+0x2c>)
1a0007fa:	695b      	ldr	r3, [r3, #20]
1a0007fc:	f013 0f20 	tst.w	r3, #32
1a000800:	d0fa      	beq.n	1a0007f8 <uartWriteByte+0x18>
1a000802:	4b02      	ldr	r3, [pc, #8]	; (1a00080c <uartWriteByte+0x2c>)
1a000804:	6019      	str	r1, [r3, #0]
1a000806:	4770      	bx	lr
1a000808:	400c1000 	.word	0x400c1000
1a00080c:	400c2000 	.word	0x400c2000

1a000810 <waitForReceiveStringOrTimeout>:
1a000810:	b510      	push	{r4, lr}
1a000812:	b082      	sub	sp, #8
1a000814:	460c      	mov	r4, r1
1a000816:	780b      	ldrb	r3, [r1, #0]
1a000818:	2b03      	cmp	r3, #3
1a00081a:	d836      	bhi.n	1a00088a <waitForReceiveStringOrTimeout+0x7a>
1a00081c:	e8df f003 	tbb	[pc, r3]
1a000820:	322f0d02 	.word	0x322f0d02
1a000824:	f101 0018 	add.w	r0, r1, #24
1a000828:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1a00082c:	f000 fa4a 	bl	1a000cc4 <delayConfig>
1a000830:	2300      	movs	r3, #0
1a000832:	8163      	strh	r3, [r4, #10]
1a000834:	2301      	movs	r3, #1
1a000836:	7023      	strb	r3, [r4, #0]
1a000838:	e029      	b.n	1a00088e <waitForReceiveStringOrTimeout+0x7e>
1a00083a:	f10d 0107 	add.w	r1, sp, #7
1a00083e:	f7ff ffad 	bl	1a00079c <uartReadByte>
1a000842:	b1a0      	cbz	r0, 1a00086e <waitForReceiveStringOrTimeout+0x5e>
1a000844:	2000      	movs	r0, #0
1a000846:	f89d 1007 	ldrb.w	r1, [sp, #7]
1a00084a:	f7ff ffc9 	bl	1a0007e0 <uartWriteByte>
1a00084e:	6862      	ldr	r2, [r4, #4]
1a000850:	8963      	ldrh	r3, [r4, #10]
1a000852:	5cd1      	ldrb	r1, [r2, r3]
1a000854:	f89d 2007 	ldrb.w	r2, [sp, #7]
1a000858:	4291      	cmp	r1, r2
1a00085a:	d108      	bne.n	1a00086e <waitForReceiveStringOrTimeout+0x5e>
1a00085c:	3301      	adds	r3, #1
1a00085e:	b29b      	uxth	r3, r3
1a000860:	8163      	strh	r3, [r4, #10]
1a000862:	8922      	ldrh	r2, [r4, #8]
1a000864:	3a01      	subs	r2, #1
1a000866:	4293      	cmp	r3, r2
1a000868:	d101      	bne.n	1a00086e <waitForReceiveStringOrTimeout+0x5e>
1a00086a:	2302      	movs	r3, #2
1a00086c:	7023      	strb	r3, [r4, #0]
1a00086e:	f104 0018 	add.w	r0, r4, #24
1a000872:	f000 fa37 	bl	1a000ce4 <delayRead>
1a000876:	b150      	cbz	r0, 1a00088e <waitForReceiveStringOrTimeout+0x7e>
1a000878:	2303      	movs	r3, #3
1a00087a:	7023      	strb	r3, [r4, #0]
1a00087c:	e007      	b.n	1a00088e <waitForReceiveStringOrTimeout+0x7e>
1a00087e:	2300      	movs	r3, #0
1a000880:	700b      	strb	r3, [r1, #0]
1a000882:	e004      	b.n	1a00088e <waitForReceiveStringOrTimeout+0x7e>
1a000884:	2300      	movs	r3, #0
1a000886:	700b      	strb	r3, [r1, #0]
1a000888:	e001      	b.n	1a00088e <waitForReceiveStringOrTimeout+0x7e>
1a00088a:	2300      	movs	r3, #0
1a00088c:	700b      	strb	r3, [r1, #0]
1a00088e:	7820      	ldrb	r0, [r4, #0]
1a000890:	b002      	add	sp, #8
1a000892:	bd10      	pop	{r4, pc}

1a000894 <waitForReceiveStringOrTimeoutBlocking>:
1a000894:	b510      	push	{r4, lr}
1a000896:	b08c      	sub	sp, #48	; 0x30
1a000898:	4604      	mov	r4, r0
1a00089a:	2000      	movs	r0, #0
1a00089c:	f88d 0000 	strb.w	r0, [sp]
1a0008a0:	9101      	str	r1, [sp, #4]
1a0008a2:	f8ad 2008 	strh.w	r2, [sp, #8]
1a0008a6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
1a0008aa:	e9cd 2304 	strd	r2, r3, [sp, #16]
1a0008ae:	e003      	b.n	1a0008b8 <waitForReceiveStringOrTimeoutBlocking+0x24>
1a0008b0:	4620      	mov	r0, r4
1a0008b2:	4669      	mov	r1, sp
1a0008b4:	f7ff ffac 	bl	1a000810 <waitForReceiveStringOrTimeout>
1a0008b8:	1e83      	subs	r3, r0, #2
1a0008ba:	b2db      	uxtb	r3, r3
1a0008bc:	2b01      	cmp	r3, #1
1a0008be:	d8f7      	bhi.n	1a0008b0 <waitForReceiveStringOrTimeoutBlocking+0x1c>
1a0008c0:	2803      	cmp	r0, #3
1a0008c2:	d001      	beq.n	1a0008c8 <waitForReceiveStringOrTimeoutBlocking+0x34>
1a0008c4:	2001      	movs	r0, #1
1a0008c6:	e000      	b.n	1a0008ca <waitForReceiveStringOrTimeoutBlocking+0x36>
1a0008c8:	2000      	movs	r0, #0
1a0008ca:	b00c      	add	sp, #48	; 0x30
1a0008cc:	bd10      	pop	{r4, pc}
1a0008ce:	bf00      	nop

1a0008d0 <uartWriteString>:
1a0008d0:	b538      	push	{r3, r4, r5, lr}
1a0008d2:	4605      	mov	r5, r0
1a0008d4:	460c      	mov	r4, r1
1a0008d6:	e003      	b.n	1a0008e0 <uartWriteString+0x10>
1a0008d8:	4628      	mov	r0, r5
1a0008da:	f7ff ff81 	bl	1a0007e0 <uartWriteByte>
1a0008de:	3401      	adds	r4, #1
1a0008e0:	7821      	ldrb	r1, [r4, #0]
1a0008e2:	2900      	cmp	r1, #0
1a0008e4:	d1f8      	bne.n	1a0008d8 <uartWriteString+0x8>
1a0008e6:	bd38      	pop	{r3, r4, r5, pc}

1a0008e8 <UART2_IRQHandler>:
1a0008e8:	4770      	bx	lr
1a0008ea:	bf00      	nop

1a0008ec <UART3_IRQHandler>:
1a0008ec:	4770      	bx	lr
1a0008ee:	bf00      	nop

1a0008f0 <sAPI_NullFuncPtr>:
1a0008f0:	2001      	movs	r0, #1
1a0008f2:	4770      	bx	lr

1a0008f4 <errorOcurred>:
1a0008f4:	e7fe      	b.n	1a0008f4 <errorOcurred>
1a0008f6:	bf00      	nop

1a0008f8 <doNothing>:
1a0008f8:	4770      	bx	lr
1a0008fa:	bf00      	nop

1a0008fc <Timer_Init>:
1a0008fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a000900:	b909      	cbnz	r1, 1a000906 <Timer_Init+0xa>
1a000902:	f7ff fff7 	bl	1a0008f4 <errorOcurred>
1a000906:	4605      	mov	r5, r0
1a000908:	4617      	mov	r7, r2
1a00090a:	460e      	mov	r6, r1
1a00090c:	4604      	mov	r4, r0
1a00090e:	4a39      	ldr	r2, [pc, #228]	; (1a0009f4 <Timer_Init+0xf8>)
1a000910:	0043      	lsls	r3, r0, #1
1a000912:	4403      	add	r3, r0
1a000914:	009b      	lsls	r3, r3, #2
1a000916:	eb02 0803 	add.w	r8, r2, r3
1a00091a:	58d0      	ldr	r0, [r2, r3]
1a00091c:	f001 ff0c 	bl	1a002738 <Chip_TIMER_Init>
1a000920:	f898 3004 	ldrb.w	r3, [r8, #4]
1a000924:	095a      	lsrs	r2, r3, #5
1a000926:	f003 031f 	and.w	r3, r3, #31
1a00092a:	2101      	movs	r1, #1
1a00092c:	4099      	lsls	r1, r3
1a00092e:	f102 0340 	add.w	r3, r2, #64	; 0x40
1a000932:	4a31      	ldr	r2, [pc, #196]	; (1a0009f8 <Timer_Init+0xfc>)
1a000934:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
1a000938:	eb04 0344 	add.w	r3, r4, r4, lsl #1
1a00093c:	009b      	lsls	r3, r3, #2
1a00093e:	4a2d      	ldr	r2, [pc, #180]	; (1a0009f4 <Timer_Init+0xf8>)
1a000940:	4413      	add	r3, r2
1a000942:	791b      	ldrb	r3, [r3, #4]
1a000944:	095a      	lsrs	r2, r3, #5
1a000946:	3254      	adds	r2, #84	; 0x54
1a000948:	492b      	ldr	r1, [pc, #172]	; (1a0009f8 <Timer_Init+0xfc>)
1a00094a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
1a00094e:	f003 031f 	and.w	r3, r3, #31
1a000952:	2201      	movs	r2, #1
1a000954:	fa02 f303 	lsl.w	r3, r2, r3
1a000958:	4219      	tst	r1, r3
1a00095a:	d0ed      	beq.n	1a000938 <Timer_Init+0x3c>
1a00095c:	4a25      	ldr	r2, [pc, #148]	; (1a0009f4 <Timer_Init+0xf8>)
1a00095e:	006b      	lsls	r3, r5, #1
1a000960:	442b      	add	r3, r5
1a000962:	009b      	lsls	r3, r3, #2
1a000964:	eb02 0803 	add.w	r8, r2, r3
1a000968:	58d4      	ldr	r4, [r2, r3]
1a00096a:	4620      	mov	r0, r4
1a00096c:	f001 fef0 	bl	1a002750 <Chip_TIMER_Reset>
1a000970:	012b      	lsls	r3, r5, #4
1a000972:	4a22      	ldr	r2, [pc, #136]	; (1a0009fc <Timer_Init+0x100>)
1a000974:	50d7      	str	r7, [r2, r3]
1a000976:	6963      	ldr	r3, [r4, #20]
1a000978:	f043 0301 	orr.w	r3, r3, #1
1a00097c:	6163      	str	r3, [r4, #20]
1a00097e:	61a6      	str	r6, [r4, #24]
1a000980:	6963      	ldr	r3, [r4, #20]
1a000982:	f043 0302 	orr.w	r3, r3, #2
1a000986:	6163      	str	r3, [r4, #20]
1a000988:	6863      	ldr	r3, [r4, #4]
1a00098a:	f043 0301 	orr.w	r3, r3, #1
1a00098e:	6063      	str	r3, [r4, #4]
1a000990:	f8d8 2008 	ldr.w	r2, [r8, #8]
1a000994:	b2d3      	uxtb	r3, r2
1a000996:	f013 0f80 	tst.w	r3, #128	; 0x80
1a00099a:	d006      	beq.n	1a0009aa <Timer_Init+0xae>
1a00099c:	f002 020f 	and.w	r2, r2, #15
1a0009a0:	4b17      	ldr	r3, [pc, #92]	; (1a000a00 <Timer_Init+0x104>)
1a0009a2:	4413      	add	r3, r2
1a0009a4:	22c0      	movs	r2, #192	; 0xc0
1a0009a6:	761a      	strb	r2, [r3, #24]
1a0009a8:	e005      	b.n	1a0009b6 <Timer_Init+0xba>
1a0009aa:	4a16      	ldr	r2, [pc, #88]	; (1a000a04 <Timer_Init+0x108>)
1a0009ac:	fa42 f383 	sxtab	r3, r2, r3
1a0009b0:	22c0      	movs	r2, #192	; 0xc0
1a0009b2:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
1a0009b6:	4c0f      	ldr	r4, [pc, #60]	; (1a0009f4 <Timer_Init+0xf8>)
1a0009b8:	006e      	lsls	r6, r5, #1
1a0009ba:	1973      	adds	r3, r6, r5
1a0009bc:	009b      	lsls	r3, r3, #2
1a0009be:	4423      	add	r3, r4
1a0009c0:	689b      	ldr	r3, [r3, #8]
1a0009c2:	b259      	sxtb	r1, r3
1a0009c4:	0949      	lsrs	r1, r1, #5
1a0009c6:	f003 031f 	and.w	r3, r3, #31
1a0009ca:	2201      	movs	r2, #1
1a0009cc:	fa02 f303 	lsl.w	r3, r2, r3
1a0009d0:	480c      	ldr	r0, [pc, #48]	; (1a000a04 <Timer_Init+0x108>)
1a0009d2:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
1a0009d6:	4435      	add	r5, r6
1a0009d8:	00ad      	lsls	r5, r5, #2
1a0009da:	4425      	add	r5, r4
1a0009dc:	68a9      	ldr	r1, [r5, #8]
1a0009de:	b24b      	sxtb	r3, r1
1a0009e0:	095b      	lsrs	r3, r3, #5
1a0009e2:	f001 011f 	and.w	r1, r1, #31
1a0009e6:	408a      	lsls	r2, r1
1a0009e8:	3360      	adds	r3, #96	; 0x60
1a0009ea:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
1a0009ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a0009f2:	bf00      	nop
1a0009f4:	1a002ec4 	.word	0x1a002ec4
1a0009f8:	40053000 	.word	0x40053000
1a0009fc:	10000128 	.word	0x10000128
1a000a00:	e000ecfc 	.word	0xe000ecfc
1a000a04:	e000e100 	.word	0xe000e100

1a000a08 <Timer_DeInit>:
1a000a08:	b538      	push	{r3, r4, r5, lr}
1a000a0a:	4c0d      	ldr	r4, [pc, #52]	; (1a000a40 <Timer_DeInit+0x38>)
1a000a0c:	0045      	lsls	r5, r0, #1
1a000a0e:	182b      	adds	r3, r5, r0
1a000a10:	009b      	lsls	r3, r3, #2
1a000a12:	4423      	add	r3, r4
1a000a14:	689a      	ldr	r2, [r3, #8]
1a000a16:	b253      	sxtb	r3, r2
1a000a18:	095b      	lsrs	r3, r3, #5
1a000a1a:	f002 021f 	and.w	r2, r2, #31
1a000a1e:	2101      	movs	r1, #1
1a000a20:	fa01 f202 	lsl.w	r2, r1, r2
1a000a24:	3320      	adds	r3, #32
1a000a26:	4907      	ldr	r1, [pc, #28]	; (1a000a44 <Timer_DeInit+0x3c>)
1a000a28:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a000a2c:	4428      	add	r0, r5
1a000a2e:	0080      	lsls	r0, r0, #2
1a000a30:	5820      	ldr	r0, [r4, r0]
1a000a32:	6843      	ldr	r3, [r0, #4]
1a000a34:	f023 0301 	bic.w	r3, r3, #1
1a000a38:	6043      	str	r3, [r0, #4]
1a000a3a:	f001 fe83 	bl	1a002744 <Chip_TIMER_DeInit>
1a000a3e:	bd38      	pop	{r3, r4, r5, pc}
1a000a40:	1a002ec4 	.word	0x1a002ec4
1a000a44:	e000e100 	.word	0xe000e100

1a000a48 <Timer_microsecondsToTicks>:
1a000a48:	23cc      	movs	r3, #204	; 0xcc
1a000a4a:	fb03 f000 	mul.w	r0, r3, r0
1a000a4e:	4770      	bx	lr

1a000a50 <Timer_EnableCompareMatch>:
1a000a50:	b430      	push	{r4, r5}
1a000a52:	eb01 0580 	add.w	r5, r1, r0, lsl #2
1a000a56:	4c0a      	ldr	r4, [pc, #40]	; (1a000a80 <Timer_EnableCompareMatch+0x30>)
1a000a58:	f844 3025 	str.w	r3, [r4, r5, lsl #2]
1a000a5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a000a60:	0080      	lsls	r0, r0, #2
1a000a62:	4b08      	ldr	r3, [pc, #32]	; (1a000a84 <Timer_EnableCompareMatch+0x34>)
1a000a64:	5818      	ldr	r0, [r3, r0]
1a000a66:	6944      	ldr	r4, [r0, #20]
1a000a68:	b249      	sxtb	r1, r1
1a000a6a:	eb01 0541 	add.w	r5, r1, r1, lsl #1
1a000a6e:	2301      	movs	r3, #1
1a000a70:	40ab      	lsls	r3, r5
1a000a72:	4323      	orrs	r3, r4
1a000a74:	6143      	str	r3, [r0, #20]
1a000a76:	3106      	adds	r1, #6
1a000a78:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
1a000a7c:	bc30      	pop	{r4, r5}
1a000a7e:	4770      	bx	lr
1a000a80:	10000128 	.word	0x10000128
1a000a84:	1a002ec4 	.word	0x1a002ec4

1a000a88 <Timer_DisableCompareMatch>:
1a000a88:	b410      	push	{r4}
1a000a8a:	eb01 0280 	add.w	r2, r1, r0, lsl #2
1a000a8e:	4c0c      	ldr	r4, [pc, #48]	; (1a000ac0 <Timer_DisableCompareMatch+0x38>)
1a000a90:	4b0c      	ldr	r3, [pc, #48]	; (1a000ac4 <Timer_DisableCompareMatch+0x3c>)
1a000a92:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1a000a96:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a000a9a:	0080      	lsls	r0, r0, #2
1a000a9c:	4b0a      	ldr	r3, [pc, #40]	; (1a000ac8 <Timer_DisableCompareMatch+0x40>)
1a000a9e:	581a      	ldr	r2, [r3, r0]
1a000aa0:	b249      	sxtb	r1, r1
1a000aa2:	2301      	movs	r3, #1
1a000aa4:	fa03 f001 	lsl.w	r0, r3, r1
1a000aa8:	6010      	str	r0, [r2, #0]
1a000aaa:	6950      	ldr	r0, [r2, #20]
1a000aac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
1a000ab0:	408b      	lsls	r3, r1
1a000ab2:	ea20 0303 	bic.w	r3, r0, r3
1a000ab6:	6153      	str	r3, [r2, #20]
1a000ab8:	f85d 4b04 	ldr.w	r4, [sp], #4
1a000abc:	4770      	bx	lr
1a000abe:	bf00      	nop
1a000ac0:	1a0008f5 	.word	0x1a0008f5
1a000ac4:	10000128 	.word	0x10000128
1a000ac8:	1a002ec4 	.word	0x1a002ec4

1a000acc <Timer_SetCompareMatch>:
1a000acc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a000ad0:	0080      	lsls	r0, r0, #2
1a000ad2:	4b03      	ldr	r3, [pc, #12]	; (1a000ae0 <Timer_SetCompareMatch+0x14>)
1a000ad4:	581b      	ldr	r3, [r3, r0]
1a000ad6:	b249      	sxtb	r1, r1
1a000ad8:	3106      	adds	r1, #6
1a000ada:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
1a000ade:	4770      	bx	lr
1a000ae0:	1a002ec4 	.word	0x1a002ec4

1a000ae4 <TIMER0_IRQHandler>:
1a000ae4:	b510      	push	{r4, lr}
1a000ae6:	2400      	movs	r4, #0
1a000ae8:	e012      	b.n	1a000b10 <TIMER0_IRQHandler+0x2c>
1a000aea:	4b0b      	ldr	r3, [pc, #44]	; (1a000b18 <TIMER0_IRQHandler+0x34>)
1a000aec:	681a      	ldr	r2, [r3, #0]
1a000aee:	f004 010f 	and.w	r1, r4, #15
1a000af2:	2301      	movs	r3, #1
1a000af4:	408b      	lsls	r3, r1
1a000af6:	421a      	tst	r2, r3
1a000af8:	d008      	beq.n	1a000b0c <TIMER0_IRQHandler+0x28>
1a000afa:	4b08      	ldr	r3, [pc, #32]	; (1a000b1c <TIMER0_IRQHandler+0x38>)
1a000afc:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
1a000b00:	4798      	blx	r3
1a000b02:	b262      	sxtb	r2, r4
1a000b04:	2301      	movs	r3, #1
1a000b06:	4093      	lsls	r3, r2
1a000b08:	4a03      	ldr	r2, [pc, #12]	; (1a000b18 <TIMER0_IRQHandler+0x34>)
1a000b0a:	6013      	str	r3, [r2, #0]
1a000b0c:	3401      	adds	r4, #1
1a000b0e:	b2e4      	uxtb	r4, r4
1a000b10:	2c03      	cmp	r4, #3
1a000b12:	d9ea      	bls.n	1a000aea <TIMER0_IRQHandler+0x6>
1a000b14:	bd10      	pop	{r4, pc}
1a000b16:	bf00      	nop
1a000b18:	40084000 	.word	0x40084000
1a000b1c:	10000128 	.word	0x10000128

1a000b20 <TIMER1_IRQHandler>:
1a000b20:	b510      	push	{r4, lr}
1a000b22:	2400      	movs	r4, #0
1a000b24:	e013      	b.n	1a000b4e <TIMER1_IRQHandler+0x2e>
1a000b26:	4b0b      	ldr	r3, [pc, #44]	; (1a000b54 <TIMER1_IRQHandler+0x34>)
1a000b28:	681a      	ldr	r2, [r3, #0]
1a000b2a:	f004 010f 	and.w	r1, r4, #15
1a000b2e:	2301      	movs	r3, #1
1a000b30:	408b      	lsls	r3, r1
1a000b32:	421a      	tst	r2, r3
1a000b34:	d009      	beq.n	1a000b4a <TIMER1_IRQHandler+0x2a>
1a000b36:	1d23      	adds	r3, r4, #4
1a000b38:	4a07      	ldr	r2, [pc, #28]	; (1a000b58 <TIMER1_IRQHandler+0x38>)
1a000b3a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a000b3e:	4798      	blx	r3
1a000b40:	b262      	sxtb	r2, r4
1a000b42:	2301      	movs	r3, #1
1a000b44:	4093      	lsls	r3, r2
1a000b46:	4a03      	ldr	r2, [pc, #12]	; (1a000b54 <TIMER1_IRQHandler+0x34>)
1a000b48:	6013      	str	r3, [r2, #0]
1a000b4a:	3401      	adds	r4, #1
1a000b4c:	b2e4      	uxtb	r4, r4
1a000b4e:	2c03      	cmp	r4, #3
1a000b50:	d9e9      	bls.n	1a000b26 <TIMER1_IRQHandler+0x6>
1a000b52:	bd10      	pop	{r4, pc}
1a000b54:	40085000 	.word	0x40085000
1a000b58:	10000128 	.word	0x10000128

1a000b5c <TIMER2_IRQHandler>:
1a000b5c:	b510      	push	{r4, lr}
1a000b5e:	2400      	movs	r4, #0
1a000b60:	e014      	b.n	1a000b8c <TIMER2_IRQHandler+0x30>
1a000b62:	4b0c      	ldr	r3, [pc, #48]	; (1a000b94 <TIMER2_IRQHandler+0x38>)
1a000b64:	681a      	ldr	r2, [r3, #0]
1a000b66:	f004 010f 	and.w	r1, r4, #15
1a000b6a:	2301      	movs	r3, #1
1a000b6c:	408b      	lsls	r3, r1
1a000b6e:	421a      	tst	r2, r3
1a000b70:	d00a      	beq.n	1a000b88 <TIMER2_IRQHandler+0x2c>
1a000b72:	f104 0308 	add.w	r3, r4, #8
1a000b76:	4a08      	ldr	r2, [pc, #32]	; (1a000b98 <TIMER2_IRQHandler+0x3c>)
1a000b78:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a000b7c:	4798      	blx	r3
1a000b7e:	b262      	sxtb	r2, r4
1a000b80:	2301      	movs	r3, #1
1a000b82:	4093      	lsls	r3, r2
1a000b84:	4a03      	ldr	r2, [pc, #12]	; (1a000b94 <TIMER2_IRQHandler+0x38>)
1a000b86:	6013      	str	r3, [r2, #0]
1a000b88:	3401      	adds	r4, #1
1a000b8a:	b2e4      	uxtb	r4, r4
1a000b8c:	2c03      	cmp	r4, #3
1a000b8e:	d9e8      	bls.n	1a000b62 <TIMER2_IRQHandler+0x6>
1a000b90:	bd10      	pop	{r4, pc}
1a000b92:	bf00      	nop
1a000b94:	400c3000 	.word	0x400c3000
1a000b98:	10000128 	.word	0x10000128

1a000b9c <TIMER3_IRQHandler>:
1a000b9c:	b510      	push	{r4, lr}
1a000b9e:	2400      	movs	r4, #0
1a000ba0:	e014      	b.n	1a000bcc <TIMER3_IRQHandler+0x30>
1a000ba2:	4b0c      	ldr	r3, [pc, #48]	; (1a000bd4 <TIMER3_IRQHandler+0x38>)
1a000ba4:	681a      	ldr	r2, [r3, #0]
1a000ba6:	f004 010f 	and.w	r1, r4, #15
1a000baa:	2301      	movs	r3, #1
1a000bac:	408b      	lsls	r3, r1
1a000bae:	421a      	tst	r2, r3
1a000bb0:	d00a      	beq.n	1a000bc8 <TIMER3_IRQHandler+0x2c>
1a000bb2:	f104 030c 	add.w	r3, r4, #12
1a000bb6:	4a08      	ldr	r2, [pc, #32]	; (1a000bd8 <TIMER3_IRQHandler+0x3c>)
1a000bb8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a000bbc:	4798      	blx	r3
1a000bbe:	b262      	sxtb	r2, r4
1a000bc0:	2301      	movs	r3, #1
1a000bc2:	4093      	lsls	r3, r2
1a000bc4:	4a03      	ldr	r2, [pc, #12]	; (1a000bd4 <TIMER3_IRQHandler+0x38>)
1a000bc6:	6013      	str	r3, [r2, #0]
1a000bc8:	3401      	adds	r4, #1
1a000bca:	b2e4      	uxtb	r4, r4
1a000bcc:	2c03      	cmp	r4, #3
1a000bce:	d9e8      	bls.n	1a000ba2 <TIMER3_IRQHandler+0x6>
1a000bd0:	bd10      	pop	{r4, pc}
1a000bd2:	bf00      	nop
1a000bd4:	400c4000 	.word	0x400c4000
1a000bd8:	10000128 	.word	0x10000128

1a000bdc <delayInaccurate>:
1a000bdc:	b430      	push	{r4, r5}
1a000bde:	b084      	sub	sp, #16
1a000be0:	0109      	lsls	r1, r1, #4
1a000be2:	0104      	lsls	r4, r0, #4
1a000be4:	ea41 7510 	orr.w	r5, r1, r0, lsr #28
1a000be8:	00ab      	lsls	r3, r5, #2
1a000bea:	ea43 7394 	orr.w	r3, r3, r4, lsr #30
1a000bee:	00a2      	lsls	r2, r4, #2
1a000bf0:	1912      	adds	r2, r2, r4
1a000bf2:	416b      	adcs	r3, r5
1a000bf4:	0219      	lsls	r1, r3, #8
1a000bf6:	ea41 6112 	orr.w	r1, r1, r2, lsr #24
1a000bfa:	0210      	lsls	r0, r2, #8
1a000bfc:	1a82      	subs	r2, r0, r2
1a000bfe:	eb61 0303 	sbc.w	r3, r1, r3
1a000c02:	e9cd 2300 	strd	r2, r3, [sp]
1a000c06:	e9dd 2300 	ldrd	r2, r3, [sp]
1a000c0a:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000c0e:	e007      	b.n	1a000c20 <delayInaccurate+0x44>
1a000c10:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000c14:	f112 32ff 	adds.w	r2, r2, #4294967295
1a000c18:	f143 33ff 	adc.w	r3, r3, #4294967295
1a000c1c:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000c20:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000c24:	4313      	orrs	r3, r2
1a000c26:	d1f3      	bne.n	1a000c10 <delayInaccurate+0x34>
1a000c28:	b004      	add	sp, #16
1a000c2a:	bc30      	pop	{r4, r5}
1a000c2c:	4770      	bx	lr
1a000c2e:	bf00      	nop

1a000c30 <delayInaccurateUs>:
1a000c30:	b500      	push	{lr}
1a000c32:	b085      	sub	sp, #20
1a000c34:	1802      	adds	r2, r0, r0
1a000c36:	eb41 0301 	adc.w	r3, r1, r1
1a000c3a:	1880      	adds	r0, r0, r2
1a000c3c:	4159      	adcs	r1, r3
1a000c3e:	010b      	lsls	r3, r1, #4
1a000c40:	ea43 7310 	orr.w	r3, r3, r0, lsr #28
1a000c44:	0102      	lsls	r2, r0, #4
1a000c46:	1880      	adds	r0, r0, r2
1a000c48:	4159      	adcs	r1, r3
1a000c4a:	008b      	lsls	r3, r1, #2
1a000c4c:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
1a000c50:	0082      	lsls	r2, r0, #2
1a000c52:	4610      	mov	r0, r2
1a000c54:	4619      	mov	r1, r3
1a000c56:	220a      	movs	r2, #10
1a000c58:	2300      	movs	r3, #0
1a000c5a:	f001 fe23 	bl	1a0028a4 <__aeabi_uldivmod>
1a000c5e:	e9cd 0100 	strd	r0, r1, [sp]
1a000c62:	e9dd 2300 	ldrd	r2, r3, [sp]
1a000c66:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000c6a:	e007      	b.n	1a000c7c <delayInaccurateUs+0x4c>
1a000c6c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000c70:	f112 32ff 	adds.w	r2, r2, #4294967295
1a000c74:	f143 33ff 	adc.w	r3, r3, #4294967295
1a000c78:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a000c7c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a000c80:	4313      	orrs	r3, r2
1a000c82:	d1f3      	bne.n	1a000c6c <delayInaccurateUs+0x3c>
1a000c84:	b005      	add	sp, #20
1a000c86:	f85d fb04 	ldr.w	pc, [sp], #4
1a000c8a:	bf00      	nop

1a000c8c <delay>:
1a000c8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a000c90:	4680      	mov	r8, r0
1a000c92:	4689      	mov	r9, r1
1a000c94:	f000 f890 	bl	1a000db8 <tickRead>
1a000c98:	4606      	mov	r6, r0
1a000c9a:	460f      	mov	r7, r1
1a000c9c:	f000 f88c 	bl	1a000db8 <tickRead>
1a000ca0:	1b84      	subs	r4, r0, r6
1a000ca2:	eb61 0507 	sbc.w	r5, r1, r7
1a000ca6:	4640      	mov	r0, r8
1a000ca8:	4649      	mov	r1, r9
1a000caa:	4b05      	ldr	r3, [pc, #20]	; (1a000cc0 <delay+0x34>)
1a000cac:	e9d3 2300 	ldrd	r2, r3, [r3]
1a000cb0:	f001 fdf8 	bl	1a0028a4 <__aeabi_uldivmod>
1a000cb4:	428d      	cmp	r5, r1
1a000cb6:	bf08      	it	eq
1a000cb8:	4284      	cmpeq	r4, r0
1a000cba:	d3ef      	bcc.n	1a000c9c <delay+0x10>
1a000cbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a000cc0:	10000278 	.word	0x10000278

1a000cc4 <delayConfig>:
1a000cc4:	b510      	push	{r4, lr}
1a000cc6:	4604      	mov	r4, r0
1a000cc8:	4610      	mov	r0, r2
1a000cca:	4619      	mov	r1, r3
1a000ccc:	4b04      	ldr	r3, [pc, #16]	; (1a000ce0 <delayConfig+0x1c>)
1a000cce:	e9d3 2300 	ldrd	r2, r3, [r3]
1a000cd2:	f001 fde7 	bl	1a0028a4 <__aeabi_uldivmod>
1a000cd6:	e9c4 0102 	strd	r0, r1, [r4, #8]
1a000cda:	2300      	movs	r3, #0
1a000cdc:	7423      	strb	r3, [r4, #16]
1a000cde:	bd10      	pop	{r4, pc}
1a000ce0:	10000278 	.word	0x10000278

1a000ce4 <delayRead>:
1a000ce4:	b510      	push	{r4, lr}
1a000ce6:	4604      	mov	r4, r0
1a000ce8:	7c03      	ldrb	r3, [r0, #16]
1a000cea:	b93b      	cbnz	r3, 1a000cfc <delayRead+0x18>
1a000cec:	f000 f864 	bl	1a000db8 <tickRead>
1a000cf0:	e9c4 0100 	strd	r0, r1, [r4]
1a000cf4:	2301      	movs	r3, #1
1a000cf6:	7423      	strb	r3, [r4, #16]
1a000cf8:	2000      	movs	r0, #0
1a000cfa:	bd10      	pop	{r4, pc}
1a000cfc:	f000 f85c 	bl	1a000db8 <tickRead>
1a000d00:	e9d4 2300 	ldrd	r2, r3, [r4]
1a000d04:	1a80      	subs	r0, r0, r2
1a000d06:	eb61 0103 	sbc.w	r1, r1, r3
1a000d0a:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
1a000d0e:	4299      	cmp	r1, r3
1a000d10:	bf08      	it	eq
1a000d12:	4290      	cmpeq	r0, r2
1a000d14:	d303      	bcc.n	1a000d1e <delayRead+0x3a>
1a000d16:	2300      	movs	r3, #0
1a000d18:	7423      	strb	r3, [r4, #16]
1a000d1a:	2001      	movs	r0, #1
1a000d1c:	bd10      	pop	{r4, pc}
1a000d1e:	2000      	movs	r0, #0
1a000d20:	bd10      	pop	{r4, pc}
1a000d22:	bf00      	nop

1a000d24 <delayWrite>:
1a000d24:	b510      	push	{r4, lr}
1a000d26:	4604      	mov	r4, r0
1a000d28:	4610      	mov	r0, r2
1a000d2a:	4619      	mov	r1, r3
1a000d2c:	4b03      	ldr	r3, [pc, #12]	; (1a000d3c <delayWrite+0x18>)
1a000d2e:	e9d3 2300 	ldrd	r2, r3, [r3]
1a000d32:	f001 fdb7 	bl	1a0028a4 <__aeabi_uldivmod>
1a000d36:	e9c4 0102 	strd	r0, r1, [r4, #8]
1a000d3a:	bd10      	pop	{r4, pc}
1a000d3c:	10000278 	.word	0x10000278

1a000d40 <tickConfig>:
1a000d40:	b508      	push	{r3, lr}
1a000d42:	b112      	cbz	r2, 1a000d4a <tickConfig+0xa>
1a000d44:	4613      	mov	r3, r2
1a000d46:	4a17      	ldr	r2, [pc, #92]	; (1a000da4 <tickConfig+0x64>)
1a000d48:	6013      	str	r3, [r2, #0]
1a000d4a:	f110 32ff 	adds.w	r2, r0, #4294967295
1a000d4e:	f141 33ff 	adc.w	r3, r1, #4294967295
1a000d52:	2b00      	cmp	r3, #0
1a000d54:	bf08      	it	eq
1a000d56:	2a32      	cmpeq	r2, #50	; 0x32
1a000d58:	d220      	bcs.n	1a000d9c <tickConfig+0x5c>
1a000d5a:	4602      	mov	r2, r0
1a000d5c:	460b      	mov	r3, r1
1a000d5e:	4912      	ldr	r1, [pc, #72]	; (1a000da8 <tickConfig+0x68>)
1a000d60:	e9c1 2300 	strd	r2, r3, [r1]
1a000d64:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1a000d68:	2100      	movs	r1, #0
1a000d6a:	f001 fd9b 	bl	1a0028a4 <__aeabi_uldivmod>
1a000d6e:	4602      	mov	r2, r0
1a000d70:	460b      	mov	r3, r1
1a000d72:	490e      	ldr	r1, [pc, #56]	; (1a000dac <tickConfig+0x6c>)
1a000d74:	6808      	ldr	r0, [r1, #0]
1a000d76:	2100      	movs	r1, #0
1a000d78:	f001 fd94 	bl	1a0028a4 <__aeabi_uldivmod>
1a000d7c:	3801      	subs	r0, #1
1a000d7e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
1a000d82:	d20d      	bcs.n	1a000da0 <tickConfig+0x60>
1a000d84:	4b0a      	ldr	r3, [pc, #40]	; (1a000db0 <tickConfig+0x70>)
1a000d86:	6058      	str	r0, [r3, #4]
1a000d88:	21e0      	movs	r1, #224	; 0xe0
1a000d8a:	4a0a      	ldr	r2, [pc, #40]	; (1a000db4 <tickConfig+0x74>)
1a000d8c:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
1a000d90:	2200      	movs	r2, #0
1a000d92:	609a      	str	r2, [r3, #8]
1a000d94:	2207      	movs	r2, #7
1a000d96:	601a      	str	r2, [r3, #0]
1a000d98:	2001      	movs	r0, #1
1a000d9a:	bd08      	pop	{r3, pc}
1a000d9c:	2000      	movs	r0, #0
1a000d9e:	bd08      	pop	{r3, pc}
1a000da0:	2001      	movs	r0, #1
1a000da2:	bd08      	pop	{r3, pc}
1a000da4:	10000168 	.word	0x10000168
1a000da8:	10000278 	.word	0x10000278
1a000dac:	10000280 	.word	0x10000280
1a000db0:	e000e010 	.word	0xe000e010
1a000db4:	e000ed00 	.word	0xe000ed00

1a000db8 <tickRead>:
1a000db8:	4b01      	ldr	r3, [pc, #4]	; (1a000dc0 <tickRead+0x8>)
1a000dba:	e9d3 0100 	ldrd	r0, r1, [r3]
1a000dbe:	4770      	bx	lr
1a000dc0:	10000270 	.word	0x10000270

1a000dc4 <tickWrite>:
1a000dc4:	4b01      	ldr	r3, [pc, #4]	; (1a000dcc <tickWrite+0x8>)
1a000dc6:	e9c3 0100 	strd	r0, r1, [r3]
1a000dca:	4770      	bx	lr
1a000dcc:	10000270 	.word	0x10000270

1a000dd0 <SysTick_Handler>:
1a000dd0:	b508      	push	{r3, lr}
1a000dd2:	4906      	ldr	r1, [pc, #24]	; (1a000dec <SysTick_Handler+0x1c>)
1a000dd4:	e9d1 2300 	ldrd	r2, r3, [r1]
1a000dd8:	3201      	adds	r2, #1
1a000dda:	f143 0300 	adc.w	r3, r3, #0
1a000dde:	e9c1 2300 	strd	r2, r3, [r1]
1a000de2:	4b03      	ldr	r3, [pc, #12]	; (1a000df0 <SysTick_Handler+0x20>)
1a000de4:	681b      	ldr	r3, [r3, #0]
1a000de6:	2000      	movs	r0, #0
1a000de8:	4798      	blx	r3
1a000dea:	bd08      	pop	{r3, pc}
1a000dec:	10000270 	.word	0x10000270
1a000df0:	10000168 	.word	0x10000168

1a000df4 <printSetUart>:
1a000df4:	7001      	strb	r1, [r0, #0]
1a000df6:	4770      	bx	lr

1a000df8 <printConfigUart>:
1a000df8:	b508      	push	{r3, lr}
1a000dfa:	7001      	strb	r1, [r0, #0]
1a000dfc:	4608      	mov	r0, r1
1a000dfe:	4611      	mov	r1, r2
1a000e00:	f7ff fc9a 	bl	1a000738 <uartConfig>
1a000e04:	bd08      	pop	{r3, pc}
1a000e06:	bf00      	nop

1a000e08 <printString>:
1a000e08:	b508      	push	{r3, lr}
1a000e0a:	f7ff fd61 	bl	1a0008d0 <uartWriteString>
1a000e0e:	bd08      	pop	{r3, pc}

1a000e10 <printEnter>:
1a000e10:	b508      	push	{r3, lr}
1a000e12:	4902      	ldr	r1, [pc, #8]	; (1a000e1c <printEnter+0xc>)
1a000e14:	f7ff fd5c 	bl	1a0008d0 <uartWriteString>
1a000e18:	bd08      	pop	{r3, pc}
1a000e1a:	bf00      	nop
1a000e1c:	1a002ef4 	.word	0x1a002ef4

1a000e20 <printIntFormat>:
1a000e20:	b510      	push	{r4, lr}
1a000e22:	b092      	sub	sp, #72	; 0x48
1a000e24:	4604      	mov	r4, r0
1a000e26:	4610      	mov	r0, r2
1a000e28:	4619      	mov	r1, r3
1a000e2a:	aa01      	add	r2, sp, #4
1a000e2c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
1a000e30:	f000 f8a0 	bl	1a000f74 <int64ToString>
1a000e34:	b118      	cbz	r0, 1a000e3e <printIntFormat+0x1e>
1a000e36:	4620      	mov	r0, r4
1a000e38:	a901      	add	r1, sp, #4
1a000e3a:	f7ff fd49 	bl	1a0008d0 <uartWriteString>
1a000e3e:	b012      	add	sp, #72	; 0x48
1a000e40:	bd10      	pop	{r4, pc}
1a000e42:	bf00      	nop

1a000e44 <printUIntFormat>:
1a000e44:	b510      	push	{r4, lr}
1a000e46:	b092      	sub	sp, #72	; 0x48
1a000e48:	4604      	mov	r4, r0
1a000e4a:	4610      	mov	r0, r2
1a000e4c:	4619      	mov	r1, r3
1a000e4e:	aa01      	add	r2, sp, #4
1a000e50:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
1a000e54:	f000 f8d4 	bl	1a001000 <uint64ToString>
1a000e58:	b118      	cbz	r0, 1a000e62 <printUIntFormat+0x1e>
1a000e5a:	4620      	mov	r0, r4
1a000e5c:	a901      	add	r1, sp, #4
1a000e5e:	f7ff fd37 	bl	1a0008d0 <uartWriteString>
1a000e62:	b012      	add	sp, #72	; 0x48
1a000e64:	bd10      	pop	{r4, pc}
1a000e66:	bf00      	nop

1a000e68 <printHex>:
1a000e68:	b510      	push	{r4, lr}
1a000e6a:	4604      	mov	r4, r0
1a000e6c:	4610      	mov	r0, r2
1a000e6e:	4619      	mov	r1, r3
1a000e70:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a000e74:	f000 f8fe 	bl	1a001074 <uintToAsciiHex>
1a000e78:	4601      	mov	r1, r0
1a000e7a:	4620      	mov	r0, r4
1a000e7c:	f7ff ffc4 	bl	1a000e08 <printString>
1a000e80:	bd10      	pop	{r4, pc}
1a000e82:	bf00      	nop

1a000e84 <boardConfig>:
1a000e84:	b508      	push	{r3, lr}
1a000e86:	f000 ff03 	bl	1a001c90 <SystemCoreClockUpdate>
1a000e8a:	f000 fb37 	bl	1a0014fc <Board_Init>
1a000e8e:	2001      	movs	r0, #1
1a000e90:	2100      	movs	r1, #0
1a000e92:	2200      	movs	r2, #0
1a000e94:	f7ff ff54 	bl	1a000d40 <tickConfig>
1a000e98:	2000      	movs	r0, #0
1a000e9a:	2105      	movs	r1, #5
1a000e9c:	f000 f952 	bl	1a001144 <gpioConfig>
1a000ea0:	2024      	movs	r0, #36	; 0x24
1a000ea2:	2100      	movs	r1, #0
1a000ea4:	f000 f94e 	bl	1a001144 <gpioConfig>
1a000ea8:	2025      	movs	r0, #37	; 0x25
1a000eaa:	2100      	movs	r1, #0
1a000eac:	f000 f94a 	bl	1a001144 <gpioConfig>
1a000eb0:	2026      	movs	r0, #38	; 0x26
1a000eb2:	2100      	movs	r1, #0
1a000eb4:	f000 f946 	bl	1a001144 <gpioConfig>
1a000eb8:	2027      	movs	r0, #39	; 0x27
1a000eba:	2100      	movs	r1, #0
1a000ebc:	f000 f942 	bl	1a001144 <gpioConfig>
1a000ec0:	2028      	movs	r0, #40	; 0x28
1a000ec2:	2101      	movs	r1, #1
1a000ec4:	f000 f93e 	bl	1a001144 <gpioConfig>
1a000ec8:	2029      	movs	r0, #41	; 0x29
1a000eca:	2101      	movs	r1, #1
1a000ecc:	f000 f93a 	bl	1a001144 <gpioConfig>
1a000ed0:	202a      	movs	r0, #42	; 0x2a
1a000ed2:	2101      	movs	r1, #1
1a000ed4:	f000 f936 	bl	1a001144 <gpioConfig>
1a000ed8:	202b      	movs	r0, #43	; 0x2b
1a000eda:	2101      	movs	r1, #1
1a000edc:	f000 f932 	bl	1a001144 <gpioConfig>
1a000ee0:	202c      	movs	r0, #44	; 0x2c
1a000ee2:	2101      	movs	r1, #1
1a000ee4:	f000 f92e 	bl	1a001144 <gpioConfig>
1a000ee8:	202d      	movs	r0, #45	; 0x2d
1a000eea:	2101      	movs	r1, #1
1a000eec:	f000 f92a 	bl	1a001144 <gpioConfig>
1a000ef0:	202e      	movs	r0, #46	; 0x2e
1a000ef2:	2100      	movs	r1, #0
1a000ef4:	f000 f926 	bl	1a001144 <gpioConfig>
1a000ef8:	202f      	movs	r0, #47	; 0x2f
1a000efa:	2100      	movs	r1, #0
1a000efc:	f000 f922 	bl	1a001144 <gpioConfig>
1a000f00:	2030      	movs	r0, #48	; 0x30
1a000f02:	2100      	movs	r1, #0
1a000f04:	f000 f91e 	bl	1a001144 <gpioConfig>
1a000f08:	2031      	movs	r0, #49	; 0x31
1a000f0a:	2100      	movs	r1, #0
1a000f0c:	f000 f91a 	bl	1a001144 <gpioConfig>
1a000f10:	2032      	movs	r0, #50	; 0x32
1a000f12:	2100      	movs	r1, #0
1a000f14:	f000 f916 	bl	1a001144 <gpioConfig>
1a000f18:	2033      	movs	r0, #51	; 0x33
1a000f1a:	2100      	movs	r1, #0
1a000f1c:	f000 f912 	bl	1a001144 <gpioConfig>
1a000f20:	2034      	movs	r0, #52	; 0x34
1a000f22:	2100      	movs	r1, #0
1a000f24:	f000 f90e 	bl	1a001144 <gpioConfig>
1a000f28:	2035      	movs	r0, #53	; 0x35
1a000f2a:	2100      	movs	r1, #0
1a000f2c:	f000 f90a 	bl	1a001144 <gpioConfig>
1a000f30:	2036      	movs	r0, #54	; 0x36
1a000f32:	2101      	movs	r1, #1
1a000f34:	f000 f906 	bl	1a001144 <gpioConfig>
1a000f38:	2037      	movs	r0, #55	; 0x37
1a000f3a:	2101      	movs	r1, #1
1a000f3c:	f000 f902 	bl	1a001144 <gpioConfig>
1a000f40:	2038      	movs	r0, #56	; 0x38
1a000f42:	2101      	movs	r1, #1
1a000f44:	f000 f8fe 	bl	1a001144 <gpioConfig>
1a000f48:	2039      	movs	r0, #57	; 0x39
1a000f4a:	2101      	movs	r1, #1
1a000f4c:	f000 f8fa 	bl	1a001144 <gpioConfig>
1a000f50:	203a      	movs	r0, #58	; 0x3a
1a000f52:	2101      	movs	r1, #1
1a000f54:	f000 f8f6 	bl	1a001144 <gpioConfig>
1a000f58:	203b      	movs	r0, #59	; 0x3b
1a000f5a:	2101      	movs	r1, #1
1a000f5c:	f000 f8f2 	bl	1a001144 <gpioConfig>
1a000f60:	203c      	movs	r0, #60	; 0x3c
1a000f62:	2101      	movs	r1, #1
1a000f64:	f000 f8ee 	bl	1a001144 <gpioConfig>
1a000f68:	203d      	movs	r0, #61	; 0x3d
1a000f6a:	2101      	movs	r1, #1
1a000f6c:	f000 f8ea 	bl	1a001144 <gpioConfig>
1a000f70:	bd08      	pop	{r3, pc}
1a000f72:	bf00      	nop

1a000f74 <int64ToString>:
1a000f74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a000f78:	4615      	mov	r5, r2
1a000f7a:	4699      	mov	r9, r3
1a000f7c:	3b02      	subs	r3, #2
1a000f7e:	b2db      	uxtb	r3, r3
1a000f80:	2b22      	cmp	r3, #34	; 0x22
1a000f82:	d903      	bls.n	1a000f8c <int64ToString+0x18>
1a000f84:	2000      	movs	r0, #0
1a000f86:	7010      	strb	r0, [r2, #0]
1a000f88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a000f8c:	4606      	mov	r6, r0
1a000f8e:	460f      	mov	r7, r1
1a000f90:	4690      	mov	r8, r2
1a000f92:	e002      	b.n	1a000f9a <int64ToString+0x26>
1a000f94:	46f0      	mov	r8, lr
1a000f96:	4606      	mov	r6, r0
1a000f98:	460f      	mov	r7, r1
1a000f9a:	4630      	mov	r0, r6
1a000f9c:	4639      	mov	r1, r7
1a000f9e:	464a      	mov	r2, r9
1a000fa0:	2300      	movs	r3, #0
1a000fa2:	f001 fc63 	bl	1a00286c <__aeabi_ldivmod>
1a000fa6:	f108 0e01 	add.w	lr, r8, #1
1a000faa:	fba9 2300 	umull	r2, r3, r9, r0
1a000fae:	1ab2      	subs	r2, r6, r2
1a000fb0:	4b12      	ldr	r3, [pc, #72]	; (1a000ffc <int64ToString+0x88>)
1a000fb2:	441a      	add	r2, r3
1a000fb4:	7813      	ldrb	r3, [r2, #0]
1a000fb6:	f888 3000 	strb.w	r3, [r8]
1a000fba:	ea50 0301 	orrs.w	r3, r0, r1
1a000fbe:	d1e9      	bne.n	1a000f94 <int64ToString+0x20>
1a000fc0:	2e00      	cmp	r6, #0
1a000fc2:	f177 0300 	sbcs.w	r3, r7, #0
1a000fc6:	da04      	bge.n	1a000fd2 <int64ToString+0x5e>
1a000fc8:	f108 0e02 	add.w	lr, r8, #2
1a000fcc:	232d      	movs	r3, #45	; 0x2d
1a000fce:	f888 3001 	strb.w	r3, [r8, #1]
1a000fd2:	f10e 33ff 	add.w	r3, lr, #4294967295
1a000fd6:	2200      	movs	r2, #0
1a000fd8:	f88e 2000 	strb.w	r2, [lr]
1a000fdc:	e009      	b.n	1a000ff2 <int64ToString+0x7e>
1a000fde:	461a      	mov	r2, r3
1a000fe0:	f812 0901 	ldrb.w	r0, [r2], #-1
1a000fe4:	4629      	mov	r1, r5
1a000fe6:	f811 4b01 	ldrb.w	r4, [r1], #1
1a000fea:	701c      	strb	r4, [r3, #0]
1a000fec:	7028      	strb	r0, [r5, #0]
1a000fee:	460d      	mov	r5, r1
1a000ff0:	4613      	mov	r3, r2
1a000ff2:	429d      	cmp	r5, r3
1a000ff4:	d3f3      	bcc.n	1a000fde <int64ToString+0x6a>
1a000ff6:	2001      	movs	r0, #1
1a000ff8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a000ffc:	1a002f1b 	.word	0x1a002f1b

1a001000 <uint64ToString>:
1a001000:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a001004:	4690      	mov	r8, r2
1a001006:	4699      	mov	r9, r3
1a001008:	3b02      	subs	r3, #2
1a00100a:	b2db      	uxtb	r3, r3
1a00100c:	2b22      	cmp	r3, #34	; 0x22
1a00100e:	d903      	bls.n	1a001018 <uint64ToString+0x18>
1a001010:	2000      	movs	r0, #0
1a001012:	7010      	strb	r0, [r2, #0]
1a001014:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a001018:	4606      	mov	r6, r0
1a00101a:	460f      	mov	r7, r1
1a00101c:	4614      	mov	r4, r2
1a00101e:	e000      	b.n	1a001022 <uint64ToString+0x22>
1a001020:	4674      	mov	r4, lr
1a001022:	4630      	mov	r0, r6
1a001024:	4639      	mov	r1, r7
1a001026:	464a      	mov	r2, r9
1a001028:	2300      	movs	r3, #0
1a00102a:	f001 fc3b 	bl	1a0028a4 <__aeabi_uldivmod>
1a00102e:	f104 0e01 	add.w	lr, r4, #1
1a001032:	fba9 2300 	umull	r2, r3, r9, r0
1a001036:	1ab2      	subs	r2, r6, r2
1a001038:	4e0d      	ldr	r6, [pc, #52]	; (1a001070 <uint64ToString+0x70>)
1a00103a:	4432      	add	r2, r6
1a00103c:	7813      	ldrb	r3, [r2, #0]
1a00103e:	7023      	strb	r3, [r4, #0]
1a001040:	4606      	mov	r6, r0
1a001042:	460f      	mov	r7, r1
1a001044:	ea50 0301 	orrs.w	r3, r0, r1
1a001048:	d1ea      	bne.n	1a001020 <uint64ToString+0x20>
1a00104a:	2300      	movs	r3, #0
1a00104c:	7063      	strb	r3, [r4, #1]
1a00104e:	e00a      	b.n	1a001066 <uint64ToString+0x66>
1a001050:	4623      	mov	r3, r4
1a001052:	f813 1901 	ldrb.w	r1, [r3], #-1
1a001056:	4642      	mov	r2, r8
1a001058:	f812 0b01 	ldrb.w	r0, [r2], #1
1a00105c:	7020      	strb	r0, [r4, #0]
1a00105e:	f888 1000 	strb.w	r1, [r8]
1a001062:	4690      	mov	r8, r2
1a001064:	461c      	mov	r4, r3
1a001066:	45a0      	cmp	r8, r4
1a001068:	d3f2      	bcc.n	1a001050 <uint64ToString+0x50>
1a00106a:	2001      	movs	r0, #1
1a00106c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a001070:	1a002f1b 	.word	0x1a002f1b

1a001074 <uintToAsciiHex>:
1a001074:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a001078:	b086      	sub	sp, #24
1a00107a:	4606      	mov	r6, r0
1a00107c:	460f      	mov	r7, r1
1a00107e:	4690      	mov	r8, r2
1a001080:	f10d 0e04 	add.w	lr, sp, #4
1a001084:	f8df c08c 	ldr.w	ip, [pc, #140]	; 1a001114 <uintToAsciiHex+0xa0>
1a001088:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1a00108c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
1a001090:	f8dc 3000 	ldr.w	r3, [ip]
1a001094:	f88e 3000 	strb.w	r3, [lr]
1a001098:	ea4f 0298 	mov.w	r2, r8, lsr #2
1a00109c:	4694      	mov	ip, r2
1a00109e:	2100      	movs	r1, #0
1a0010a0:	4b1b      	ldr	r3, [pc, #108]	; (1a001110 <uintToAsciiHex+0x9c>)
1a0010a2:	5499      	strb	r1, [r3, r2]
1a0010a4:	e02e      	b.n	1a001104 <uintToAsciiHex+0x90>
1a0010a6:	ebc1 000c 	rsb	r0, r1, ip
1a0010aa:	3801      	subs	r0, #1
1a0010ac:	008b      	lsls	r3, r1, #2
1a0010ae:	f04f 0e0f 	mov.w	lr, #15
1a0010b2:	f1a3 0920 	sub.w	r9, r3, #32
1a0010b6:	f1c3 0820 	rsb	r8, r3, #32
1a0010ba:	fa0e f509 	lsl.w	r5, lr, r9
1a0010be:	fa2e f808 	lsr.w	r8, lr, r8
1a0010c2:	ea45 0508 	orr.w	r5, r5, r8
1a0010c6:	fa0e f403 	lsl.w	r4, lr, r3
1a0010ca:	ea04 0806 	and.w	r8, r4, r6
1a0010ce:	ea05 0907 	and.w	r9, r5, r7
1a0010d2:	f1c3 0a20 	rsb	sl, r3, #32
1a0010d6:	f1a3 0e20 	sub.w	lr, r3, #32
1a0010da:	fa28 f303 	lsr.w	r3, r8, r3
1a0010de:	fa09 fa0a 	lsl.w	sl, r9, sl
1a0010e2:	ea43 030a 	orr.w	r3, r3, sl
1a0010e6:	fa29 fe0e 	lsr.w	lr, r9, lr
1a0010ea:	ea43 030e 	orr.w	r3, r3, lr
1a0010ee:	f10d 0e18 	add.w	lr, sp, #24
1a0010f2:	fa5e f383 	uxtab	r3, lr, r3
1a0010f6:	f813 ec14 	ldrb.w	lr, [r3, #-20]
1a0010fa:	4b05      	ldr	r3, [pc, #20]	; (1a001110 <uintToAsciiHex+0x9c>)
1a0010fc:	f803 e000 	strb.w	lr, [r3, r0]
1a001100:	3101      	adds	r1, #1
1a001102:	b2c9      	uxtb	r1, r1
1a001104:	4291      	cmp	r1, r2
1a001106:	d3ce      	bcc.n	1a0010a6 <uintToAsciiHex+0x32>
1a001108:	4801      	ldr	r0, [pc, #4]	; (1a001110 <uintToAsciiHex+0x9c>)
1a00110a:	b006      	add	sp, #24
1a00110c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a001110:	10000180 	.word	0x10000180
1a001114:	1a002f40 	.word	0x1a002f40

1a001118 <gpioObtainPinConfig>:
1a001118:	b430      	push	{r4, r5}
1a00111a:	4d09      	ldr	r5, [pc, #36]	; (1a001140 <gpioObtainPinConfig+0x28>)
1a00111c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1a001120:	182c      	adds	r4, r5, r0
1a001122:	5c28      	ldrb	r0, [r5, r0]
1a001124:	7008      	strb	r0, [r1, #0]
1a001126:	7861      	ldrb	r1, [r4, #1]
1a001128:	7011      	strb	r1, [r2, #0]
1a00112a:	78a2      	ldrb	r2, [r4, #2]
1a00112c:	701a      	strb	r2, [r3, #0]
1a00112e:	78e2      	ldrb	r2, [r4, #3]
1a001130:	9b02      	ldr	r3, [sp, #8]
1a001132:	701a      	strb	r2, [r3, #0]
1a001134:	7922      	ldrb	r2, [r4, #4]
1a001136:	9b03      	ldr	r3, [sp, #12]
1a001138:	701a      	strb	r2, [r3, #0]
1a00113a:	bc30      	pop	{r4, r5}
1a00113c:	4770      	bx	lr
1a00113e:	bf00      	nop
1a001140:	1a002f54 	.word	0x1a002f54

1a001144 <gpioConfig>:
1a001144:	b570      	push	{r4, r5, r6, lr}
1a001146:	b084      	sub	sp, #16
1a001148:	460c      	mov	r4, r1
1a00114a:	2300      	movs	r3, #0
1a00114c:	f88d 300f 	strb.w	r3, [sp, #15]
1a001150:	f88d 300e 	strb.w	r3, [sp, #14]
1a001154:	f88d 300d 	strb.w	r3, [sp, #13]
1a001158:	f88d 300c 	strb.w	r3, [sp, #12]
1a00115c:	f88d 300b 	strb.w	r3, [sp, #11]
1a001160:	ab03      	add	r3, sp, #12
1a001162:	9300      	str	r3, [sp, #0]
1a001164:	f10d 030b 	add.w	r3, sp, #11
1a001168:	9301      	str	r3, [sp, #4]
1a00116a:	f10d 010f 	add.w	r1, sp, #15
1a00116e:	f10d 020e 	add.w	r2, sp, #14
1a001172:	f10d 030d 	add.w	r3, sp, #13
1a001176:	f7ff ffcf 	bl	1a001118 <gpioObtainPinConfig>
1a00117a:	2c05      	cmp	r4, #5
1a00117c:	f200 80a8 	bhi.w	1a0012d0 <gpioConfig+0x18c>
1a001180:	e8df f004 	tbb	[pc, r4]
1a001184:	46278408 	.word	0x46278408
1a001188:	0365      	.short	0x0365
1a00118a:	4853      	ldr	r0, [pc, #332]	; (1a0012d8 <gpioConfig+0x194>)
1a00118c:	f001 fb2c 	bl	1a0027e8 <Chip_GPIO_Init>
1a001190:	2001      	movs	r0, #1
1a001192:	e09e      	b.n	1a0012d2 <gpioConfig+0x18e>
1a001194:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001198:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a00119c:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a0011a0:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a0011a4:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a0011a8:	494c      	ldr	r1, [pc, #304]	; (1a0012dc <gpioConfig+0x198>)
1a0011aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a0011ae:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0011b2:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0011b6:	2001      	movs	r0, #1
1a0011b8:	fa00 f402 	lsl.w	r4, r0, r2
1a0011bc:	f501 21dc 	add.w	r1, r1, #450560	; 0x6e000
1a0011c0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0011c4:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
1a0011c8:	ea22 0204 	bic.w	r2, r2, r4
1a0011cc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a0011d0:	e07f      	b.n	1a0012d2 <gpioConfig+0x18e>
1a0011d2:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a0011d6:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a0011da:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a0011de:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
1a0011e2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a0011e6:	493d      	ldr	r1, [pc, #244]	; (1a0012dc <gpioConfig+0x198>)
1a0011e8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a0011ec:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0011f0:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0011f4:	2001      	movs	r0, #1
1a0011f6:	fa00 f402 	lsl.w	r4, r0, r2
1a0011fa:	f501 21dc 	add.w	r1, r1, #450560	; 0x6e000
1a0011fe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a001202:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
1a001206:	ea22 0204 	bic.w	r2, r2, r4
1a00120a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a00120e:	e060      	b.n	1a0012d2 <gpioConfig+0x18e>
1a001210:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001214:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001218:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a00121c:	f042 02d8 	orr.w	r2, r2, #216	; 0xd8
1a001220:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001224:	492d      	ldr	r1, [pc, #180]	; (1a0012dc <gpioConfig+0x198>)
1a001226:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a00122a:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a00122e:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001232:	2001      	movs	r0, #1
1a001234:	fa00 f402 	lsl.w	r4, r0, r2
1a001238:	f501 21dc 	add.w	r1, r1, #450560	; 0x6e000
1a00123c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a001240:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
1a001244:	ea22 0204 	bic.w	r2, r2, r4
1a001248:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a00124c:	e041      	b.n	1a0012d2 <gpioConfig+0x18e>
1a00124e:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001252:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001256:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a00125a:	f042 02c8 	orr.w	r2, r2, #200	; 0xc8
1a00125e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001262:	491e      	ldr	r1, [pc, #120]	; (1a0012dc <gpioConfig+0x198>)
1a001264:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a001268:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a00126c:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001270:	2001      	movs	r0, #1
1a001272:	fa00 f402 	lsl.w	r4, r0, r2
1a001276:	f501 21dc 	add.w	r1, r1, #450560	; 0x6e000
1a00127a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a00127e:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
1a001282:	ea22 0204 	bic.w	r2, r2, r4
1a001286:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a00128a:	e022      	b.n	1a0012d2 <gpioConfig+0x18e>
1a00128c:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001290:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001294:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a001298:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a00129c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a0012a0:	490e      	ldr	r1, [pc, #56]	; (1a0012dc <gpioConfig+0x198>)
1a0012a2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a0012a6:	f89d 400c 	ldrb.w	r4, [sp, #12]
1a0012aa:	f89d 300b 	ldrb.w	r3, [sp, #11]
1a0012ae:	b25a      	sxtb	r2, r3
1a0012b0:	2001      	movs	r0, #1
1a0012b2:	fa00 f602 	lsl.w	r6, r0, r2
1a0012b6:	4a08      	ldr	r2, [pc, #32]	; (1a0012d8 <gpioConfig+0x194>)
1a0012b8:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a0012bc:	f852 1025 	ldr.w	r1, [r2, r5, lsl #2]
1a0012c0:	4331      	orrs	r1, r6
1a0012c2:	f842 1025 	str.w	r1, [r2, r5, lsl #2]
1a0012c6:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a0012ca:	2100      	movs	r1, #0
1a0012cc:	54d1      	strb	r1, [r2, r3]
1a0012ce:	e000      	b.n	1a0012d2 <gpioConfig+0x18e>
1a0012d0:	2000      	movs	r0, #0
1a0012d2:	b004      	add	sp, #16
1a0012d4:	bd70      	pop	{r4, r5, r6, pc}
1a0012d6:	bf00      	nop
1a0012d8:	400f4000 	.word	0x400f4000
1a0012dc:	40086000 	.word	0x40086000

1a0012e0 <gpioWrite>:
1a0012e0:	b510      	push	{r4, lr}
1a0012e2:	b084      	sub	sp, #16
1a0012e4:	460c      	mov	r4, r1
1a0012e6:	2300      	movs	r3, #0
1a0012e8:	f88d 300f 	strb.w	r3, [sp, #15]
1a0012ec:	f88d 300e 	strb.w	r3, [sp, #14]
1a0012f0:	f88d 300d 	strb.w	r3, [sp, #13]
1a0012f4:	f88d 300c 	strb.w	r3, [sp, #12]
1a0012f8:	f88d 300b 	strb.w	r3, [sp, #11]
1a0012fc:	ab03      	add	r3, sp, #12
1a0012fe:	9300      	str	r3, [sp, #0]
1a001300:	f10d 030b 	add.w	r3, sp, #11
1a001304:	9301      	str	r3, [sp, #4]
1a001306:	f10d 010f 	add.w	r1, sp, #15
1a00130a:	f10d 020e 	add.w	r2, sp, #14
1a00130e:	f10d 030d 	add.w	r3, sp, #13
1a001312:	f7ff ff01 	bl	1a001118 <gpioObtainPinConfig>
1a001316:	f89d 200c 	ldrb.w	r2, [sp, #12]
1a00131a:	f89d 300b 	ldrb.w	r3, [sp, #11]
1a00131e:	3400      	adds	r4, #0
1a001320:	bf18      	it	ne
1a001322:	2401      	movne	r4, #1
1a001324:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1a001328:	4a02      	ldr	r2, [pc, #8]	; (1a001334 <gpioWrite+0x54>)
1a00132a:	54d4      	strb	r4, [r2, r3]
1a00132c:	2001      	movs	r0, #1
1a00132e:	b004      	add	sp, #16
1a001330:	bd10      	pop	{r4, pc}
1a001332:	bf00      	nop
1a001334:	400f4000 	.word	0x400f4000

1a001338 <gpioRead>:
1a001338:	b500      	push	{lr}
1a00133a:	b085      	sub	sp, #20
1a00133c:	2300      	movs	r3, #0
1a00133e:	f88d 300f 	strb.w	r3, [sp, #15]
1a001342:	f88d 300e 	strb.w	r3, [sp, #14]
1a001346:	f88d 300d 	strb.w	r3, [sp, #13]
1a00134a:	f88d 300c 	strb.w	r3, [sp, #12]
1a00134e:	f88d 300b 	strb.w	r3, [sp, #11]
1a001352:	ab03      	add	r3, sp, #12
1a001354:	9300      	str	r3, [sp, #0]
1a001356:	f10d 030b 	add.w	r3, sp, #11
1a00135a:	9301      	str	r3, [sp, #4]
1a00135c:	f10d 010f 	add.w	r1, sp, #15
1a001360:	f10d 020e 	add.w	r2, sp, #14
1a001364:	f10d 030d 	add.w	r3, sp, #13
1a001368:	f7ff fed6 	bl	1a001118 <gpioObtainPinConfig>
1a00136c:	f99d 200c 	ldrsb.w	r2, [sp, #12]
1a001370:	f89d 300b 	ldrb.w	r3, [sp, #11]
1a001374:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1a001378:	4a04      	ldr	r2, [pc, #16]	; (1a00138c <gpioRead+0x54>)
1a00137a:	5cd3      	ldrb	r3, [r2, r3]
1a00137c:	f013 0fff 	tst.w	r3, #255	; 0xff
1a001380:	bf14      	ite	ne
1a001382:	2001      	movne	r0, #1
1a001384:	2000      	moveq	r0, #0
1a001386:	b005      	add	sp, #20
1a001388:	f85d fb04 	ldr.w	pc, [sp], #4
1a00138c:	400f4000 	.word	0x400f4000

1a001390 <gpioToggle>:
1a001390:	b510      	push	{r4, lr}
1a001392:	4604      	mov	r4, r0
1a001394:	f7ff ffd0 	bl	1a001338 <gpioRead>
1a001398:	fab0 f180 	clz	r1, r0
1a00139c:	0949      	lsrs	r1, r1, #5
1a00139e:	4620      	mov	r0, r4
1a0013a0:	f7ff ff9e 	bl	1a0012e0 <gpioWrite>
1a0013a4:	bd10      	pop	{r4, pc}
1a0013a6:	bf00      	nop

1a0013a8 <Board_LED_Init>:
1a0013a8:	b470      	push	{r4, r5, r6}
1a0013aa:	2200      	movs	r2, #0
1a0013ac:	e014      	b.n	1a0013d8 <Board_LED_Init+0x30>
1a0013ae:	4b0c      	ldr	r3, [pc, #48]	; (1a0013e0 <Board_LED_Init+0x38>)
1a0013b0:	f813 4012 	ldrb.w	r4, [r3, r2, lsl #1]
1a0013b4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1a0013b8:	7859      	ldrb	r1, [r3, #1]
1a0013ba:	480a      	ldr	r0, [pc, #40]	; (1a0013e4 <Board_LED_Init+0x3c>)
1a0013bc:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a0013c0:	f850 6025 	ldr.w	r6, [r0, r5, lsl #2]
1a0013c4:	2301      	movs	r3, #1
1a0013c6:	408b      	lsls	r3, r1
1a0013c8:	4333      	orrs	r3, r6
1a0013ca:	f840 3025 	str.w	r3, [r0, r5, lsl #2]
1a0013ce:	eb01 1144 	add.w	r1, r1, r4, lsl #5
1a0013d2:	2300      	movs	r3, #0
1a0013d4:	5443      	strb	r3, [r0, r1]
1a0013d6:	3201      	adds	r2, #1
1a0013d8:	2a05      	cmp	r2, #5
1a0013da:	d9e8      	bls.n	1a0013ae <Board_LED_Init+0x6>
1a0013dc:	bc70      	pop	{r4, r5, r6}
1a0013de:	4770      	bx	lr
1a0013e0:	1a00308c 	.word	0x1a00308c
1a0013e4:	400f4000 	.word	0x400f4000

1a0013e8 <Board_UART_Init>:
1a0013e8:	4b03      	ldr	r3, [pc, #12]	; (1a0013f8 <Board_UART_Init+0x10>)
1a0013ea:	2212      	movs	r2, #18
1a0013ec:	f8c3 2310 	str.w	r2, [r3, #784]	; 0x310
1a0013f0:	22d1      	movs	r2, #209	; 0xd1
1a0013f2:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
1a0013f6:	4770      	bx	lr
1a0013f8:	40086000 	.word	0x40086000

1a0013fc <Board_Debug_Init>:
1a0013fc:	b510      	push	{r4, lr}
1a0013fe:	4c08      	ldr	r4, [pc, #32]	; (1a001420 <Board_Debug_Init+0x24>)
1a001400:	4620      	mov	r0, r4
1a001402:	f7ff fff1 	bl	1a0013e8 <Board_UART_Init>
1a001406:	4620      	mov	r0, r4
1a001408:	f000 f974 	bl	1a0016f4 <Chip_UART_Init>
1a00140c:	4620      	mov	r0, r4
1a00140e:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a001412:	f000 fa8d 	bl	1a001930 <Chip_UART_SetBaudFDR>
1a001416:	2303      	movs	r3, #3
1a001418:	60e3      	str	r3, [r4, #12]
1a00141a:	2301      	movs	r3, #1
1a00141c:	65e3      	str	r3, [r4, #92]	; 0x5c
1a00141e:	bd10      	pop	{r4, pc}
1a001420:	400c1000 	.word	0x400c1000

1a001424 <Board_UARTPutChar>:
1a001424:	4b03      	ldr	r3, [pc, #12]	; (1a001434 <Board_UARTPutChar+0x10>)
1a001426:	695b      	ldr	r3, [r3, #20]
1a001428:	f013 0f20 	tst.w	r3, #32
1a00142c:	d0fa      	beq.n	1a001424 <Board_UARTPutChar>
1a00142e:	4b01      	ldr	r3, [pc, #4]	; (1a001434 <Board_UARTPutChar+0x10>)
1a001430:	6018      	str	r0, [r3, #0]
1a001432:	4770      	bx	lr
1a001434:	400c1000 	.word	0x400c1000

1a001438 <Board_UARTGetChar>:
1a001438:	4b05      	ldr	r3, [pc, #20]	; (1a001450 <Board_UARTGetChar+0x18>)
1a00143a:	695b      	ldr	r3, [r3, #20]
1a00143c:	f013 0f01 	tst.w	r3, #1
1a001440:	d003      	beq.n	1a00144a <Board_UARTGetChar+0x12>
1a001442:	4b03      	ldr	r3, [pc, #12]	; (1a001450 <Board_UARTGetChar+0x18>)
1a001444:	6818      	ldr	r0, [r3, #0]
1a001446:	b2c0      	uxtb	r0, r0
1a001448:	4770      	bx	lr
1a00144a:	f04f 30ff 	mov.w	r0, #4294967295
1a00144e:	4770      	bx	lr
1a001450:	400c1000 	.word	0x400c1000

1a001454 <Board_UARTPutSTR>:
1a001454:	b510      	push	{r4, lr}
1a001456:	4604      	mov	r4, r0
1a001458:	e002      	b.n	1a001460 <Board_UARTPutSTR+0xc>
1a00145a:	3401      	adds	r4, #1
1a00145c:	f7ff ffe2 	bl	1a001424 <Board_UARTPutChar>
1a001460:	7820      	ldrb	r0, [r4, #0]
1a001462:	2800      	cmp	r0, #0
1a001464:	d1f9      	bne.n	1a00145a <Board_UARTPutSTR+0x6>
1a001466:	bd10      	pop	{r4, pc}

1a001468 <Board_LED_Set>:
1a001468:	2805      	cmp	r0, #5
1a00146a:	d80b      	bhi.n	1a001484 <Board_LED_Set+0x1c>
1a00146c:	4b06      	ldr	r3, [pc, #24]	; (1a001488 <Board_LED_Set+0x20>)
1a00146e:	f813 2010 	ldrb.w	r2, [r3, r0, lsl #1]
1a001472:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a001476:	7843      	ldrb	r3, [r0, #1]
1a001478:	f081 0101 	eor.w	r1, r1, #1
1a00147c:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1a001480:	4a02      	ldr	r2, [pc, #8]	; (1a00148c <Board_LED_Set+0x24>)
1a001482:	54d1      	strb	r1, [r2, r3]
1a001484:	4770      	bx	lr
1a001486:	bf00      	nop
1a001488:	1a00308c 	.word	0x1a00308c
1a00148c:	400f4000 	.word	0x400f4000

1a001490 <Board_LED_Test>:
1a001490:	2805      	cmp	r0, #5
1a001492:	d80f      	bhi.n	1a0014b4 <Board_LED_Test+0x24>
1a001494:	4b08      	ldr	r3, [pc, #32]	; (1a0014b8 <Board_LED_Test+0x28>)
1a001496:	f813 2010 	ldrb.w	r2, [r3, r0, lsl #1]
1a00149a:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a00149e:	7843      	ldrb	r3, [r0, #1]
1a0014a0:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1a0014a4:	4a05      	ldr	r2, [pc, #20]	; (1a0014bc <Board_LED_Test+0x2c>)
1a0014a6:	5cd3      	ldrb	r3, [r2, r3]
1a0014a8:	f013 0fff 	tst.w	r3, #255	; 0xff
1a0014ac:	bf0c      	ite	eq
1a0014ae:	2001      	moveq	r0, #1
1a0014b0:	2000      	movne	r0, #0
1a0014b2:	4770      	bx	lr
1a0014b4:	2000      	movs	r0, #0
1a0014b6:	4770      	bx	lr
1a0014b8:	1a00308c 	.word	0x1a00308c
1a0014bc:	400f4000 	.word	0x400f4000

1a0014c0 <Board_LED_Toggle>:
1a0014c0:	b510      	push	{r4, lr}
1a0014c2:	4604      	mov	r4, r0
1a0014c4:	f7ff ffe4 	bl	1a001490 <Board_LED_Test>
1a0014c8:	f080 0101 	eor.w	r1, r0, #1
1a0014cc:	4620      	mov	r0, r4
1a0014ce:	b2c9      	uxtb	r1, r1
1a0014d0:	f7ff ffca 	bl	1a001468 <Board_LED_Set>
1a0014d4:	bd10      	pop	{r4, pc}
1a0014d6:	bf00      	nop

1a0014d8 <Board_ENET_GetMacADDR>:
1a0014d8:	b082      	sub	sp, #8
1a0014da:	4602      	mov	r2, r0
1a0014dc:	4b06      	ldr	r3, [pc, #24]	; (1a0014f8 <Board_ENET_GetMacADDR+0x20>)
1a0014de:	f853 0f0c 	ldr.w	r0, [r3, #12]!
1a0014e2:	9000      	str	r0, [sp, #0]
1a0014e4:	889b      	ldrh	r3, [r3, #4]
1a0014e6:	f8ad 3004 	strh.w	r3, [sp, #4]
1a0014ea:	9800      	ldr	r0, [sp, #0]
1a0014ec:	6010      	str	r0, [r2, #0]
1a0014ee:	f8bd 3004 	ldrh.w	r3, [sp, #4]
1a0014f2:	8093      	strh	r3, [r2, #4]
1a0014f4:	b002      	add	sp, #8
1a0014f6:	4770      	bx	lr
1a0014f8:	1a00308c 	.word	0x1a00308c

1a0014fc <Board_Init>:
1a0014fc:	b508      	push	{r3, lr}
1a0014fe:	f7ff ff7d 	bl	1a0013fc <Board_Debug_Init>
1a001502:	4806      	ldr	r0, [pc, #24]	; (1a00151c <Board_Init+0x20>)
1a001504:	f001 f970 	bl	1a0027e8 <Chip_GPIO_Init>
1a001508:	f7ff ff4e 	bl	1a0013a8 <Board_LED_Init>
1a00150c:	4a04      	ldr	r2, [pc, #16]	; (1a001520 <Board_Init+0x24>)
1a00150e:	f8d2 312c 	ldr.w	r3, [r2, #300]	; 0x12c
1a001512:	f043 0304 	orr.w	r3, r3, #4
1a001516:	f8c2 312c 	str.w	r3, [r2, #300]	; 0x12c
1a00151a:	bd08      	pop	{r3, pc}
1a00151c:	400f4000 	.word	0x400f4000
1a001520:	40043000 	.word	0x40043000

1a001524 <Board_I2C_Init>:
1a001524:	2801      	cmp	r0, #1
1a001526:	d106      	bne.n	1a001536 <Board_I2C_Init+0x12>
1a001528:	4b06      	ldr	r3, [pc, #24]	; (1a001544 <Board_I2C_Init+0x20>)
1a00152a:	22c1      	movs	r2, #193	; 0xc1
1a00152c:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
1a001530:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
1a001534:	4770      	bx	lr
1a001536:	f640 0208 	movw	r2, #2056	; 0x808
1a00153a:	4b02      	ldr	r3, [pc, #8]	; (1a001544 <Board_I2C_Init+0x20>)
1a00153c:	f8c3 2c84 	str.w	r2, [r3, #3204]	; 0xc84
1a001540:	4770      	bx	lr
1a001542:	bf00      	nop
1a001544:	40086000 	.word	0x40086000

1a001548 <Board_SDMMC_Init>:
1a001548:	4b09      	ldr	r3, [pc, #36]	; (1a001570 <Board_SDMMC_Init+0x28>)
1a00154a:	22e7      	movs	r2, #231	; 0xe7
1a00154c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
1a001550:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
1a001554:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
1a001558:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
1a00155c:	2154      	movs	r1, #84	; 0x54
1a00155e:	f8c3 1c08 	str.w	r1, [r3, #3080]	; 0xc08
1a001562:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
1a001566:	2247      	movs	r2, #71	; 0x47
1a001568:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
1a00156c:	4770      	bx	lr
1a00156e:	bf00      	nop
1a001570:	40086000 	.word	0x40086000

1a001574 <Board_SSP_Init>:
1a001574:	4b08      	ldr	r3, [pc, #32]	; (1a001598 <Board_SSP_Init+0x24>)
1a001576:	4298      	cmp	r0, r3
1a001578:	d10c      	bne.n	1a001594 <Board_SSP_Init+0x20>
1a00157a:	f5a3 337c 	sub.w	r3, r3, #258048	; 0x3f000
1a00157e:	22f5      	movs	r2, #245	; 0xf5
1a001580:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
1a001584:	22f0      	movs	r2, #240	; 0xf0
1a001586:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
1a00158a:	22d5      	movs	r2, #213	; 0xd5
1a00158c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
1a001590:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
1a001594:	4770      	bx	lr
1a001596:	bf00      	nop
1a001598:	400c5000 	.word	0x400c5000

1a00159c <Board_DAC_Init>:
1a00159c:	4a03      	ldr	r2, [pc, #12]	; (1a0015ac <Board_DAC_Init+0x10>)
1a00159e:	f8d2 3c90 	ldr.w	r3, [r2, #3216]	; 0xc90
1a0015a2:	f043 0301 	orr.w	r3, r3, #1
1a0015a6:	f8c2 3c90 	str.w	r3, [r2, #3216]	; 0xc90
1a0015aa:	4770      	bx	lr
1a0015ac:	40086000 	.word	0x40086000

1a0015b0 <SystemInit>:
1a0015b0:	b508      	push	{r3, lr}
1a0015b2:	4b04      	ldr	r3, [pc, #16]	; (1a0015c4 <SystemInit+0x14>)
1a0015b4:	4a04      	ldr	r2, [pc, #16]	; (1a0015c8 <SystemInit+0x18>)
1a0015b6:	601a      	str	r2, [r3, #0]
1a0015b8:	f001 f8ea 	bl	1a002790 <fpuInit>
1a0015bc:	f000 f85a 	bl	1a001674 <Board_SystemInit>
1a0015c0:	bd08      	pop	{r3, pc}
1a0015c2:	bf00      	nop
1a0015c4:	e000ed08 	.word	0xe000ed08
1a0015c8:	1a000000 	.word	0x1a000000

1a0015cc <Board_SetupMuxing>:
1a0015cc:	b410      	push	{r4}
1a0015ce:	2300      	movs	r3, #0
1a0015d0:	e00c      	b.n	1a0015ec <Board_SetupMuxing+0x20>
1a0015d2:	4a09      	ldr	r2, [pc, #36]	; (1a0015f8 <Board_SetupMuxing+0x2c>)
1a0015d4:	eb02 0183 	add.w	r1, r2, r3, lsl #2
1a0015d8:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
1a0015dc:	784a      	ldrb	r2, [r1, #1]
1a0015de:	8848      	ldrh	r0, [r1, #2]
1a0015e0:	eb02 1244 	add.w	r2, r2, r4, lsl #5
1a0015e4:	4905      	ldr	r1, [pc, #20]	; (1a0015fc <Board_SetupMuxing+0x30>)
1a0015e6:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
1a0015ea:	3301      	adds	r3, #1
1a0015ec:	2b17      	cmp	r3, #23
1a0015ee:	d9f0      	bls.n	1a0015d2 <Board_SetupMuxing+0x6>
1a0015f0:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0015f4:	4770      	bx	lr
1a0015f6:	bf00      	nop
1a0015f8:	1a0030a8 	.word	0x1a0030a8
1a0015fc:	40086000 	.word	0x40086000

1a001600 <Board_SetupClocking>:
1a001600:	b510      	push	{r4, lr}
1a001602:	4a19      	ldr	r2, [pc, #100]	; (1a001668 <Board_SetupClocking+0x68>)
1a001604:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
1a001608:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a00160c:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a001610:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
1a001614:	f8d2 3124 	ldr.w	r3, [r2, #292]	; 0x124
1a001618:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a00161c:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a001620:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
1a001624:	2006      	movs	r0, #6
1a001626:	4911      	ldr	r1, [pc, #68]	; (1a00166c <Board_SetupClocking+0x6c>)
1a001628:	2201      	movs	r2, #1
1a00162a:	f000 ffaf 	bl	1a00258c <Chip_SetupCoreClock>
1a00162e:	2400      	movs	r4, #0
1a001630:	e00d      	b.n	1a00164e <Board_SetupClocking+0x4e>
1a001632:	4b0f      	ldr	r3, [pc, #60]	; (1a001670 <Board_SetupClocking+0x70>)
1a001634:	eb03 0384 	add.w	r3, r3, r4, lsl #2
1a001638:	f893 0060 	ldrb.w	r0, [r3, #96]	; 0x60
1a00163c:	f893 1061 	ldrb.w	r1, [r3, #97]	; 0x61
1a001640:	f893 2062 	ldrb.w	r2, [r3, #98]	; 0x62
1a001644:	f893 3063 	ldrb.w	r3, [r3, #99]	; 0x63
1a001648:	f000 fe3a 	bl	1a0022c0 <Chip_Clock_SetBaseClock>
1a00164c:	3401      	adds	r4, #1
1a00164e:	2c02      	cmp	r4, #2
1a001650:	d9ef      	bls.n	1a001632 <Board_SetupClocking+0x32>
1a001652:	4b05      	ldr	r3, [pc, #20]	; (1a001668 <Board_SetupClocking+0x68>)
1a001654:	685a      	ldr	r2, [r3, #4]
1a001656:	f022 020c 	bic.w	r2, r2, #12
1a00165a:	605a      	str	r2, [r3, #4]
1a00165c:	685a      	ldr	r2, [r3, #4]
1a00165e:	f042 0203 	orr.w	r2, r2, #3
1a001662:	605a      	str	r2, [r3, #4]
1a001664:	bd10      	pop	{r4, pc}
1a001666:	bf00      	nop
1a001668:	40043000 	.word	0x40043000
1a00166c:	0c28cb00 	.word	0x0c28cb00
1a001670:	1a0030a8 	.word	0x1a0030a8

1a001674 <Board_SystemInit>:
1a001674:	b508      	push	{r3, lr}
1a001676:	f7ff ffa9 	bl	1a0015cc <Board_SetupMuxing>
1a00167a:	f7ff ffc1 	bl	1a001600 <Board_SetupClocking>
1a00167e:	bd08      	pop	{r3, pc}

1a001680 <Chip_UART_GetIndex>:
1a001680:	4b09      	ldr	r3, [pc, #36]	; (1a0016a8 <Chip_UART_GetIndex+0x28>)
1a001682:	4298      	cmp	r0, r3
1a001684:	d009      	beq.n	1a00169a <Chip_UART_GetIndex+0x1a>
1a001686:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a00168a:	4298      	cmp	r0, r3
1a00168c:	d007      	beq.n	1a00169e <Chip_UART_GetIndex+0x1e>
1a00168e:	f5a3 2380 	sub.w	r3, r3, #262144	; 0x40000
1a001692:	4298      	cmp	r0, r3
1a001694:	d005      	beq.n	1a0016a2 <Chip_UART_GetIndex+0x22>
1a001696:	2000      	movs	r0, #0
1a001698:	4770      	bx	lr
1a00169a:	2002      	movs	r0, #2
1a00169c:	4770      	bx	lr
1a00169e:	2003      	movs	r0, #3
1a0016a0:	4770      	bx	lr
1a0016a2:	2001      	movs	r0, #1
1a0016a4:	4770      	bx	lr
1a0016a6:	bf00      	nop
1a0016a8:	400c1000 	.word	0x400c1000

1a0016ac <Chip_UART_ABIntHandler>:
1a0016ac:	6883      	ldr	r3, [r0, #8]
1a0016ae:	f413 7f80 	tst.w	r3, #256	; 0x100
1a0016b2:	d00f      	beq.n	1a0016d4 <Chip_UART_ABIntHandler+0x28>
1a0016b4:	6a03      	ldr	r3, [r0, #32]
1a0016b6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
1a0016ba:	6203      	str	r3, [r0, #32]
1a0016bc:	6843      	ldr	r3, [r0, #4]
1a0016be:	f423 7380 	bic.w	r3, r3, #256	; 0x100
1a0016c2:	6043      	str	r3, [r0, #4]
1a0016c4:	4b0a      	ldr	r3, [pc, #40]	; (1a0016f0 <Chip_UART_ABIntHandler+0x44>)
1a0016c6:	781b      	ldrb	r3, [r3, #0]
1a0016c8:	f013 0fff 	tst.w	r3, #255	; 0xff
1a0016cc:	d102      	bne.n	1a0016d4 <Chip_UART_ABIntHandler+0x28>
1a0016ce:	2201      	movs	r2, #1
1a0016d0:	4b07      	ldr	r3, [pc, #28]	; (1a0016f0 <Chip_UART_ABIntHandler+0x44>)
1a0016d2:	701a      	strb	r2, [r3, #0]
1a0016d4:	6883      	ldr	r3, [r0, #8]
1a0016d6:	f413 7f00 	tst.w	r3, #512	; 0x200
1a0016da:	d007      	beq.n	1a0016ec <Chip_UART_ABIntHandler+0x40>
1a0016dc:	6a03      	ldr	r3, [r0, #32]
1a0016de:	f443 7300 	orr.w	r3, r3, #512	; 0x200
1a0016e2:	6203      	str	r3, [r0, #32]
1a0016e4:	6843      	ldr	r3, [r0, #4]
1a0016e6:	f423 7300 	bic.w	r3, r3, #512	; 0x200
1a0016ea:	6043      	str	r3, [r0, #4]
1a0016ec:	4770      	bx	lr
1a0016ee:	bf00      	nop
1a0016f0:	10000194 	.word	0x10000194

1a0016f4 <Chip_UART_Init>:
1a0016f4:	b510      	push	{r4, lr}
1a0016f6:	b082      	sub	sp, #8
1a0016f8:	4604      	mov	r4, r0
1a0016fa:	f7ff ffc1 	bl	1a001680 <Chip_UART_GetIndex>
1a0016fe:	4b0f      	ldr	r3, [pc, #60]	; (1a00173c <Chip_UART_Init+0x48>)
1a001700:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a001704:	2101      	movs	r1, #1
1a001706:	460a      	mov	r2, r1
1a001708:	460b      	mov	r3, r1
1a00170a:	f000 fe55 	bl	1a0023b8 <Chip_Clock_EnableOpts>
1a00170e:	2307      	movs	r3, #7
1a001710:	60a3      	str	r3, [r4, #8]
1a001712:	2300      	movs	r3, #0
1a001714:	65e3      	str	r3, [r4, #92]	; 0x5c
1a001716:	6063      	str	r3, [r4, #4]
1a001718:	60e3      	str	r3, [r4, #12]
1a00171a:	6223      	str	r3, [r4, #32]
1a00171c:	64e3      	str	r3, [r4, #76]	; 0x4c
1a00171e:	6563      	str	r3, [r4, #84]	; 0x54
1a001720:	6523      	str	r3, [r4, #80]	; 0x50
1a001722:	4b07      	ldr	r3, [pc, #28]	; (1a001740 <Chip_UART_Init+0x4c>)
1a001724:	429c      	cmp	r4, r3
1a001726:	d103      	bne.n	1a001730 <Chip_UART_Init+0x3c>
1a001728:	2300      	movs	r3, #0
1a00172a:	6123      	str	r3, [r4, #16]
1a00172c:	69a3      	ldr	r3, [r4, #24]
1a00172e:	9301      	str	r3, [sp, #4]
1a001730:	2303      	movs	r3, #3
1a001732:	60e3      	str	r3, [r4, #12]
1a001734:	2310      	movs	r3, #16
1a001736:	62a3      	str	r3, [r4, #40]	; 0x28
1a001738:	b002      	add	sp, #8
1a00173a:	bd10      	pop	{r4, pc}
1a00173c:	1a003114 	.word	0x1a003114
1a001740:	40082000 	.word	0x40082000

1a001744 <Chip_UART_DeInit>:
1a001744:	b508      	push	{r3, lr}
1a001746:	2200      	movs	r2, #0
1a001748:	65c2      	str	r2, [r0, #92]	; 0x5c
1a00174a:	f7ff ff99 	bl	1a001680 <Chip_UART_GetIndex>
1a00174e:	4b03      	ldr	r3, [pc, #12]	; (1a00175c <Chip_UART_DeInit+0x18>)
1a001750:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a001754:	f000 fe74 	bl	1a002440 <Chip_Clock_Disable>
1a001758:	bd08      	pop	{r3, pc}
1a00175a:	bf00      	nop
1a00175c:	1a003114 	.word	0x1a003114

1a001760 <Chip_UART_Send>:
1a001760:	b410      	push	{r4}
1a001762:	2300      	movs	r3, #0
1a001764:	e003      	b.n	1a00176e <Chip_UART_Send+0xe>
1a001766:	f811 4b01 	ldrb.w	r4, [r1], #1
1a00176a:	6004      	str	r4, [r0, #0]
1a00176c:	3301      	adds	r3, #1
1a00176e:	4293      	cmp	r3, r2
1a001770:	da03      	bge.n	1a00177a <Chip_UART_Send+0x1a>
1a001772:	6944      	ldr	r4, [r0, #20]
1a001774:	f014 0f20 	tst.w	r4, #32
1a001778:	d1f5      	bne.n	1a001766 <Chip_UART_Send+0x6>
1a00177a:	4618      	mov	r0, r3
1a00177c:	f85d 4b04 	ldr.w	r4, [sp], #4
1a001780:	4770      	bx	lr
1a001782:	bf00      	nop

1a001784 <Chip_UART_CheckBusy>:
1a001784:	6943      	ldr	r3, [r0, #20]
1a001786:	f013 0f40 	tst.w	r3, #64	; 0x40
1a00178a:	d001      	beq.n	1a001790 <Chip_UART_CheckBusy+0xc>
1a00178c:	2000      	movs	r0, #0
1a00178e:	4770      	bx	lr
1a001790:	2001      	movs	r0, #1
1a001792:	4770      	bx	lr

1a001794 <Chip_UART_SendBlocking>:
1a001794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a001796:	4607      	mov	r7, r0
1a001798:	460d      	mov	r5, r1
1a00179a:	4614      	mov	r4, r2
1a00179c:	2600      	movs	r6, #0
1a00179e:	e007      	b.n	1a0017b0 <Chip_UART_SendBlocking+0x1c>
1a0017a0:	4638      	mov	r0, r7
1a0017a2:	4629      	mov	r1, r5
1a0017a4:	4622      	mov	r2, r4
1a0017a6:	f7ff ffdb 	bl	1a001760 <Chip_UART_Send>
1a0017aa:	1a24      	subs	r4, r4, r0
1a0017ac:	4406      	add	r6, r0
1a0017ae:	4405      	add	r5, r0
1a0017b0:	2c00      	cmp	r4, #0
1a0017b2:	dcf5      	bgt.n	1a0017a0 <Chip_UART_SendBlocking+0xc>
1a0017b4:	4630      	mov	r0, r6
1a0017b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1a0017b8 <Chip_UART_Read>:
1a0017b8:	b410      	push	{r4}
1a0017ba:	2300      	movs	r3, #0
1a0017bc:	e003      	b.n	1a0017c6 <Chip_UART_Read+0xe>
1a0017be:	6804      	ldr	r4, [r0, #0]
1a0017c0:	f801 4b01 	strb.w	r4, [r1], #1
1a0017c4:	3301      	adds	r3, #1
1a0017c6:	4293      	cmp	r3, r2
1a0017c8:	da03      	bge.n	1a0017d2 <Chip_UART_Read+0x1a>
1a0017ca:	6944      	ldr	r4, [r0, #20]
1a0017cc:	f014 0f01 	tst.w	r4, #1
1a0017d0:	d1f5      	bne.n	1a0017be <Chip_UART_Read+0x6>
1a0017d2:	4618      	mov	r0, r3
1a0017d4:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0017d8:	4770      	bx	lr
1a0017da:	bf00      	nop

1a0017dc <Chip_UART_ReadBlocking>:
1a0017dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a0017de:	4607      	mov	r7, r0
1a0017e0:	460d      	mov	r5, r1
1a0017e2:	4614      	mov	r4, r2
1a0017e4:	2600      	movs	r6, #0
1a0017e6:	e007      	b.n	1a0017f8 <Chip_UART_ReadBlocking+0x1c>
1a0017e8:	4638      	mov	r0, r7
1a0017ea:	4629      	mov	r1, r5
1a0017ec:	4622      	mov	r2, r4
1a0017ee:	f7ff ffe3 	bl	1a0017b8 <Chip_UART_Read>
1a0017f2:	1a24      	subs	r4, r4, r0
1a0017f4:	4406      	add	r6, r0
1a0017f6:	4405      	add	r5, r0
1a0017f8:	2c00      	cmp	r4, #0
1a0017fa:	dcf5      	bgt.n	1a0017e8 <Chip_UART_ReadBlocking+0xc>
1a0017fc:	4630      	mov	r0, r6
1a0017fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1a001800 <Chip_UART_SetBaud>:
1a001800:	b538      	push	{r3, r4, r5, lr}
1a001802:	4605      	mov	r5, r0
1a001804:	460c      	mov	r4, r1
1a001806:	f7ff ff3b 	bl	1a001680 <Chip_UART_GetIndex>
1a00180a:	4b0d      	ldr	r3, [pc, #52]	; (1a001840 <Chip_UART_SetBaud+0x40>)
1a00180c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a001810:	8900      	ldrh	r0, [r0, #8]
1a001812:	f000 fe43 	bl	1a00249c <Chip_Clock_GetRate>
1a001816:	0124      	lsls	r4, r4, #4
1a001818:	fbb0 f3f4 	udiv	r3, r0, r4
1a00181c:	68ea      	ldr	r2, [r5, #12]
1a00181e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
1a001822:	60ea      	str	r2, [r5, #12]
1a001824:	b2da      	uxtb	r2, r3
1a001826:	602a      	str	r2, [r5, #0]
1a001828:	f3c3 2207 	ubfx	r2, r3, #8, #8
1a00182c:	606a      	str	r2, [r5, #4]
1a00182e:	68ea      	ldr	r2, [r5, #12]
1a001830:	f022 0280 	bic.w	r2, r2, #128	; 0x80
1a001834:	60ea      	str	r2, [r5, #12]
1a001836:	fbb0 f0f3 	udiv	r0, r0, r3
1a00183a:	0900      	lsrs	r0, r0, #4
1a00183c:	bd38      	pop	{r3, r4, r5, pc}
1a00183e:	bf00      	nop
1a001840:	1a003114 	.word	0x1a003114

1a001844 <Chip_UART_RXIntHandlerRB>:
1a001844:	b530      	push	{r4, r5, lr}
1a001846:	b083      	sub	sp, #12
1a001848:	4604      	mov	r4, r0
1a00184a:	460d      	mov	r5, r1
1a00184c:	e006      	b.n	1a00185c <Chip_UART_RXIntHandlerRB+0x18>
1a00184e:	6823      	ldr	r3, [r4, #0]
1a001850:	a902      	add	r1, sp, #8
1a001852:	f801 3d01 	strb.w	r3, [r1, #-1]!
1a001856:	4628      	mov	r0, r5
1a001858:	f000 f908 	bl	1a001a6c <RingBuffer_Insert>
1a00185c:	6963      	ldr	r3, [r4, #20]
1a00185e:	f013 0f01 	tst.w	r3, #1
1a001862:	d1f4      	bne.n	1a00184e <Chip_UART_RXIntHandlerRB+0xa>
1a001864:	b003      	add	sp, #12
1a001866:	bd30      	pop	{r4, r5, pc}

1a001868 <Chip_UART_TXIntHandlerRB>:
1a001868:	b530      	push	{r4, r5, lr}
1a00186a:	b083      	sub	sp, #12
1a00186c:	4604      	mov	r4, r0
1a00186e:	460d      	mov	r5, r1
1a001870:	e002      	b.n	1a001878 <Chip_UART_TXIntHandlerRB+0x10>
1a001872:	f89d 3007 	ldrb.w	r3, [sp, #7]
1a001876:	6023      	str	r3, [r4, #0]
1a001878:	6963      	ldr	r3, [r4, #20]
1a00187a:	f013 0f20 	tst.w	r3, #32
1a00187e:	d006      	beq.n	1a00188e <Chip_UART_TXIntHandlerRB+0x26>
1a001880:	4628      	mov	r0, r5
1a001882:	f10d 0107 	add.w	r1, sp, #7
1a001886:	f000 f951 	bl	1a001b2c <RingBuffer_Pop>
1a00188a:	2800      	cmp	r0, #0
1a00188c:	d1f1      	bne.n	1a001872 <Chip_UART_TXIntHandlerRB+0xa>
1a00188e:	68ea      	ldr	r2, [r5, #12]
1a001890:	692b      	ldr	r3, [r5, #16]
1a001892:	429a      	cmp	r2, r3
1a001894:	d103      	bne.n	1a00189e <Chip_UART_TXIntHandlerRB+0x36>
1a001896:	6863      	ldr	r3, [r4, #4]
1a001898:	f023 0302 	bic.w	r3, r3, #2
1a00189c:	6063      	str	r3, [r4, #4]
1a00189e:	b003      	add	sp, #12
1a0018a0:	bd30      	pop	{r4, r5, pc}
1a0018a2:	bf00      	nop

1a0018a4 <Chip_UART_SendRB>:
1a0018a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0018a8:	4604      	mov	r4, r0
1a0018aa:	460e      	mov	r6, r1
1a0018ac:	4690      	mov	r8, r2
1a0018ae:	461f      	mov	r7, r3
1a0018b0:	6843      	ldr	r3, [r0, #4]
1a0018b2:	f023 0302 	bic.w	r3, r3, #2
1a0018b6:	6043      	str	r3, [r0, #4]
1a0018b8:	4608      	mov	r0, r1
1a0018ba:	4611      	mov	r1, r2
1a0018bc:	463a      	mov	r2, r7
1a0018be:	f000 f8ed 	bl	1a001a9c <RingBuffer_InsertMult>
1a0018c2:	4605      	mov	r5, r0
1a0018c4:	4620      	mov	r0, r4
1a0018c6:	4631      	mov	r1, r6
1a0018c8:	f7ff ffce 	bl	1a001868 <Chip_UART_TXIntHandlerRB>
1a0018cc:	4630      	mov	r0, r6
1a0018ce:	eb08 0105 	add.w	r1, r8, r5
1a0018d2:	1b7a      	subs	r2, r7, r5
1a0018d4:	f000 f8e2 	bl	1a001a9c <RingBuffer_InsertMult>
1a0018d8:	6863      	ldr	r3, [r4, #4]
1a0018da:	f043 0302 	orr.w	r3, r3, #2
1a0018de:	6063      	str	r3, [r4, #4]
1a0018e0:	4428      	add	r0, r5
1a0018e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a0018e6:	bf00      	nop

1a0018e8 <Chip_UART_ReadRB>:
1a0018e8:	b508      	push	{r3, lr}
1a0018ea:	4608      	mov	r0, r1
1a0018ec:	4611      	mov	r1, r2
1a0018ee:	461a      	mov	r2, r3
1a0018f0:	f000 f934 	bl	1a001b5c <RingBuffer_PopMult>
1a0018f4:	bd08      	pop	{r3, pc}
1a0018f6:	bf00      	nop

1a0018f8 <Chip_UART_IRQRBHandler>:
1a0018f8:	b570      	push	{r4, r5, r6, lr}
1a0018fa:	4604      	mov	r4, r0
1a0018fc:	460e      	mov	r6, r1
1a0018fe:	6843      	ldr	r3, [r0, #4]
1a001900:	f013 0f02 	tst.w	r3, #2
1a001904:	d00b      	beq.n	1a00191e <Chip_UART_IRQRBHandler+0x26>
1a001906:	4615      	mov	r5, r2
1a001908:	4611      	mov	r1, r2
1a00190a:	f7ff ffad 	bl	1a001868 <Chip_UART_TXIntHandlerRB>
1a00190e:	68ea      	ldr	r2, [r5, #12]
1a001910:	692b      	ldr	r3, [r5, #16]
1a001912:	429a      	cmp	r2, r3
1a001914:	d103      	bne.n	1a00191e <Chip_UART_IRQRBHandler+0x26>
1a001916:	6863      	ldr	r3, [r4, #4]
1a001918:	f023 0302 	bic.w	r3, r3, #2
1a00191c:	6063      	str	r3, [r4, #4]
1a00191e:	4620      	mov	r0, r4
1a001920:	4631      	mov	r1, r6
1a001922:	f7ff ff8f 	bl	1a001844 <Chip_UART_RXIntHandlerRB>
1a001926:	4620      	mov	r0, r4
1a001928:	f7ff fec0 	bl	1a0016ac <Chip_UART_ABIntHandler>
1a00192c:	bd70      	pop	{r4, r5, r6, pc}
1a00192e:	bf00      	nop

1a001930 <Chip_UART_SetBaudFDR>:
1a001930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a001934:	b083      	sub	sp, #12
1a001936:	4683      	mov	fp, r0
1a001938:	4688      	mov	r8, r1
1a00193a:	f7ff fea1 	bl	1a001680 <Chip_UART_GetIndex>
1a00193e:	4b35      	ldr	r3, [pc, #212]	; (1a001a14 <Chip_UART_SetBaudFDR+0xe4>)
1a001940:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1a001944:	8900      	ldrh	r0, [r0, #8]
1a001946:	f000 fda9 	bl	1a00249c <Chip_Clock_GetRate>
1a00194a:	4606      	mov	r6, r0
1a00194c:	f04f 37ff 	mov.w	r7, #4294967295
1a001950:	2401      	movs	r4, #1
1a001952:	2300      	movs	r3, #0
1a001954:	9301      	str	r3, [sp, #4]
1a001956:	46a2      	mov	sl, r4
1a001958:	4699      	mov	r9, r3
1a00195a:	e029      	b.n	1a0019b0 <Chip_UART_SetBaudFDR+0x80>
1a00195c:	2300      	movs	r3, #0
1a00195e:	0932      	lsrs	r2, r6, #4
1a001960:	0730      	lsls	r0, r6, #28
1a001962:	fba0 0104 	umull	r0, r1, r0, r4
1a001966:	fb04 1102 	mla	r1, r4, r2, r1
1a00196a:	1962      	adds	r2, r4, r5
1a00196c:	fb08 f202 	mul.w	r2, r8, r2
1a001970:	f000 ff98 	bl	1a0028a4 <__aeabi_uldivmod>
1a001974:	4603      	mov	r3, r0
1a001976:	460a      	mov	r2, r1
1a001978:	2800      	cmp	r0, #0
1a00197a:	da01      	bge.n	1a001980 <Chip_UART_SetBaudFDR+0x50>
1a00197c:	4243      	negs	r3, r0
1a00197e:	1c4a      	adds	r2, r1, #1
1a001980:	429f      	cmp	r7, r3
1a001982:	d30a      	bcc.n	1a00199a <Chip_UART_SetBaudFDR+0x6a>
1a001984:	b14a      	cbz	r2, 1a00199a <Chip_UART_SetBaudFDR+0x6a>
1a001986:	0c11      	lsrs	r1, r2, #16
1a001988:	d107      	bne.n	1a00199a <Chip_UART_SetBaudFDR+0x6a>
1a00198a:	2a02      	cmp	r2, #2
1a00198c:	d800      	bhi.n	1a001990 <Chip_UART_SetBaudFDR+0x60>
1a00198e:	b925      	cbnz	r5, 1a00199a <Chip_UART_SetBaudFDR+0x6a>
1a001990:	b14b      	cbz	r3, 1a0019a6 <Chip_UART_SetBaudFDR+0x76>
1a001992:	461f      	mov	r7, r3
1a001994:	9501      	str	r5, [sp, #4]
1a001996:	46a2      	mov	sl, r4
1a001998:	4691      	mov	r9, r2
1a00199a:	3501      	adds	r5, #1
1a00199c:	e000      	b.n	1a0019a0 <Chip_UART_SetBaudFDR+0x70>
1a00199e:	2500      	movs	r5, #0
1a0019a0:	42a5      	cmp	r5, r4
1a0019a2:	d3db      	bcc.n	1a00195c <Chip_UART_SetBaudFDR+0x2c>
1a0019a4:	e003      	b.n	1a0019ae <Chip_UART_SetBaudFDR+0x7e>
1a0019a6:	461f      	mov	r7, r3
1a0019a8:	9501      	str	r5, [sp, #4]
1a0019aa:	46a2      	mov	sl, r4
1a0019ac:	4691      	mov	r9, r2
1a0019ae:	3401      	adds	r4, #1
1a0019b0:	b10f      	cbz	r7, 1a0019b6 <Chip_UART_SetBaudFDR+0x86>
1a0019b2:	2c0f      	cmp	r4, #15
1a0019b4:	d9f3      	bls.n	1a00199e <Chip_UART_SetBaudFDR+0x6e>
1a0019b6:	f1b9 0f00 	cmp.w	r9, #0
1a0019ba:	d026      	beq.n	1a001a0a <Chip_UART_SetBaudFDR+0xda>
1a0019bc:	f8db 300c 	ldr.w	r3, [fp, #12]
1a0019c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a0019c4:	f8cb 300c 	str.w	r3, [fp, #12]
1a0019c8:	fa5f f389 	uxtb.w	r3, r9
1a0019cc:	f8cb 3000 	str.w	r3, [fp]
1a0019d0:	f3c9 2307 	ubfx	r3, r9, #8, #8
1a0019d4:	f8cb 3004 	str.w	r3, [fp, #4]
1a0019d8:	f8db 300c 	ldr.w	r3, [fp, #12]
1a0019dc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a0019e0:	f8cb 300c 	str.w	r3, [fp, #12]
1a0019e4:	ea4f 130a 	mov.w	r3, sl, lsl #4
1a0019e8:	b2da      	uxtb	r2, r3
1a0019ea:	9901      	ldr	r1, [sp, #4]
1a0019ec:	f001 030f 	and.w	r3, r1, #15
1a0019f0:	4313      	orrs	r3, r2
1a0019f2:	f8cb 3028 	str.w	r3, [fp, #40]	; 0x28
1a0019f6:	0933      	lsrs	r3, r6, #4
1a0019f8:	fb0a f303 	mul.w	r3, sl, r3
1a0019fc:	eb0a 0001 	add.w	r0, sl, r1
1a001a00:	fb09 f000 	mul.w	r0, r9, r0
1a001a04:	fbb3 f0f0 	udiv	r0, r3, r0
1a001a08:	e000      	b.n	1a001a0c <Chip_UART_SetBaudFDR+0xdc>
1a001a0a:	2000      	movs	r0, #0
1a001a0c:	b003      	add	sp, #12
1a001a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001a12:	bf00      	nop
1a001a14:	1a003114 	.word	0x1a003114

1a001a18 <Chip_UART_GetABEOStatus>:
1a001a18:	4b01      	ldr	r3, [pc, #4]	; (1a001a20 <Chip_UART_GetABEOStatus+0x8>)
1a001a1a:	7818      	ldrb	r0, [r3, #0]
1a001a1c:	4770      	bx	lr
1a001a1e:	bf00      	nop
1a001a20:	10000194 	.word	0x10000194

1a001a24 <Chip_UART_ABCmd>:
1a001a24:	2b01      	cmp	r3, #1
1a001a26:	d116      	bne.n	1a001a56 <Chip_UART_ABCmd+0x32>
1a001a28:	68c3      	ldr	r3, [r0, #12]
1a001a2a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a001a2e:	60c3      	str	r3, [r0, #12]
1a001a30:	2300      	movs	r3, #0
1a001a32:	6003      	str	r3, [r0, #0]
1a001a34:	6043      	str	r3, [r0, #4]
1a001a36:	68c3      	ldr	r3, [r0, #12]
1a001a38:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a001a3c:	60c3      	str	r3, [r0, #12]
1a001a3e:	2310      	movs	r3, #16
1a001a40:	6283      	str	r3, [r0, #40]	; 0x28
1a001a42:	2901      	cmp	r1, #1
1a001a44:	d101      	bne.n	1a001a4a <Chip_UART_ABCmd+0x26>
1a001a46:	2303      	movs	r3, #3
1a001a48:	e000      	b.n	1a001a4c <Chip_UART_ABCmd+0x28>
1a001a4a:	2301      	movs	r3, #1
1a001a4c:	b10a      	cbz	r2, 1a001a52 <Chip_UART_ABCmd+0x2e>
1a001a4e:	f043 0304 	orr.w	r3, r3, #4
1a001a52:	6203      	str	r3, [r0, #32]
1a001a54:	4770      	bx	lr
1a001a56:	2300      	movs	r3, #0
1a001a58:	6203      	str	r3, [r0, #32]
1a001a5a:	4770      	bx	lr

1a001a5c <RingBuffer_Init>:
1a001a5c:	6001      	str	r1, [r0, #0]
1a001a5e:	6043      	str	r3, [r0, #4]
1a001a60:	6082      	str	r2, [r0, #8]
1a001a62:	2300      	movs	r3, #0
1a001a64:	6103      	str	r3, [r0, #16]
1a001a66:	60c3      	str	r3, [r0, #12]
1a001a68:	2001      	movs	r0, #1
1a001a6a:	4770      	bx	lr

1a001a6c <RingBuffer_Insert>:
1a001a6c:	b538      	push	{r3, r4, r5, lr}
1a001a6e:	6805      	ldr	r5, [r0, #0]
1a001a70:	68c3      	ldr	r3, [r0, #12]
1a001a72:	6902      	ldr	r2, [r0, #16]
1a001a74:	1a9b      	subs	r3, r3, r2
1a001a76:	6842      	ldr	r2, [r0, #4]
1a001a78:	4293      	cmp	r3, r2
1a001a7a:	da0d      	bge.n	1a001a98 <RingBuffer_Insert+0x2c>
1a001a7c:	4604      	mov	r4, r0
1a001a7e:	68c0      	ldr	r0, [r0, #12]
1a001a80:	3a01      	subs	r2, #1
1a001a82:	4010      	ands	r0, r2
1a001a84:	68a2      	ldr	r2, [r4, #8]
1a001a86:	fb02 5000 	mla	r0, r2, r0, r5
1a001a8a:	f001 f9d9 	bl	1a002e40 <memcpy>
1a001a8e:	68e3      	ldr	r3, [r4, #12]
1a001a90:	3301      	adds	r3, #1
1a001a92:	60e3      	str	r3, [r4, #12]
1a001a94:	2001      	movs	r0, #1
1a001a96:	bd38      	pop	{r3, r4, r5, pc}
1a001a98:	2000      	movs	r0, #0
1a001a9a:	bd38      	pop	{r3, r4, r5, pc}

1a001a9c <RingBuffer_InsertMult>:
1a001a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a001aa0:	f8d0 e000 	ldr.w	lr, [r0]
1a001aa4:	68c3      	ldr	r3, [r0, #12]
1a001aa6:	6904      	ldr	r4, [r0, #16]
1a001aa8:	1b1c      	subs	r4, r3, r4
1a001aaa:	6843      	ldr	r3, [r0, #4]
1a001aac:	429c      	cmp	r4, r3
1a001aae:	da3a      	bge.n	1a001b26 <RingBuffer_InsertMult+0x8a>
1a001ab0:	68c6      	ldr	r6, [r0, #12]
1a001ab2:	6905      	ldr	r5, [r0, #16]
1a001ab4:	1b76      	subs	r6, r6, r5
1a001ab6:	1b9e      	subs	r6, r3, r6
1a001ab8:	68c4      	ldr	r4, [r0, #12]
1a001aba:	f103 3cff 	add.w	ip, r3, #4294967295
1a001abe:	ea04 0c0c 	and.w	ip, r4, ip
1a001ac2:	eb0c 0406 	add.w	r4, ip, r6
1a001ac6:	429c      	cmp	r4, r3
1a001ac8:	d302      	bcc.n	1a001ad0 <RingBuffer_InsertMult+0x34>
1a001aca:	ebcc 0303 	rsb	r3, ip, r3
1a001ace:	e000      	b.n	1a001ad2 <RingBuffer_InsertMult+0x36>
1a001ad0:	4633      	mov	r3, r6
1a001ad2:	460f      	mov	r7, r1
1a001ad4:	4604      	mov	r4, r0
1a001ad6:	1af6      	subs	r6, r6, r3
1a001ad8:	4293      	cmp	r3, r2
1a001ada:	bfa8      	it	ge
1a001adc:	4613      	movge	r3, r2
1a001ade:	4698      	mov	r8, r3
1a001ae0:	1ad5      	subs	r5, r2, r3
1a001ae2:	42b5      	cmp	r5, r6
1a001ae4:	bfa8      	it	ge
1a001ae6:	4635      	movge	r5, r6
1a001ae8:	6882      	ldr	r2, [r0, #8]
1a001aea:	fb02 e00c 	mla	r0, r2, ip, lr
1a001aee:	fb02 f203 	mul.w	r2, r2, r3
1a001af2:	f001 f9a5 	bl	1a002e40 <memcpy>
1a001af6:	68e3      	ldr	r3, [r4, #12]
1a001af8:	eb08 0203 	add.w	r2, r8, r3
1a001afc:	60e2      	str	r2, [r4, #12]
1a001afe:	6820      	ldr	r0, [r4, #0]
1a001b00:	6863      	ldr	r3, [r4, #4]
1a001b02:	3b01      	subs	r3, #1
1a001b04:	4013      	ands	r3, r2
1a001b06:	68a2      	ldr	r2, [r4, #8]
1a001b08:	fb02 0003 	mla	r0, r2, r3, r0
1a001b0c:	fb02 7108 	mla	r1, r2, r8, r7
1a001b10:	fb02 f205 	mul.w	r2, r2, r5
1a001b14:	f001 f994 	bl	1a002e40 <memcpy>
1a001b18:	68e3      	ldr	r3, [r4, #12]
1a001b1a:	442b      	add	r3, r5
1a001b1c:	60e3      	str	r3, [r4, #12]
1a001b1e:	eb08 0005 	add.w	r0, r8, r5
1a001b22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a001b26:	2000      	movs	r0, #0
1a001b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1a001b2c <RingBuffer_Pop>:
1a001b2c:	b538      	push	{r3, r4, r5, lr}
1a001b2e:	6805      	ldr	r5, [r0, #0]
1a001b30:	68c2      	ldr	r2, [r0, #12]
1a001b32:	6903      	ldr	r3, [r0, #16]
1a001b34:	429a      	cmp	r2, r3
1a001b36:	d00f      	beq.n	1a001b58 <RingBuffer_Pop+0x2c>
1a001b38:	4604      	mov	r4, r0
1a001b3a:	6902      	ldr	r2, [r0, #16]
1a001b3c:	6843      	ldr	r3, [r0, #4]
1a001b3e:	3b01      	subs	r3, #1
1a001b40:	4013      	ands	r3, r2
1a001b42:	6882      	ldr	r2, [r0, #8]
1a001b44:	4608      	mov	r0, r1
1a001b46:	fb02 5103 	mla	r1, r2, r3, r5
1a001b4a:	f001 f979 	bl	1a002e40 <memcpy>
1a001b4e:	6923      	ldr	r3, [r4, #16]
1a001b50:	3301      	adds	r3, #1
1a001b52:	6123      	str	r3, [r4, #16]
1a001b54:	2001      	movs	r0, #1
1a001b56:	bd38      	pop	{r3, r4, r5, pc}
1a001b58:	2000      	movs	r0, #0
1a001b5a:	bd38      	pop	{r3, r4, r5, pc}

1a001b5c <RingBuffer_PopMult>:
1a001b5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a001b5e:	f8d0 e000 	ldr.w	lr, [r0]
1a001b62:	68c4      	ldr	r4, [r0, #12]
1a001b64:	6903      	ldr	r3, [r0, #16]
1a001b66:	429c      	cmp	r4, r3
1a001b68:	d037      	beq.n	1a001bda <RingBuffer_PopMult+0x7e>
1a001b6a:	68c3      	ldr	r3, [r0, #12]
1a001b6c:	6904      	ldr	r4, [r0, #16]
1a001b6e:	1b1b      	subs	r3, r3, r4
1a001b70:	6904      	ldr	r4, [r0, #16]
1a001b72:	6846      	ldr	r6, [r0, #4]
1a001b74:	f106 3cff 	add.w	ip, r6, #4294967295
1a001b78:	ea04 0c0c 	and.w	ip, r4, ip
1a001b7c:	eb0c 0403 	add.w	r4, ip, r3
1a001b80:	42b4      	cmp	r4, r6
1a001b82:	d302      	bcc.n	1a001b8a <RingBuffer_PopMult+0x2e>
1a001b84:	ebcc 0606 	rsb	r6, ip, r6
1a001b88:	e000      	b.n	1a001b8c <RingBuffer_PopMult+0x30>
1a001b8a:	461e      	mov	r6, r3
1a001b8c:	460f      	mov	r7, r1
1a001b8e:	4605      	mov	r5, r0
1a001b90:	1b9b      	subs	r3, r3, r6
1a001b92:	4296      	cmp	r6, r2
1a001b94:	bfa8      	it	ge
1a001b96:	4616      	movge	r6, r2
1a001b98:	1b94      	subs	r4, r2, r6
1a001b9a:	429c      	cmp	r4, r3
1a001b9c:	bfa8      	it	ge
1a001b9e:	461c      	movge	r4, r3
1a001ba0:	6882      	ldr	r2, [r0, #8]
1a001ba2:	4608      	mov	r0, r1
1a001ba4:	fb02 e10c 	mla	r1, r2, ip, lr
1a001ba8:	fb02 f206 	mul.w	r2, r2, r6
1a001bac:	f001 f948 	bl	1a002e40 <memcpy>
1a001bb0:	692b      	ldr	r3, [r5, #16]
1a001bb2:	18f2      	adds	r2, r6, r3
1a001bb4:	612a      	str	r2, [r5, #16]
1a001bb6:	6829      	ldr	r1, [r5, #0]
1a001bb8:	686b      	ldr	r3, [r5, #4]
1a001bba:	3b01      	subs	r3, #1
1a001bbc:	4013      	ands	r3, r2
1a001bbe:	68aa      	ldr	r2, [r5, #8]
1a001bc0:	fb02 7006 	mla	r0, r2, r6, r7
1a001bc4:	fb02 1103 	mla	r1, r2, r3, r1
1a001bc8:	fb02 f204 	mul.w	r2, r2, r4
1a001bcc:	f001 f938 	bl	1a002e40 <memcpy>
1a001bd0:	692b      	ldr	r3, [r5, #16]
1a001bd2:	4423      	add	r3, r4
1a001bd4:	612b      	str	r3, [r5, #16]
1a001bd6:	1930      	adds	r0, r6, r4
1a001bd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a001bda:	2000      	movs	r0, #0
1a001bdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a001bde:	bf00      	nop

1a001be0 <Chip_USB_PllSetup>:
1a001be0:	b508      	push	{r3, lr}
1a001be2:	2007      	movs	r0, #7
1a001be4:	f000 f9de 	bl	1a001fa4 <Chip_Clock_GetClockInputHz>
1a001be8:	4b08      	ldr	r3, [pc, #32]	; (1a001c0c <Chip_USB_PllSetup+0x2c>)
1a001bea:	4298      	cmp	r0, r3
1a001bec:	d00d      	beq.n	1a001c0a <Chip_USB_PllSetup+0x2a>
1a001bee:	2006      	movs	r0, #6
1a001bf0:	2100      	movs	r1, #0
1a001bf2:	4a07      	ldr	r2, [pc, #28]	; (1a001c10 <Chip_USB_PllSetup+0x30>)
1a001bf4:	f000 fc90 	bl	1a002518 <Chip_Clock_SetupPLL>
1a001bf8:	2000      	movs	r0, #0
1a001bfa:	f000 fcad 	bl	1a002558 <Chip_Clock_EnablePLL>
1a001bfe:	2000      	movs	r0, #0
1a001c00:	f000 fcbe 	bl	1a002580 <Chip_Clock_GetPLLStatus>
1a001c04:	f010 0f01 	tst.w	r0, #1
1a001c08:	d0f9      	beq.n	1a001bfe <Chip_USB_PllSetup+0x1e>
1a001c0a:	bd08      	pop	{r3, pc}
1a001c0c:	1c9c3800 	.word	0x1c9c3800
1a001c10:	1a003124 	.word	0x1a003124

1a001c14 <Chip_USB0_Init>:
1a001c14:	b508      	push	{r3, lr}
1a001c16:	f7ff ffe3 	bl	1a001be0 <Chip_USB_PllSetup>
1a001c1a:	2001      	movs	r0, #1
1a001c1c:	2107      	movs	r1, #7
1a001c1e:	4602      	mov	r2, r0
1a001c20:	4603      	mov	r3, r0
1a001c22:	f000 fb4d 	bl	1a0022c0 <Chip_Clock_SetBaseClock>
1a001c26:	2001      	movs	r0, #1
1a001c28:	f000 fb86 	bl	1a002338 <Chip_Clock_EnableBaseClock>
1a001c2c:	2065      	movs	r0, #101	; 0x65
1a001c2e:	2101      	movs	r1, #1
1a001c30:	460a      	mov	r2, r1
1a001c32:	460b      	mov	r3, r1
1a001c34:	f000 fbc0 	bl	1a0023b8 <Chip_Clock_EnableOpts>
1a001c38:	4a02      	ldr	r2, [pc, #8]	; (1a001c44 <Chip_USB0_Init+0x30>)
1a001c3a:	6853      	ldr	r3, [r2, #4]
1a001c3c:	f023 0320 	bic.w	r3, r3, #32
1a001c40:	6053      	str	r3, [r2, #4]
1a001c42:	bd08      	pop	{r3, pc}
1a001c44:	40043000 	.word	0x40043000

1a001c48 <Chip_USB1_Init>:
1a001c48:	b508      	push	{r3, lr}
1a001c4a:	f7ff ffc9 	bl	1a001be0 <Chip_USB_PllSetup>
1a001c4e:	2000      	movs	r0, #0
1a001c50:	2107      	movs	r1, #7
1a001c52:	2204      	movs	r2, #4
1a001c54:	f000 f960 	bl	1a001f18 <Chip_Clock_SetDivider>
1a001c58:	2003      	movs	r0, #3
1a001c5a:	210c      	movs	r1, #12
1a001c5c:	2202      	movs	r2, #2
1a001c5e:	f000 f95b 	bl	1a001f18 <Chip_Clock_SetDivider>
1a001c62:	2003      	movs	r0, #3
1a001c64:	210f      	movs	r1, #15
1a001c66:	2201      	movs	r2, #1
1a001c68:	4613      	mov	r3, r2
1a001c6a:	f000 fb29 	bl	1a0022c0 <Chip_Clock_SetBaseClock>
1a001c6e:	2003      	movs	r0, #3
1a001c70:	f000 fb62 	bl	1a002338 <Chip_Clock_EnableBaseClock>
1a001c74:	206e      	movs	r0, #110	; 0x6e
1a001c76:	2101      	movs	r1, #1
1a001c78:	460a      	mov	r2, r1
1a001c7a:	460b      	mov	r3, r1
1a001c7c:	f000 fb9c 	bl	1a0023b8 <Chip_Clock_EnableOpts>
1a001c80:	2212      	movs	r2, #18
1a001c82:	4b02      	ldr	r3, [pc, #8]	; (1a001c8c <Chip_USB1_Init+0x44>)
1a001c84:	f8c3 2c80 	str.w	r2, [r3, #3200]	; 0xc80
1a001c88:	bd08      	pop	{r3, pc}
1a001c8a:	bf00      	nop
1a001c8c:	40086000 	.word	0x40086000

1a001c90 <SystemCoreClockUpdate>:
1a001c90:	b508      	push	{r3, lr}
1a001c92:	2069      	movs	r0, #105	; 0x69
1a001c94:	f000 fc02 	bl	1a00249c <Chip_Clock_GetRate>
1a001c98:	4b01      	ldr	r3, [pc, #4]	; (1a001ca0 <SystemCoreClockUpdate+0x10>)
1a001c9a:	6018      	str	r0, [r3, #0]
1a001c9c:	bd08      	pop	{r3, pc}
1a001c9e:	bf00      	nop
1a001ca0:	10000280 	.word	0x10000280

1a001ca4 <pll_calc_divs>:
1a001ca4:	b5f0      	push	{r4, r5, r6, r7, lr}
1a001ca6:	680b      	ldr	r3, [r1, #0]
1a001ca8:	f013 0f80 	tst.w	r3, #128	; 0x80
1a001cac:	d002      	beq.n	1a001cb4 <pll_calc_divs+0x10>
1a001cae:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a001cb2:	600b      	str	r3, [r1, #0]
1a001cb4:	4686      	mov	lr, r0
1a001cb6:	2601      	movs	r6, #1
1a001cb8:	e041      	b.n	1a001d3e <pll_calc_divs+0x9a>
1a001cba:	680d      	ldr	r5, [r1, #0]
1a001cbc:	f015 0f40 	tst.w	r5, #64	; 0x40
1a001cc0:	d008      	beq.n	1a001cd4 <pll_calc_divs+0x30>
1a001cc2:	1c7b      	adds	r3, r7, #1
1a001cc4:	fa04 f203 	lsl.w	r2, r4, r3
1a001cc8:	694b      	ldr	r3, [r1, #20]
1a001cca:	fb03 f302 	mul.w	r3, r3, r2
1a001cce:	fbb3 f3f6 	udiv	r3, r3, r6
1a001cd2:	e004      	b.n	1a001cde <pll_calc_divs+0x3a>
1a001cd4:	694b      	ldr	r3, [r1, #20]
1a001cd6:	fb04 f303 	mul.w	r3, r4, r3
1a001cda:	fbb3 f3f6 	udiv	r3, r3, r6
1a001cde:	4a19      	ldr	r2, [pc, #100]	; (1a001d44 <pll_calc_divs+0xa0>)
1a001ce0:	4293      	cmp	r3, r2
1a001ce2:	d920      	bls.n	1a001d26 <pll_calc_divs+0x82>
1a001ce4:	4a18      	ldr	r2, [pc, #96]	; (1a001d48 <pll_calc_divs+0xa4>)
1a001ce6:	4293      	cmp	r3, r2
1a001ce8:	d823      	bhi.n	1a001d32 <pll_calc_divs+0x8e>
1a001cea:	f015 0f80 	tst.w	r5, #128	; 0x80
1a001cee:	d103      	bne.n	1a001cf8 <pll_calc_divs+0x54>
1a001cf0:	1c7a      	adds	r2, r7, #1
1a001cf2:	fa23 f202 	lsr.w	r2, r3, r2
1a001cf6:	e000      	b.n	1a001cfa <pll_calc_divs+0x56>
1a001cf8:	461a      	mov	r2, r3
1a001cfa:	1a85      	subs	r5, r0, r2
1a001cfc:	d502      	bpl.n	1a001d04 <pll_calc_divs+0x60>
1a001cfe:	f1c5 0c00 	rsb	ip, r5, #0
1a001d02:	e000      	b.n	1a001d06 <pll_calc_divs+0x62>
1a001d04:	46ac      	mov	ip, r5
1a001d06:	45e6      	cmp	lr, ip
1a001d08:	d90d      	bls.n	1a001d26 <pll_calc_divs+0x82>
1a001d0a:	608e      	str	r6, [r1, #8]
1a001d0c:	f107 0e01 	add.w	lr, r7, #1
1a001d10:	f8c1 e00c 	str.w	lr, [r1, #12]
1a001d14:	610c      	str	r4, [r1, #16]
1a001d16:	618a      	str	r2, [r1, #24]
1a001d18:	61cb      	str	r3, [r1, #28]
1a001d1a:	2d00      	cmp	r5, #0
1a001d1c:	da02      	bge.n	1a001d24 <pll_calc_divs+0x80>
1a001d1e:	f1c5 0e00 	rsb	lr, r5, #0
1a001d22:	e000      	b.n	1a001d26 <pll_calc_divs+0x82>
1a001d24:	46ae      	mov	lr, r5
1a001d26:	3401      	adds	r4, #1
1a001d28:	e000      	b.n	1a001d2c <pll_calc_divs+0x88>
1a001d2a:	2401      	movs	r4, #1
1a001d2c:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
1a001d30:	ddc3      	ble.n	1a001cba <pll_calc_divs+0x16>
1a001d32:	3701      	adds	r7, #1
1a001d34:	e000      	b.n	1a001d38 <pll_calc_divs+0x94>
1a001d36:	2700      	movs	r7, #0
1a001d38:	2f03      	cmp	r7, #3
1a001d3a:	ddf6      	ble.n	1a001d2a <pll_calc_divs+0x86>
1a001d3c:	3601      	adds	r6, #1
1a001d3e:	2e04      	cmp	r6, #4
1a001d40:	ddf9      	ble.n	1a001d36 <pll_calc_divs+0x92>
1a001d42:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a001d44:	094c5eff 	.word	0x094c5eff
1a001d48:	1312d000 	.word	0x1312d000

1a001d4c <pll_get_frac>:
1a001d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
1a001d4e:	b099      	sub	sp, #100	; 0x64
1a001d50:	4605      	mov	r5, r0
1a001d52:	460c      	mov	r4, r1
1a001d54:	4668      	mov	r0, sp
1a001d56:	2100      	movs	r1, #0
1a001d58:	2260      	movs	r2, #96	; 0x60
1a001d5a:	f001 f87c 	bl	1a002e56 <memset>
1a001d5e:	2380      	movs	r3, #128	; 0x80
1a001d60:	9300      	str	r3, [sp, #0]
1a001d62:	6963      	ldr	r3, [r4, #20]
1a001d64:	9305      	str	r3, [sp, #20]
1a001d66:	7923      	ldrb	r3, [r4, #4]
1a001d68:	f88d 3004 	strb.w	r3, [sp, #4]
1a001d6c:	4628      	mov	r0, r5
1a001d6e:	4669      	mov	r1, sp
1a001d70:	f7ff ff98 	bl	1a001ca4 <pll_calc_divs>
1a001d74:	9b06      	ldr	r3, [sp, #24]
1a001d76:	42ab      	cmp	r3, r5
1a001d78:	d107      	bne.n	1a001d8a <pll_get_frac+0x3e>
1a001d7a:	466d      	mov	r5, sp
1a001d7c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001d7e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001d80:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001d84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001d88:	e05e      	b.n	1a001e48 <pll_get_frac+0xfc>
1a001d8a:	1aeb      	subs	r3, r5, r3
1a001d8c:	d500      	bpl.n	1a001d90 <pll_get_frac+0x44>
1a001d8e:	425b      	negs	r3, r3
1a001d90:	461e      	mov	r6, r3
1a001d92:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a001d94:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a001d98:	9310      	str	r3, [sp, #64]	; 0x40
1a001d9a:	6963      	ldr	r3, [r4, #20]
1a001d9c:	9315      	str	r3, [sp, #84]	; 0x54
1a001d9e:	7923      	ldrb	r3, [r4, #4]
1a001da0:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
1a001da4:	4628      	mov	r0, r5
1a001da6:	a910      	add	r1, sp, #64	; 0x40
1a001da8:	f7ff ff7c 	bl	1a001ca4 <pll_calc_divs>
1a001dac:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a001dae:	42ab      	cmp	r3, r5
1a001db0:	d107      	bne.n	1a001dc2 <pll_get_frac+0x76>
1a001db2:	ad10      	add	r5, sp, #64	; 0x40
1a001db4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001db6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001db8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001dbc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001dc0:	e042      	b.n	1a001e48 <pll_get_frac+0xfc>
1a001dc2:	1aeb      	subs	r3, r5, r3
1a001dc4:	d500      	bpl.n	1a001dc8 <pll_get_frac+0x7c>
1a001dc6:	425b      	negs	r3, r3
1a001dc8:	461f      	mov	r7, r3
1a001dca:	4b20      	ldr	r3, [pc, #128]	; (1a001e4c <pll_get_frac+0x100>)
1a001dcc:	429d      	cmp	r5, r3
1a001dce:	d812      	bhi.n	1a001df6 <pll_get_frac+0xaa>
1a001dd0:	2340      	movs	r3, #64	; 0x40
1a001dd2:	9308      	str	r3, [sp, #32]
1a001dd4:	6963      	ldr	r3, [r4, #20]
1a001dd6:	930d      	str	r3, [sp, #52]	; 0x34
1a001dd8:	4628      	mov	r0, r5
1a001dda:	a908      	add	r1, sp, #32
1a001ddc:	f7ff ff62 	bl	1a001ca4 <pll_calc_divs>
1a001de0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a001de2:	42ab      	cmp	r3, r5
1a001de4:	d107      	bne.n	1a001df6 <pll_get_frac+0xaa>
1a001de6:	ad08      	add	r5, sp, #32
1a001de8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001dea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001dec:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001df0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001df4:	e028      	b.n	1a001e48 <pll_get_frac+0xfc>
1a001df6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a001df8:	1aed      	subs	r5, r5, r3
1a001dfa:	d500      	bpl.n	1a001dfe <pll_get_frac+0xb2>
1a001dfc:	426d      	negs	r5, r5
1a001dfe:	42ae      	cmp	r6, r5
1a001e00:	dc11      	bgt.n	1a001e26 <pll_get_frac+0xda>
1a001e02:	42be      	cmp	r6, r7
1a001e04:	dc07      	bgt.n	1a001e16 <pll_get_frac+0xca>
1a001e06:	466d      	mov	r5, sp
1a001e08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001e0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001e0c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001e10:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001e14:	e018      	b.n	1a001e48 <pll_get_frac+0xfc>
1a001e16:	ad10      	add	r5, sp, #64	; 0x40
1a001e18:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001e1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001e1c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001e20:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001e24:	e010      	b.n	1a001e48 <pll_get_frac+0xfc>
1a001e26:	42af      	cmp	r7, r5
1a001e28:	db07      	blt.n	1a001e3a <pll_get_frac+0xee>
1a001e2a:	ad08      	add	r5, sp, #32
1a001e2c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001e2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001e30:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001e34:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001e38:	e006      	b.n	1a001e48 <pll_get_frac+0xfc>
1a001e3a:	ad10      	add	r5, sp, #64	; 0x40
1a001e3c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a001e3e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a001e40:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a001e44:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a001e48:	b019      	add	sp, #100	; 0x64
1a001e4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a001e4c:	068e7780 	.word	0x068e7780

1a001e50 <Chip_Clock_TestMainPLLMultiplier>:
1a001e50:	fb00 f001 	mul.w	r0, r0, r1
1a001e54:	4290      	cmp	r0, r2
1a001e56:	d305      	bcc.n	1a001e64 <Chip_Clock_TestMainPLLMultiplier+0x14>
1a001e58:	4a05      	ldr	r2, [pc, #20]	; (1a001e70 <Chip_Clock_TestMainPLLMultiplier+0x20>)
1a001e5a:	4290      	cmp	r0, r2
1a001e5c:	d804      	bhi.n	1a001e68 <Chip_Clock_TestMainPLLMultiplier+0x18>
1a001e5e:	4298      	cmp	r0, r3
1a001e60:	d804      	bhi.n	1a001e6c <Chip_Clock_TestMainPLLMultiplier+0x1c>
1a001e62:	4770      	bx	lr
1a001e64:	2000      	movs	r0, #0
1a001e66:	4770      	bx	lr
1a001e68:	2000      	movs	r0, #0
1a001e6a:	4770      	bx	lr
1a001e6c:	2000      	movs	r0, #0
1a001e6e:	4770      	bx	lr
1a001e70:	0c28cb00 	.word	0x0c28cb00

1a001e74 <Chip_Clock_FindBaseClock>:
1a001e74:	b430      	push	{r4, r5}
1a001e76:	2300      	movs	r3, #0
1a001e78:	211c      	movs	r1, #28
1a001e7a:	e010      	b.n	1a001e9e <Chip_Clock_FindBaseClock+0x2a>
1a001e7c:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a001e80:	0052      	lsls	r2, r2, #1
1a001e82:	4d0d      	ldr	r5, [pc, #52]	; (1a001eb8 <Chip_Clock_FindBaseClock+0x44>)
1a001e84:	5aaa      	ldrh	r2, [r5, r2]
1a001e86:	4282      	cmp	r2, r0
1a001e88:	d806      	bhi.n	1a001e98 <Chip_Clock_FindBaseClock+0x24>
1a001e8a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a001e8e:	0052      	lsls	r2, r2, #1
1a001e90:	442a      	add	r2, r5
1a001e92:	8852      	ldrh	r2, [r2, #2]
1a001e94:	4282      	cmp	r2, r0
1a001e96:	d201      	bcs.n	1a001e9c <Chip_Clock_FindBaseClock+0x28>
1a001e98:	3301      	adds	r3, #1
1a001e9a:	e000      	b.n	1a001e9e <Chip_Clock_FindBaseClock+0x2a>
1a001e9c:	4621      	mov	r1, r4
1a001e9e:	291c      	cmp	r1, #28
1a001ea0:	d107      	bne.n	1a001eb2 <Chip_Clock_FindBaseClock+0x3e>
1a001ea2:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a001ea6:	0052      	lsls	r2, r2, #1
1a001ea8:	4c03      	ldr	r4, [pc, #12]	; (1a001eb8 <Chip_Clock_FindBaseClock+0x44>)
1a001eaa:	4422      	add	r2, r4
1a001eac:	7914      	ldrb	r4, [r2, #4]
1a001eae:	428c      	cmp	r4, r1
1a001eb0:	d1e4      	bne.n	1a001e7c <Chip_Clock_FindBaseClock+0x8>
1a001eb2:	4608      	mov	r0, r1
1a001eb4:	bc30      	pop	{r4, r5}
1a001eb6:	4770      	bx	lr
1a001eb8:	1a003138 	.word	0x1a003138

1a001ebc <Chip_Clock_EnableCrystal>:
1a001ebc:	b082      	sub	sp, #8
1a001ebe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a001ec2:	9301      	str	r3, [sp, #4]
1a001ec4:	4a0d      	ldr	r2, [pc, #52]	; (1a001efc <Chip_Clock_EnableCrystal+0x40>)
1a001ec6:	6993      	ldr	r3, [r2, #24]
1a001ec8:	f023 0102 	bic.w	r1, r3, #2
1a001ecc:	6992      	ldr	r2, [r2, #24]
1a001ece:	428a      	cmp	r2, r1
1a001ed0:	d001      	beq.n	1a001ed6 <Chip_Clock_EnableCrystal+0x1a>
1a001ed2:	4a0a      	ldr	r2, [pc, #40]	; (1a001efc <Chip_Clock_EnableCrystal+0x40>)
1a001ed4:	6191      	str	r1, [r2, #24]
1a001ed6:	f023 0303 	bic.w	r3, r3, #3
1a001eda:	4a09      	ldr	r2, [pc, #36]	; (1a001f00 <Chip_Clock_EnableCrystal+0x44>)
1a001edc:	6811      	ldr	r1, [r2, #0]
1a001ede:	4a09      	ldr	r2, [pc, #36]	; (1a001f04 <Chip_Clock_EnableCrystal+0x48>)
1a001ee0:	4291      	cmp	r1, r2
1a001ee2:	d901      	bls.n	1a001ee8 <Chip_Clock_EnableCrystal+0x2c>
1a001ee4:	f043 0304 	orr.w	r3, r3, #4
1a001ee8:	4a04      	ldr	r2, [pc, #16]	; (1a001efc <Chip_Clock_EnableCrystal+0x40>)
1a001eea:	6193      	str	r3, [r2, #24]
1a001eec:	9b01      	ldr	r3, [sp, #4]
1a001eee:	1e5a      	subs	r2, r3, #1
1a001ef0:	9201      	str	r2, [sp, #4]
1a001ef2:	2b00      	cmp	r3, #0
1a001ef4:	d1fa      	bne.n	1a001eec <Chip_Clock_EnableCrystal+0x30>
1a001ef6:	b002      	add	sp, #8
1a001ef8:	4770      	bx	lr
1a001efa:	bf00      	nop
1a001efc:	40050000 	.word	0x40050000
1a001f00:	1a0030a0 	.word	0x1a0030a0
1a001f04:	01312cff 	.word	0x01312cff

1a001f08 <Chip_Clock_DisableCrystal>:
1a001f08:	4a02      	ldr	r2, [pc, #8]	; (1a001f14 <Chip_Clock_DisableCrystal+0xc>)
1a001f0a:	6993      	ldr	r3, [r2, #24]
1a001f0c:	f043 0301 	orr.w	r3, r3, #1
1a001f10:	6193      	str	r3, [r2, #24]
1a001f12:	4770      	bx	lr
1a001f14:	40050000 	.word	0x40050000

1a001f18 <Chip_Clock_SetDivider>:
1a001f18:	b410      	push	{r4}
1a001f1a:	f100 0412 	add.w	r4, r0, #18
1a001f1e:	4b11      	ldr	r3, [pc, #68]	; (1a001f64 <Chip_Clock_SetDivider+0x4c>)
1a001f20:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
1a001f24:	3a01      	subs	r2, #1
1a001f26:	2911      	cmp	r1, #17
1a001f28:	d013      	beq.n	1a001f52 <Chip_Clock_SetDivider+0x3a>
1a001f2a:	4c0f      	ldr	r4, [pc, #60]	; (1a001f68 <Chip_Clock_SetDivider+0x50>)
1a001f2c:	5c24      	ldrb	r4, [r4, r0]
1a001f2e:	00a4      	lsls	r4, r4, #2
1a001f30:	f044 54f8 	orr.w	r4, r4, #520093696	; 0x1f000000
1a001f34:	f044 0401 	orr.w	r4, r4, #1
1a001f38:	ea23 0304 	bic.w	r3, r3, r4
1a001f3c:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
1a001f40:	ea41 0282 	orr.w	r2, r1, r2, lsl #2
1a001f44:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
1a001f48:	3012      	adds	r0, #18
1a001f4a:	4b06      	ldr	r3, [pc, #24]	; (1a001f64 <Chip_Clock_SetDivider+0x4c>)
1a001f4c:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
1a001f50:	e005      	b.n	1a001f5e <Chip_Clock_SetDivider+0x46>
1a001f52:	f043 0301 	orr.w	r3, r3, #1
1a001f56:	3012      	adds	r0, #18
1a001f58:	4a02      	ldr	r2, [pc, #8]	; (1a001f64 <Chip_Clock_SetDivider+0x4c>)
1a001f5a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
1a001f5e:	f85d 4b04 	ldr.w	r4, [sp], #4
1a001f62:	4770      	bx	lr
1a001f64:	40050000 	.word	0x40050000
1a001f68:	1a0031a8 	.word	0x1a0031a8

1a001f6c <Chip_Clock_GetDividerSource>:
1a001f6c:	3012      	adds	r0, #18
1a001f6e:	4b05      	ldr	r3, [pc, #20]	; (1a001f84 <Chip_Clock_GetDividerSource+0x18>)
1a001f70:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
1a001f74:	f010 0f01 	tst.w	r0, #1
1a001f78:	d102      	bne.n	1a001f80 <Chip_Clock_GetDividerSource+0x14>
1a001f7a:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a001f7e:	4770      	bx	lr
1a001f80:	2011      	movs	r0, #17
1a001f82:	4770      	bx	lr
1a001f84:	40050000 	.word	0x40050000

1a001f88 <Chip_Clock_GetDividerDivisor>:
1a001f88:	f100 0212 	add.w	r2, r0, #18
1a001f8c:	4b03      	ldr	r3, [pc, #12]	; (1a001f9c <Chip_Clock_GetDividerDivisor+0x14>)
1a001f8e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1a001f92:	4b03      	ldr	r3, [pc, #12]	; (1a001fa0 <Chip_Clock_GetDividerDivisor+0x18>)
1a001f94:	5c18      	ldrb	r0, [r3, r0]
1a001f96:	ea00 0092 	and.w	r0, r0, r2, lsr #2
1a001f9a:	4770      	bx	lr
1a001f9c:	40050000 	.word	0x40050000
1a001fa0:	1a0031a8 	.word	0x1a0031a8

1a001fa4 <Chip_Clock_GetClockInputHz>:
1a001fa4:	b508      	push	{r3, lr}
1a001fa6:	2810      	cmp	r0, #16
1a001fa8:	d80a      	bhi.n	1a001fc0 <Chip_Clock_GetClockInputHz+0x1c>
1a001faa:	e8df f000 	tbb	[pc, r0]
1a001fae:	0b42      	.short	0x0b42
1a001fb0:	091f160d 	.word	0x091f160d
1a001fb4:	2b282522 	.word	0x2b282522
1a001fb8:	322e0909 	.word	0x322e0909
1a001fbc:	3a36      	.short	0x3a36
1a001fbe:	3e          	.byte	0x3e
1a001fbf:	00          	.byte	0x00
1a001fc0:	2000      	movs	r0, #0
1a001fc2:	bd08      	pop	{r3, pc}
1a001fc4:	481e      	ldr	r0, [pc, #120]	; (1a002040 <Chip_Clock_GetClockInputHz+0x9c>)
1a001fc6:	bd08      	pop	{r3, pc}
1a001fc8:	4b1e      	ldr	r3, [pc, #120]	; (1a002044 <Chip_Clock_GetClockInputHz+0xa0>)
1a001fca:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a001fce:	f003 0307 	and.w	r3, r3, #7
1a001fd2:	2b04      	cmp	r3, #4
1a001fd4:	d130      	bne.n	1a002038 <Chip_Clock_GetClockInputHz+0x94>
1a001fd6:	2000      	movs	r0, #0
1a001fd8:	bd08      	pop	{r3, pc}
1a001fda:	4b1a      	ldr	r3, [pc, #104]	; (1a002044 <Chip_Clock_GetClockInputHz+0xa0>)
1a001fdc:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a001fe0:	f003 0307 	and.w	r3, r3, #7
1a001fe4:	2b04      	cmp	r3, #4
1a001fe6:	d029      	beq.n	1a00203c <Chip_Clock_GetClockInputHz+0x98>
1a001fe8:	4817      	ldr	r0, [pc, #92]	; (1a002048 <Chip_Clock_GetClockInputHz+0xa4>)
1a001fea:	bd08      	pop	{r3, pc}
1a001fec:	4b17      	ldr	r3, [pc, #92]	; (1a00204c <Chip_Clock_GetClockInputHz+0xa8>)
1a001fee:	6818      	ldr	r0, [r3, #0]
1a001ff0:	bd08      	pop	{r3, pc}
1a001ff2:	4b17      	ldr	r3, [pc, #92]	; (1a002050 <Chip_Clock_GetClockInputHz+0xac>)
1a001ff4:	6818      	ldr	r0, [r3, #0]
1a001ff6:	bd08      	pop	{r3, pc}
1a001ff8:	4b16      	ldr	r3, [pc, #88]	; (1a002054 <Chip_Clock_GetClockInputHz+0xb0>)
1a001ffa:	6818      	ldr	r0, [r3, #0]
1a001ffc:	bd08      	pop	{r3, pc}
1a001ffe:	4b15      	ldr	r3, [pc, #84]	; (1a002054 <Chip_Clock_GetClockInputHz+0xb0>)
1a002000:	6858      	ldr	r0, [r3, #4]
1a002002:	bd08      	pop	{r3, pc}
1a002004:	f000 f916 	bl	1a002234 <Chip_Clock_GetMainPLLHz>
1a002008:	bd08      	pop	{r3, pc}
1a00200a:	2100      	movs	r1, #0
1a00200c:	f000 f946 	bl	1a00229c <Chip_Clock_GetDivRate>
1a002010:	bd08      	pop	{r3, pc}
1a002012:	2101      	movs	r1, #1
1a002014:	f000 f942 	bl	1a00229c <Chip_Clock_GetDivRate>
1a002018:	bd08      	pop	{r3, pc}
1a00201a:	2102      	movs	r1, #2
1a00201c:	f000 f93e 	bl	1a00229c <Chip_Clock_GetDivRate>
1a002020:	bd08      	pop	{r3, pc}
1a002022:	2103      	movs	r1, #3
1a002024:	f000 f93a 	bl	1a00229c <Chip_Clock_GetDivRate>
1a002028:	bd08      	pop	{r3, pc}
1a00202a:	2104      	movs	r1, #4
1a00202c:	f000 f936 	bl	1a00229c <Chip_Clock_GetDivRate>
1a002030:	bd08      	pop	{r3, pc}
1a002032:	f44f 4000 	mov.w	r0, #32768	; 0x8000
1a002036:	bd08      	pop	{r3, pc}
1a002038:	4803      	ldr	r0, [pc, #12]	; (1a002048 <Chip_Clock_GetClockInputHz+0xa4>)
1a00203a:	bd08      	pop	{r3, pc}
1a00203c:	4806      	ldr	r0, [pc, #24]	; (1a002058 <Chip_Clock_GetClockInputHz+0xb4>)
1a00203e:	bd08      	pop	{r3, pc}
1a002040:	00b71b00 	.word	0x00b71b00
1a002044:	40043000 	.word	0x40043000
1a002048:	017d7840 	.word	0x017d7840
1a00204c:	1a0030a4 	.word	0x1a0030a4
1a002050:	1a0030a0 	.word	0x1a0030a0
1a002054:	10000198 	.word	0x10000198
1a002058:	02faf080 	.word	0x02faf080

1a00205c <Chip_Clock_CalcMainPLLValue>:
1a00205c:	b538      	push	{r3, r4, r5, lr}
1a00205e:	4605      	mov	r5, r0
1a002060:	460c      	mov	r4, r1
1a002062:	7908      	ldrb	r0, [r1, #4]
1a002064:	f7ff ff9e 	bl	1a001fa4 <Chip_Clock_GetClockInputHz>
1a002068:	6160      	str	r0, [r4, #20]
1a00206a:	4b19      	ldr	r3, [pc, #100]	; (1a0020d0 <Chip_Clock_CalcMainPLLValue+0x74>)
1a00206c:	442b      	add	r3, r5
1a00206e:	4a19      	ldr	r2, [pc, #100]	; (1a0020d4 <Chip_Clock_CalcMainPLLValue+0x78>)
1a002070:	4293      	cmp	r3, r2
1a002072:	d821      	bhi.n	1a0020b8 <Chip_Clock_CalcMainPLLValue+0x5c>
1a002074:	b318      	cbz	r0, 1a0020be <Chip_Clock_CalcMainPLLValue+0x62>
1a002076:	2380      	movs	r3, #128	; 0x80
1a002078:	6023      	str	r3, [r4, #0]
1a00207a:	2300      	movs	r3, #0
1a00207c:	60a3      	str	r3, [r4, #8]
1a00207e:	60e3      	str	r3, [r4, #12]
1a002080:	fbb5 f3f0 	udiv	r3, r5, r0
1a002084:	6123      	str	r3, [r4, #16]
1a002086:	4a14      	ldr	r2, [pc, #80]	; (1a0020d8 <Chip_Clock_CalcMainPLLValue+0x7c>)
1a002088:	4295      	cmp	r5, r2
1a00208a:	d903      	bls.n	1a002094 <Chip_Clock_CalcMainPLLValue+0x38>
1a00208c:	fb03 f000 	mul.w	r0, r3, r0
1a002090:	42a8      	cmp	r0, r5
1a002092:	d007      	beq.n	1a0020a4 <Chip_Clock_CalcMainPLLValue+0x48>
1a002094:	4628      	mov	r0, r5
1a002096:	4621      	mov	r1, r4
1a002098:	f7ff fe58 	bl	1a001d4c <pll_get_frac>
1a00209c:	68a3      	ldr	r3, [r4, #8]
1a00209e:	b18b      	cbz	r3, 1a0020c4 <Chip_Clock_CalcMainPLLValue+0x68>
1a0020a0:	3b01      	subs	r3, #1
1a0020a2:	60a3      	str	r3, [r4, #8]
1a0020a4:	6923      	ldr	r3, [r4, #16]
1a0020a6:	b183      	cbz	r3, 1a0020ca <Chip_Clock_CalcMainPLLValue+0x6e>
1a0020a8:	68e2      	ldr	r2, [r4, #12]
1a0020aa:	b10a      	cbz	r2, 1a0020b0 <Chip_Clock_CalcMainPLLValue+0x54>
1a0020ac:	3a01      	subs	r2, #1
1a0020ae:	60e2      	str	r2, [r4, #12]
1a0020b0:	3b01      	subs	r3, #1
1a0020b2:	6123      	str	r3, [r4, #16]
1a0020b4:	2000      	movs	r0, #0
1a0020b6:	bd38      	pop	{r3, r4, r5, pc}
1a0020b8:	f04f 30ff 	mov.w	r0, #4294967295
1a0020bc:	bd38      	pop	{r3, r4, r5, pc}
1a0020be:	f04f 30ff 	mov.w	r0, #4294967295
1a0020c2:	bd38      	pop	{r3, r4, r5, pc}
1a0020c4:	f04f 30ff 	mov.w	r0, #4294967295
1a0020c8:	bd38      	pop	{r3, r4, r5, pc}
1a0020ca:	f04f 30ff 	mov.w	r0, #4294967295
1a0020ce:	bd38      	pop	{r3, r4, r5, pc}
1a0020d0:	ff6b3a10 	.word	0xff6b3a10
1a0020d4:	0b940510 	.word	0x0b940510
1a0020d8:	094c5eff 	.word	0x094c5eff

1a0020dc <Chip_Clock_SetupMainPLLMult>:
1a0020dc:	b570      	push	{r4, r5, r6, lr}
1a0020de:	b082      	sub	sp, #8
1a0020e0:	4605      	mov	r5, r0
1a0020e2:	460c      	mov	r4, r1
1a0020e4:	23fa      	movs	r3, #250	; 0xfa
1a0020e6:	9301      	str	r3, [sp, #4]
1a0020e8:	f7ff ff5c 	bl	1a001fa4 <Chip_Clock_GetClockInputHz>
1a0020ec:	4b1e      	ldr	r3, [pc, #120]	; (1a002168 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a0020ee:	6c5a      	ldr	r2, [r3, #68]	; 0x44
1a0020f0:	fb04 f000 	mul.w	r0, r4, r0
1a0020f4:	1e61      	subs	r1, r4, #1
1a0020f6:	f022 52f8 	bic.w	r2, r2, #520093696	; 0x1f000000
1a0020fa:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
1a0020fe:	4b1b      	ldr	r3, [pc, #108]	; (1a00216c <Chip_Clock_SetupMainPLLMult+0x90>)
1a002100:	4013      	ands	r3, r2
1a002102:	f443 6600 	orr.w	r6, r3, #2048	; 0x800
1a002106:	4b1a      	ldr	r3, [pc, #104]	; (1a002170 <Chip_Clock_SetupMainPLLMult+0x94>)
1a002108:	4298      	cmp	r0, r3
1a00210a:	d903      	bls.n	1a002114 <Chip_Clock_SetupMainPLLMult+0x38>
1a00210c:	e012      	b.n	1a002134 <Chip_Clock_SetupMainPLLMult+0x58>
1a00210e:	3401      	adds	r4, #1
1a002110:	0052      	lsls	r2, r2, #1
1a002112:	e001      	b.n	1a002118 <Chip_Clock_SetupMainPLLMult+0x3c>
1a002114:	2201      	movs	r2, #1
1a002116:	2400      	movs	r4, #0
1a002118:	fb00 f302 	mul.w	r3, r0, r2
1a00211c:	4d14      	ldr	r5, [pc, #80]	; (1a002170 <Chip_Clock_SetupMainPLLMult+0x94>)
1a00211e:	ebb5 0f43 	cmp.w	r5, r3, lsl #1
1a002122:	d2f4      	bcs.n	1a00210e <Chip_Clock_SetupMainPLLMult+0x32>
1a002124:	0224      	lsls	r4, r4, #8
1a002126:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
1a00212a:	ea44 0306 	orr.w	r3, r4, r6
1a00212e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a002132:	e00e      	b.n	1a002152 <Chip_Clock_SetupMainPLLMult+0x76>
1a002134:	4b0f      	ldr	r3, [pc, #60]	; (1a002174 <Chip_Clock_SetupMainPLLMult+0x98>)
1a002136:	4298      	cmp	r0, r3
1a002138:	d804      	bhi.n	1a002144 <Chip_Clock_SetupMainPLLMult+0x68>
1a00213a:	ea46 4301 	orr.w	r3, r6, r1, lsl #16
1a00213e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
1a002142:	e006      	b.n	1a002152 <Chip_Clock_SetupMainPLLMult+0x76>
1a002144:	4a08      	ldr	r2, [pc, #32]	; (1a002168 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a002146:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a002148:	f043 0301 	orr.w	r3, r3, #1
1a00214c:	6453      	str	r3, [r2, #68]	; 0x44
1a00214e:	2000      	movs	r0, #0
1a002150:	e008      	b.n	1a002164 <Chip_Clock_SetupMainPLLMult+0x88>
1a002152:	f023 0301 	bic.w	r3, r3, #1
1a002156:	4a04      	ldr	r2, [pc, #16]	; (1a002168 <Chip_Clock_SetupMainPLLMult+0x8c>)
1a002158:	6453      	str	r3, [r2, #68]	; 0x44
1a00215a:	9b01      	ldr	r3, [sp, #4]
1a00215c:	1e5a      	subs	r2, r3, #1
1a00215e:	9201      	str	r2, [sp, #4]
1a002160:	2b00      	cmp	r3, #0
1a002162:	d1fa      	bne.n	1a00215a <Chip_Clock_SetupMainPLLMult+0x7e>
1a002164:	b002      	add	sp, #8
1a002166:	bd70      	pop	{r4, r5, r6, pc}
1a002168:	40050000 	.word	0x40050000
1a00216c:	ff00cc3d 	.word	0xff00cc3d
1a002170:	094c5eff 	.word	0x094c5eff
1a002174:	1312cfff 	.word	0x1312cfff

1a002178 <Chip_Clock_SetupMainPLLHz>:
1a002178:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a00217c:	4682      	mov	sl, r0
1a00217e:	460f      	mov	r7, r1
1a002180:	4690      	mov	r8, r2
1a002182:	461e      	mov	r6, r3
1a002184:	f7ff ff0e 	bl	1a001fa4 <Chip_Clock_GetClockInputHz>
1a002188:	4605      	mov	r5, r0
1a00218a:	f1b8 3fff 	cmp.w	r8, #4294967295
1a00218e:	d033      	beq.n	1a0021f8 <Chip_Clock_SetupMainPLLHz+0x80>
1a002190:	fbb8 f9f0 	udiv	r9, r8, r0
1a002194:	4649      	mov	r1, r9
1a002196:	463a      	mov	r2, r7
1a002198:	4633      	mov	r3, r6
1a00219a:	f7ff fe59 	bl	1a001e50 <Chip_Clock_TestMainPLLMultiplier>
1a00219e:	4604      	mov	r4, r0
1a0021a0:	f109 0b01 	add.w	fp, r9, #1
1a0021a4:	4628      	mov	r0, r5
1a0021a6:	4659      	mov	r1, fp
1a0021a8:	463a      	mov	r2, r7
1a0021aa:	4633      	mov	r3, r6
1a0021ac:	f7ff fe50 	bl	1a001e50 <Chip_Clock_TestMainPLLMultiplier>
1a0021b0:	b134      	cbz	r4, 1a0021c0 <Chip_Clock_SetupMainPLLHz+0x48>
1a0021b2:	b928      	cbnz	r0, 1a0021c0 <Chip_Clock_SetupMainPLLHz+0x48>
1a0021b4:	4650      	mov	r0, sl
1a0021b6:	4649      	mov	r1, r9
1a0021b8:	f7ff ff90 	bl	1a0020dc <Chip_Clock_SetupMainPLLMult>
1a0021bc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0021c0:	b934      	cbnz	r4, 1a0021d0 <Chip_Clock_SetupMainPLLHz+0x58>
1a0021c2:	b128      	cbz	r0, 1a0021d0 <Chip_Clock_SetupMainPLLHz+0x58>
1a0021c4:	4650      	mov	r0, sl
1a0021c6:	4659      	mov	r1, fp
1a0021c8:	f7ff ff88 	bl	1a0020dc <Chip_Clock_SetupMainPLLMult>
1a0021cc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0021d0:	b194      	cbz	r4, 1a0021f8 <Chip_Clock_SetupMainPLLHz+0x80>
1a0021d2:	b188      	cbz	r0, 1a0021f8 <Chip_Clock_SetupMainPLLHz+0x80>
1a0021d4:	ebc4 0408 	rsb	r4, r4, r8
1a0021d8:	ebc8 0000 	rsb	r0, r8, r0
1a0021dc:	4284      	cmp	r4, r0
1a0021de:	d905      	bls.n	1a0021ec <Chip_Clock_SetupMainPLLHz+0x74>
1a0021e0:	4650      	mov	r0, sl
1a0021e2:	4649      	mov	r1, r9
1a0021e4:	f7ff ff7a 	bl	1a0020dc <Chip_Clock_SetupMainPLLMult>
1a0021e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0021ec:	4650      	mov	r0, sl
1a0021ee:	4659      	mov	r1, fp
1a0021f0:	f7ff ff74 	bl	1a0020dc <Chip_Clock_SetupMainPLLMult>
1a0021f4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0021f8:	fbb7 f4f5 	udiv	r4, r7, r5
1a0021fc:	fbb6 f8f5 	udiv	r8, r6, r5
1a002200:	f04f 0900 	mov.w	r9, #0
1a002204:	4628      	mov	r0, r5
1a002206:	4621      	mov	r1, r4
1a002208:	463a      	mov	r2, r7
1a00220a:	4633      	mov	r3, r6
1a00220c:	f7ff fe20 	bl	1a001e50 <Chip_Clock_TestMainPLLMultiplier>
1a002210:	b100      	cbz	r0, 1a002214 <Chip_Clock_SetupMainPLLHz+0x9c>
1a002212:	46a1      	mov	r9, r4
1a002214:	4544      	cmp	r4, r8
1a002216:	d201      	bcs.n	1a00221c <Chip_Clock_SetupMainPLLHz+0xa4>
1a002218:	3401      	adds	r4, #1
1a00221a:	e7f3      	b.n	1a002204 <Chip_Clock_SetupMainPLLHz+0x8c>
1a00221c:	f1b9 0f00 	cmp.w	r9, #0
1a002220:	d005      	beq.n	1a00222e <Chip_Clock_SetupMainPLLHz+0xb6>
1a002222:	4650      	mov	r0, sl
1a002224:	4649      	mov	r1, r9
1a002226:	f7ff ff59 	bl	1a0020dc <Chip_Clock_SetupMainPLLMult>
1a00222a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00222e:	2000      	movs	r0, #0
1a002230:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

1a002234 <Chip_Clock_GetMainPLLHz>:
1a002234:	b570      	push	{r4, r5, r6, lr}
1a002236:	b082      	sub	sp, #8
1a002238:	4d16      	ldr	r5, [pc, #88]	; (1a002294 <Chip_Clock_GetMainPLLHz+0x60>)
1a00223a:	6c6c      	ldr	r4, [r5, #68]	; 0x44
1a00223c:	f3c4 6003 	ubfx	r0, r4, #24, #4
1a002240:	f7ff feb0 	bl	1a001fa4 <Chip_Clock_GetClockInputHz>
1a002244:	4606      	mov	r6, r0
1a002246:	4b14      	ldr	r3, [pc, #80]	; (1a002298 <Chip_Clock_GetMainPLLHz+0x64>)
1a002248:	6818      	ldr	r0, [r3, #0]
1a00224a:	9001      	str	r0, [sp, #4]
1a00224c:	6c28      	ldr	r0, [r5, #64]	; 0x40
1a00224e:	f010 0001 	ands.w	r0, r0, #1
1a002252:	d01d      	beq.n	1a002290 <Chip_Clock_GetMainPLLHz+0x5c>
1a002254:	f3c4 4007 	ubfx	r0, r4, #16, #8
1a002258:	f3c4 3201 	ubfx	r2, r4, #12, #2
1a00225c:	f3c4 2101 	ubfx	r1, r4, #8, #2
1a002260:	f3c4 1580 	ubfx	r5, r4, #6, #1
1a002264:	1c43      	adds	r3, r0, #1
1a002266:	3201      	adds	r2, #1
1a002268:	a802      	add	r0, sp, #8
1a00226a:	4401      	add	r1, r0
1a00226c:	f811 0c04 	ldrb.w	r0, [r1, #-4]
1a002270:	f014 0f80 	tst.w	r4, #128	; 0x80
1a002274:	d100      	bne.n	1a002278 <Chip_Clock_GetMainPLLHz+0x44>
1a002276:	b125      	cbz	r5, 1a002282 <Chip_Clock_GetMainPLLHz+0x4e>
1a002278:	fbb6 f0f2 	udiv	r0, r6, r2
1a00227c:	fb03 f000 	mul.w	r0, r3, r0
1a002280:	e006      	b.n	1a002290 <Chip_Clock_GetMainPLLHz+0x5c>
1a002282:	0040      	lsls	r0, r0, #1
1a002284:	fbb3 f3f0 	udiv	r3, r3, r0
1a002288:	fbb6 f0f2 	udiv	r0, r6, r2
1a00228c:	fb00 f003 	mul.w	r0, r0, r3
1a002290:	b002      	add	sp, #8
1a002292:	bd70      	pop	{r4, r5, r6, pc}
1a002294:	40050000 	.word	0x40050000
1a002298:	1a0031a4 	.word	0x1a0031a4

1a00229c <Chip_Clock_GetDivRate>:
1a00229c:	b538      	push	{r3, r4, r5, lr}
1a00229e:	460c      	mov	r4, r1
1a0022a0:	4608      	mov	r0, r1
1a0022a2:	f7ff fe63 	bl	1a001f6c <Chip_Clock_GetDividerSource>
1a0022a6:	4605      	mov	r5, r0
1a0022a8:	4620      	mov	r0, r4
1a0022aa:	f7ff fe6d 	bl	1a001f88 <Chip_Clock_GetDividerDivisor>
1a0022ae:	4604      	mov	r4, r0
1a0022b0:	4628      	mov	r0, r5
1a0022b2:	f7ff fe77 	bl	1a001fa4 <Chip_Clock_GetClockInputHz>
1a0022b6:	3401      	adds	r4, #1
1a0022b8:	fbb0 f0f4 	udiv	r0, r0, r4
1a0022bc:	bd38      	pop	{r3, r4, r5, pc}
1a0022be:	bf00      	nop

1a0022c0 <Chip_Clock_SetBaseClock>:
1a0022c0:	b430      	push	{r4, r5}
1a0022c2:	0085      	lsls	r5, r0, #2
1a0022c4:	4c0d      	ldr	r4, [pc, #52]	; (1a0022fc <Chip_Clock_SetBaseClock+0x3c>)
1a0022c6:	5965      	ldr	r5, [r4, r5]
1a0022c8:	281b      	cmp	r0, #27
1a0022ca:	d80f      	bhi.n	1a0022ec <Chip_Clock_SetBaseClock+0x2c>
1a0022cc:	2911      	cmp	r1, #17
1a0022ce:	d012      	beq.n	1a0022f6 <Chip_Clock_SetBaseClock+0x36>
1a0022d0:	4c0b      	ldr	r4, [pc, #44]	; (1a002300 <Chip_Clock_SetBaseClock+0x40>)
1a0022d2:	402c      	ands	r4, r5
1a0022d4:	b10a      	cbz	r2, 1a0022da <Chip_Clock_SetBaseClock+0x1a>
1a0022d6:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
1a0022da:	b10b      	cbz	r3, 1a0022e0 <Chip_Clock_SetBaseClock+0x20>
1a0022dc:	f044 0401 	orr.w	r4, r4, #1
1a0022e0:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
1a0022e4:	0080      	lsls	r0, r0, #2
1a0022e6:	4b05      	ldr	r3, [pc, #20]	; (1a0022fc <Chip_Clock_SetBaseClock+0x3c>)
1a0022e8:	501c      	str	r4, [r3, r0]
1a0022ea:	e004      	b.n	1a0022f6 <Chip_Clock_SetBaseClock+0x36>
1a0022ec:	f045 0501 	orr.w	r5, r5, #1
1a0022f0:	0080      	lsls	r0, r0, #2
1a0022f2:	4b02      	ldr	r3, [pc, #8]	; (1a0022fc <Chip_Clock_SetBaseClock+0x3c>)
1a0022f4:	501d      	str	r5, [r3, r0]
1a0022f6:	bc30      	pop	{r4, r5}
1a0022f8:	4770      	bx	lr
1a0022fa:	bf00      	nop
1a0022fc:	4005005c 	.word	0x4005005c
1a002300:	e0fff7fe 	.word	0xe0fff7fe

1a002304 <Chip_Clock_GetBaseClockOpts>:
1a002304:	b430      	push	{r4, r5}
1a002306:	0085      	lsls	r5, r0, #2
1a002308:	4c0a      	ldr	r4, [pc, #40]	; (1a002334 <Chip_Clock_GetBaseClockOpts+0x30>)
1a00230a:	5964      	ldr	r4, [r4, r5]
1a00230c:	f3c4 6504 	ubfx	r5, r4, #24, #5
1a002310:	281b      	cmp	r0, #27
1a002312:	d807      	bhi.n	1a002324 <Chip_Clock_GetBaseClockOpts+0x20>
1a002314:	700d      	strb	r5, [r1, #0]
1a002316:	f3c4 21c0 	ubfx	r1, r4, #11, #1
1a00231a:	7011      	strb	r1, [r2, #0]
1a00231c:	f004 0401 	and.w	r4, r4, #1
1a002320:	701c      	strb	r4, [r3, #0]
1a002322:	e004      	b.n	1a00232e <Chip_Clock_GetBaseClockOpts+0x2a>
1a002324:	2011      	movs	r0, #17
1a002326:	7008      	strb	r0, [r1, #0]
1a002328:	2101      	movs	r1, #1
1a00232a:	7019      	strb	r1, [r3, #0]
1a00232c:	7011      	strb	r1, [r2, #0]
1a00232e:	bc30      	pop	{r4, r5}
1a002330:	4770      	bx	lr
1a002332:	bf00      	nop
1a002334:	4005005c 	.word	0x4005005c

1a002338 <Chip_Clock_EnableBaseClock>:
1a002338:	281b      	cmp	r0, #27
1a00233a:	d805      	bhi.n	1a002348 <Chip_Clock_EnableBaseClock+0x10>
1a00233c:	0080      	lsls	r0, r0, #2
1a00233e:	4b03      	ldr	r3, [pc, #12]	; (1a00234c <Chip_Clock_EnableBaseClock+0x14>)
1a002340:	581a      	ldr	r2, [r3, r0]
1a002342:	f022 0201 	bic.w	r2, r2, #1
1a002346:	501a      	str	r2, [r3, r0]
1a002348:	4770      	bx	lr
1a00234a:	bf00      	nop
1a00234c:	4005005c 	.word	0x4005005c

1a002350 <Chip_Clock_DisableBaseClock>:
1a002350:	281b      	cmp	r0, #27
1a002352:	d805      	bhi.n	1a002360 <Chip_Clock_DisableBaseClock+0x10>
1a002354:	0080      	lsls	r0, r0, #2
1a002356:	4b03      	ldr	r3, [pc, #12]	; (1a002364 <Chip_Clock_DisableBaseClock+0x14>)
1a002358:	581a      	ldr	r2, [r3, r0]
1a00235a:	f042 0201 	orr.w	r2, r2, #1
1a00235e:	501a      	str	r2, [r3, r0]
1a002360:	4770      	bx	lr
1a002362:	bf00      	nop
1a002364:	4005005c 	.word	0x4005005c

1a002368 <Chip_Clock_IsBaseClockEnabled>:
1a002368:	281b      	cmp	r0, #27
1a00236a:	d808      	bhi.n	1a00237e <Chip_Clock_IsBaseClockEnabled+0x16>
1a00236c:	0080      	lsls	r0, r0, #2
1a00236e:	4b05      	ldr	r3, [pc, #20]	; (1a002384 <Chip_Clock_IsBaseClockEnabled+0x1c>)
1a002370:	581b      	ldr	r3, [r3, r0]
1a002372:	f013 0f01 	tst.w	r3, #1
1a002376:	bf0c      	ite	eq
1a002378:	2001      	moveq	r0, #1
1a00237a:	2000      	movne	r0, #0
1a00237c:	4770      	bx	lr
1a00237e:	2000      	movs	r0, #0
1a002380:	4770      	bx	lr
1a002382:	bf00      	nop
1a002384:	4005005c 	.word	0x4005005c

1a002388 <Chip_Clock_GetBaseClock>:
1a002388:	281b      	cmp	r0, #27
1a00238a:	d808      	bhi.n	1a00239e <Chip_Clock_GetBaseClock+0x16>
1a00238c:	0080      	lsls	r0, r0, #2
1a00238e:	4b06      	ldr	r3, [pc, #24]	; (1a0023a8 <Chip_Clock_GetBaseClock+0x20>)
1a002390:	5818      	ldr	r0, [r3, r0]
1a002392:	f010 0f01 	tst.w	r0, #1
1a002396:	d104      	bne.n	1a0023a2 <Chip_Clock_GetBaseClock+0x1a>
1a002398:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a00239c:	4770      	bx	lr
1a00239e:	2011      	movs	r0, #17
1a0023a0:	4770      	bx	lr
1a0023a2:	2011      	movs	r0, #17
1a0023a4:	4770      	bx	lr
1a0023a6:	bf00      	nop
1a0023a8:	4005005c 	.word	0x4005005c

1a0023ac <Chip_Clock_GetBaseClocktHz>:
1a0023ac:	b508      	push	{r3, lr}
1a0023ae:	f7ff ffeb 	bl	1a002388 <Chip_Clock_GetBaseClock>
1a0023b2:	f7ff fdf7 	bl	1a001fa4 <Chip_Clock_GetClockInputHz>
1a0023b6:	bd08      	pop	{r3, pc}

1a0023b8 <Chip_Clock_EnableOpts>:
1a0023b8:	b909      	cbnz	r1, 1a0023be <Chip_Clock_EnableOpts+0x6>
1a0023ba:	2101      	movs	r1, #1
1a0023bc:	e000      	b.n	1a0023c0 <Chip_Clock_EnableOpts+0x8>
1a0023be:	2103      	movs	r1, #3
1a0023c0:	b10a      	cbz	r2, 1a0023c6 <Chip_Clock_EnableOpts+0xe>
1a0023c2:	f041 0104 	orr.w	r1, r1, #4
1a0023c6:	2b02      	cmp	r3, #2
1a0023c8:	d101      	bne.n	1a0023ce <Chip_Clock_EnableOpts+0x16>
1a0023ca:	f041 0120 	orr.w	r1, r1, #32
1a0023ce:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0023d2:	d305      	bcc.n	1a0023e0 <Chip_Clock_EnableOpts+0x28>
1a0023d4:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a0023d8:	4b04      	ldr	r3, [pc, #16]	; (1a0023ec <Chip_Clock_EnableOpts+0x34>)
1a0023da:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a0023de:	4770      	bx	lr
1a0023e0:	3020      	adds	r0, #32
1a0023e2:	4b03      	ldr	r3, [pc, #12]	; (1a0023f0 <Chip_Clock_EnableOpts+0x38>)
1a0023e4:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a0023e8:	4770      	bx	lr
1a0023ea:	bf00      	nop
1a0023ec:	40052000 	.word	0x40052000
1a0023f0:	40051000 	.word	0x40051000

1a0023f4 <Chip_Clock_Enable>:
1a0023f4:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0023f8:	d309      	bcc.n	1a00240e <Chip_Clock_Enable+0x1a>
1a0023fa:	4a09      	ldr	r2, [pc, #36]	; (1a002420 <Chip_Clock_Enable+0x2c>)
1a0023fc:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a002400:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a002404:	f043 0301 	orr.w	r3, r3, #1
1a002408:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a00240c:	4770      	bx	lr
1a00240e:	4a05      	ldr	r2, [pc, #20]	; (1a002424 <Chip_Clock_Enable+0x30>)
1a002410:	3020      	adds	r0, #32
1a002412:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a002416:	f043 0301 	orr.w	r3, r3, #1
1a00241a:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a00241e:	4770      	bx	lr
1a002420:	40052000 	.word	0x40052000
1a002424:	40051000 	.word	0x40051000

1a002428 <Chip_Clock_RTCEnable>:
1a002428:	4b04      	ldr	r3, [pc, #16]	; (1a00243c <Chip_Clock_RTCEnable+0x14>)
1a00242a:	685a      	ldr	r2, [r3, #4]
1a00242c:	f022 020c 	bic.w	r2, r2, #12
1a002430:	605a      	str	r2, [r3, #4]
1a002432:	685a      	ldr	r2, [r3, #4]
1a002434:	f042 0203 	orr.w	r2, r2, #3
1a002438:	605a      	str	r2, [r3, #4]
1a00243a:	4770      	bx	lr
1a00243c:	40043000 	.word	0x40043000

1a002440 <Chip_Clock_Disable>:
1a002440:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a002444:	d309      	bcc.n	1a00245a <Chip_Clock_Disable+0x1a>
1a002446:	4a09      	ldr	r2, [pc, #36]	; (1a00246c <Chip_Clock_Disable+0x2c>)
1a002448:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a00244c:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a002450:	f023 0301 	bic.w	r3, r3, #1
1a002454:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a002458:	4770      	bx	lr
1a00245a:	4a05      	ldr	r2, [pc, #20]	; (1a002470 <Chip_Clock_Disable+0x30>)
1a00245c:	3020      	adds	r0, #32
1a00245e:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a002462:	f023 0301 	bic.w	r3, r3, #1
1a002466:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a00246a:	4770      	bx	lr
1a00246c:	40052000 	.word	0x40052000
1a002470:	40051000 	.word	0x40051000

1a002474 <Chip_Clock_StartPowerDown>:
1a002474:	2301      	movs	r3, #1
1a002476:	4a03      	ldr	r2, [pc, #12]	; (1a002484 <Chip_Clock_StartPowerDown+0x10>)
1a002478:	6013      	str	r3, [r2, #0]
1a00247a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
1a00247e:	6013      	str	r3, [r2, #0]
1a002480:	4770      	bx	lr
1a002482:	bf00      	nop
1a002484:	40051000 	.word	0x40051000

1a002488 <Chip_Clock_ClearPowerDown>:
1a002488:	2300      	movs	r3, #0
1a00248a:	4a03      	ldr	r2, [pc, #12]	; (1a002498 <Chip_Clock_ClearPowerDown+0x10>)
1a00248c:	6013      	str	r3, [r2, #0]
1a00248e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
1a002492:	6013      	str	r3, [r2, #0]
1a002494:	4770      	bx	lr
1a002496:	bf00      	nop
1a002498:	40051000 	.word	0x40051000

1a00249c <Chip_Clock_GetRate>:
1a00249c:	b510      	push	{r4, lr}
1a00249e:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0024a2:	d305      	bcc.n	1a0024b0 <Chip_Clock_GetRate+0x14>
1a0024a4:	f5a0 7391 	sub.w	r3, r0, #290	; 0x122
1a0024a8:	4a0d      	ldr	r2, [pc, #52]	; (1a0024e0 <Chip_Clock_GetRate+0x44>)
1a0024aa:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a0024ae:	e004      	b.n	1a0024ba <Chip_Clock_GetRate+0x1e>
1a0024b0:	f100 0320 	add.w	r3, r0, #32
1a0024b4:	4a0b      	ldr	r2, [pc, #44]	; (1a0024e4 <Chip_Clock_GetRate+0x48>)
1a0024b6:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a0024ba:	f014 0f01 	tst.w	r4, #1
1a0024be:	d00c      	beq.n	1a0024da <Chip_Clock_GetRate+0x3e>
1a0024c0:	f7ff fcd8 	bl	1a001e74 <Chip_Clock_FindBaseClock>
1a0024c4:	f7ff ff72 	bl	1a0023ac <Chip_Clock_GetBaseClocktHz>
1a0024c8:	f014 0fe0 	tst.w	r4, #224	; 0xe0
1a0024cc:	d101      	bne.n	1a0024d2 <Chip_Clock_GetRate+0x36>
1a0024ce:	2301      	movs	r3, #1
1a0024d0:	e000      	b.n	1a0024d4 <Chip_Clock_GetRate+0x38>
1a0024d2:	2302      	movs	r3, #2
1a0024d4:	fbb0 f0f3 	udiv	r0, r0, r3
1a0024d8:	bd10      	pop	{r4, pc}
1a0024da:	2000      	movs	r0, #0
1a0024dc:	bd10      	pop	{r4, pc}
1a0024de:	bf00      	nop
1a0024e0:	40052000 	.word	0x40052000
1a0024e4:	40051000 	.word	0x40051000

1a0024e8 <Chip_Clock_GetEMCRate>:
1a0024e8:	b508      	push	{r3, lr}
1a0024ea:	2066      	movs	r0, #102	; 0x66
1a0024ec:	f7ff ffd6 	bl	1a00249c <Chip_Clock_GetRate>
1a0024f0:	4b07      	ldr	r3, [pc, #28]	; (1a002510 <Chip_Clock_GetEMCRate+0x28>)
1a0024f2:	f8d3 3478 	ldr.w	r3, [r3, #1144]	; 0x478
1a0024f6:	f3c3 63c2 	ubfx	r3, r3, #27, #3
1a0024fa:	2b01      	cmp	r3, #1
1a0024fc:	d106      	bne.n	1a00250c <Chip_Clock_GetEMCRate+0x24>
1a0024fe:	4b05      	ldr	r3, [pc, #20]	; (1a002514 <Chip_Clock_GetEMCRate+0x2c>)
1a002500:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a002504:	f413 3f80 	tst.w	r3, #65536	; 0x10000
1a002508:	d000      	beq.n	1a00250c <Chip_Clock_GetEMCRate+0x24>
1a00250a:	0840      	lsrs	r0, r0, #1
1a00250c:	bd08      	pop	{r3, pc}
1a00250e:	bf00      	nop
1a002510:	40051000 	.word	0x40051000
1a002514:	40043000 	.word	0x40043000

1a002518 <Chip_Clock_SetupPLL>:
1a002518:	b410      	push	{r4}
1a00251a:	6813      	ldr	r3, [r2, #0]
1a00251c:	ea43 6000 	orr.w	r0, r3, r0, lsl #24
1a002520:	4b0b      	ldr	r3, [pc, #44]	; (1a002550 <Chip_Clock_SetupPLL+0x38>)
1a002522:	eb03 1401 	add.w	r4, r3, r1, lsl #4
1a002526:	6220      	str	r0, [r4, #32]
1a002528:	6850      	ldr	r0, [r2, #4]
1a00252a:	1c8c      	adds	r4, r1, #2
1a00252c:	eb03 1304 	add.w	r3, r3, r4, lsl #4
1a002530:	6058      	str	r0, [r3, #4]
1a002532:	6890      	ldr	r0, [r2, #8]
1a002534:	6098      	str	r0, [r3, #8]
1a002536:	2901      	cmp	r1, #1
1a002538:	d102      	bne.n	1a002540 <Chip_Clock_SetupPLL+0x28>
1a00253a:	68d0      	ldr	r0, [r2, #12]
1a00253c:	4b04      	ldr	r3, [pc, #16]	; (1a002550 <Chip_Clock_SetupPLL+0x38>)
1a00253e:	63d8      	str	r0, [r3, #60]	; 0x3c
1a002540:	6912      	ldr	r2, [r2, #16]
1a002542:	4b04      	ldr	r3, [pc, #16]	; (1a002554 <Chip_Clock_SetupPLL+0x3c>)
1a002544:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
1a002548:	f85d 4b04 	ldr.w	r4, [sp], #4
1a00254c:	4770      	bx	lr
1a00254e:	bf00      	nop
1a002550:	40050000 	.word	0x40050000
1a002554:	10000198 	.word	0x10000198

1a002558 <Chip_Clock_EnablePLL>:
1a002558:	0100      	lsls	r0, r0, #4
1a00255a:	4b03      	ldr	r3, [pc, #12]	; (1a002568 <Chip_Clock_EnablePLL+0x10>)
1a00255c:	581a      	ldr	r2, [r3, r0]
1a00255e:	f022 0201 	bic.w	r2, r2, #1
1a002562:	501a      	str	r2, [r3, r0]
1a002564:	4770      	bx	lr
1a002566:	bf00      	nop
1a002568:	40050020 	.word	0x40050020

1a00256c <Chip_Clock_DisablePLL>:
1a00256c:	0100      	lsls	r0, r0, #4
1a00256e:	4b03      	ldr	r3, [pc, #12]	; (1a00257c <Chip_Clock_DisablePLL+0x10>)
1a002570:	581a      	ldr	r2, [r3, r0]
1a002572:	f042 0201 	orr.w	r2, r2, #1
1a002576:	501a      	str	r2, [r3, r0]
1a002578:	4770      	bx	lr
1a00257a:	bf00      	nop
1a00257c:	40050020 	.word	0x40050020

1a002580 <Chip_Clock_GetPLLStatus>:
1a002580:	0100      	lsls	r0, r0, #4
1a002582:	4b01      	ldr	r3, [pc, #4]	; (1a002588 <Chip_Clock_GetPLLStatus+0x8>)
1a002584:	5818      	ldr	r0, [r3, r0]
1a002586:	4770      	bx	lr
1a002588:	4005001c 	.word	0x4005001c

1a00258c <Chip_SetupCoreClock>:
1a00258c:	b570      	push	{r4, r5, r6, lr}
1a00258e:	b08a      	sub	sp, #40	; 0x28
1a002590:	4605      	mov	r5, r0
1a002592:	460e      	mov	r6, r1
1a002594:	4614      	mov	r4, r2
1a002596:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
1a00259a:	9309      	str	r3, [sp, #36]	; 0x24
1a00259c:	2806      	cmp	r0, #6
1a00259e:	d101      	bne.n	1a0025a4 <Chip_SetupCoreClock+0x18>
1a0025a0:	f7ff fc8c 	bl	1a001ebc <Chip_Clock_EnableCrystal>
1a0025a4:	2004      	movs	r0, #4
1a0025a6:	4629      	mov	r1, r5
1a0025a8:	2201      	movs	r2, #1
1a0025aa:	2300      	movs	r3, #0
1a0025ac:	f7ff fe88 	bl	1a0022c0 <Chip_Clock_SetBaseClock>
1a0025b0:	4a47      	ldr	r2, [pc, #284]	; (1a0026d0 <Chip_SetupCoreClock+0x144>)
1a0025b2:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a0025b4:	f043 0301 	orr.w	r3, r3, #1
1a0025b8:	6453      	str	r3, [r2, #68]	; 0x44
1a0025ba:	f88d 5008 	strb.w	r5, [sp, #8]
1a0025be:	4630      	mov	r0, r6
1a0025c0:	a901      	add	r1, sp, #4
1a0025c2:	f7ff fd4b 	bl	1a00205c <Chip_Clock_CalcMainPLLValue>
1a0025c6:	4b43      	ldr	r3, [pc, #268]	; (1a0026d4 <Chip_SetupCoreClock+0x148>)
1a0025c8:	429e      	cmp	r6, r3
1a0025ca:	d913      	bls.n	1a0025f4 <Chip_SetupCoreClock+0x68>
1a0025cc:	9b01      	ldr	r3, [sp, #4]
1a0025ce:	f013 0f40 	tst.w	r3, #64	; 0x40
1a0025d2:	d000      	beq.n	1a0025d6 <Chip_SetupCoreClock+0x4a>
1a0025d4:	e7fe      	b.n	1a0025d4 <Chip_SetupCoreClock+0x48>
1a0025d6:	f013 0f80 	tst.w	r3, #128	; 0x80
1a0025da:	d005      	beq.n	1a0025e8 <Chip_SetupCoreClock+0x5c>
1a0025dc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a0025e0:	9301      	str	r3, [sp, #4]
1a0025e2:	2500      	movs	r5, #0
1a0025e4:	2601      	movs	r6, #1
1a0025e6:	e007      	b.n	1a0025f8 <Chip_SetupCoreClock+0x6c>
1a0025e8:	9b04      	ldr	r3, [sp, #16]
1a0025ea:	3301      	adds	r3, #1
1a0025ec:	9304      	str	r3, [sp, #16]
1a0025ee:	2501      	movs	r5, #1
1a0025f0:	2600      	movs	r6, #0
1a0025f2:	e001      	b.n	1a0025f8 <Chip_SetupCoreClock+0x6c>
1a0025f4:	2500      	movs	r5, #0
1a0025f6:	462e      	mov	r6, r5
1a0025f8:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a0025fc:	9b01      	ldr	r3, [sp, #4]
1a0025fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a002602:	9a05      	ldr	r2, [sp, #20]
1a002604:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a002608:	9a03      	ldr	r2, [sp, #12]
1a00260a:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a00260e:	9a04      	ldr	r2, [sp, #16]
1a002610:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a002614:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a002618:	4a2d      	ldr	r2, [pc, #180]	; (1a0026d0 <Chip_SetupCoreClock+0x144>)
1a00261a:	6453      	str	r3, [r2, #68]	; 0x44
1a00261c:	4b2c      	ldr	r3, [pc, #176]	; (1a0026d0 <Chip_SetupCoreClock+0x144>)
1a00261e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
1a002620:	f013 0f01 	tst.w	r3, #1
1a002624:	d0fa      	beq.n	1a00261c <Chip_SetupCoreClock+0x90>
1a002626:	2004      	movs	r0, #4
1a002628:	2109      	movs	r1, #9
1a00262a:	2201      	movs	r2, #1
1a00262c:	2300      	movs	r3, #0
1a00262e:	f7ff fe47 	bl	1a0022c0 <Chip_Clock_SetBaseClock>
1a002632:	b1ee      	cbz	r6, 1a002670 <Chip_SetupCoreClock+0xe4>
1a002634:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a002638:	9309      	str	r3, [sp, #36]	; 0x24
1a00263a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00263c:	1e5a      	subs	r2, r3, #1
1a00263e:	9209      	str	r2, [sp, #36]	; 0x24
1a002640:	2b00      	cmp	r3, #0
1a002642:	d1fa      	bne.n	1a00263a <Chip_SetupCoreClock+0xae>
1a002644:	9b01      	ldr	r3, [sp, #4]
1a002646:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a00264a:	9301      	str	r3, [sp, #4]
1a00264c:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a002650:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a002654:	9a05      	ldr	r2, [sp, #20]
1a002656:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a00265a:	9a03      	ldr	r2, [sp, #12]
1a00265c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a002660:	9a04      	ldr	r2, [sp, #16]
1a002662:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a002666:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a00266a:	4a19      	ldr	r2, [pc, #100]	; (1a0026d0 <Chip_SetupCoreClock+0x144>)
1a00266c:	6453      	str	r3, [r2, #68]	; 0x44
1a00266e:	e01c      	b.n	1a0026aa <Chip_SetupCoreClock+0x11e>
1a002670:	b1dd      	cbz	r5, 1a0026aa <Chip_SetupCoreClock+0x11e>
1a002672:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a002676:	9309      	str	r3, [sp, #36]	; 0x24
1a002678:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00267a:	1e5a      	subs	r2, r3, #1
1a00267c:	9209      	str	r2, [sp, #36]	; 0x24
1a00267e:	2b00      	cmp	r3, #0
1a002680:	d1fa      	bne.n	1a002678 <Chip_SetupCoreClock+0xec>
1a002682:	9b04      	ldr	r3, [sp, #16]
1a002684:	1e59      	subs	r1, r3, #1
1a002686:	9104      	str	r1, [sp, #16]
1a002688:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a00268c:	9b01      	ldr	r3, [sp, #4]
1a00268e:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
1a002692:	9b05      	ldr	r3, [sp, #20]
1a002694:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
1a002698:	9b03      	ldr	r3, [sp, #12]
1a00269a:	ea42 3303 	orr.w	r3, r2, r3, lsl #12
1a00269e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
1a0026a2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a0026a6:	4a0a      	ldr	r2, [pc, #40]	; (1a0026d0 <Chip_SetupCoreClock+0x144>)
1a0026a8:	6453      	str	r3, [r2, #68]	; 0x44
1a0026aa:	b964      	cbnz	r4, 1a0026c6 <Chip_SetupCoreClock+0x13a>
1a0026ac:	e00e      	b.n	1a0026cc <Chip_SetupCoreClock+0x140>
1a0026ae:	4a0a      	ldr	r2, [pc, #40]	; (1a0026d8 <Chip_SetupCoreClock+0x14c>)
1a0026b0:	eb02 0384 	add.w	r3, r2, r4, lsl #2
1a0026b4:	f812 0024 	ldrb.w	r0, [r2, r4, lsl #2]
1a0026b8:	7859      	ldrb	r1, [r3, #1]
1a0026ba:	789a      	ldrb	r2, [r3, #2]
1a0026bc:	78db      	ldrb	r3, [r3, #3]
1a0026be:	f7ff fdff 	bl	1a0022c0 <Chip_Clock_SetBaseClock>
1a0026c2:	3401      	adds	r4, #1
1a0026c4:	e000      	b.n	1a0026c8 <Chip_SetupCoreClock+0x13c>
1a0026c6:	2400      	movs	r4, #0
1a0026c8:	2c11      	cmp	r4, #17
1a0026ca:	d9f0      	bls.n	1a0026ae <Chip_SetupCoreClock+0x122>
1a0026cc:	b00a      	add	sp, #40	; 0x28
1a0026ce:	bd70      	pop	{r4, r5, r6, pc}
1a0026d0:	40050000 	.word	0x40050000
1a0026d4:	068e7780 	.word	0x068e7780
1a0026d8:	1a0031b0 	.word	0x1a0031b0

1a0026dc <Chip_SetupXtalClocking>:
1a0026dc:	b508      	push	{r3, lr}
1a0026de:	2006      	movs	r0, #6
1a0026e0:	4902      	ldr	r1, [pc, #8]	; (1a0026ec <Chip_SetupXtalClocking+0x10>)
1a0026e2:	2201      	movs	r2, #1
1a0026e4:	f7ff ff52 	bl	1a00258c <Chip_SetupCoreClock>
1a0026e8:	bd08      	pop	{r3, pc}
1a0026ea:	bf00      	nop
1a0026ec:	0c28cb00 	.word	0x0c28cb00

1a0026f0 <Chip_SetupIrcClocking>:
1a0026f0:	b508      	push	{r3, lr}
1a0026f2:	2001      	movs	r0, #1
1a0026f4:	4902      	ldr	r1, [pc, #8]	; (1a002700 <Chip_SetupIrcClocking+0x10>)
1a0026f6:	4602      	mov	r2, r0
1a0026f8:	f7ff ff48 	bl	1a00258c <Chip_SetupCoreClock>
1a0026fc:	bd08      	pop	{r3, pc}
1a0026fe:	bf00      	nop
1a002700:	0c28cb00 	.word	0x0c28cb00

1a002704 <Chip_SystemInit>:
1a002704:	b508      	push	{r3, lr}
1a002706:	f7ff fff3 	bl	1a0026f0 <Chip_SetupIrcClocking>
1a00270a:	bd08      	pop	{r3, pc}

1a00270c <Chip_TIMER_GetClockIndex>:
1a00270c:	4b09      	ldr	r3, [pc, #36]	; (1a002734 <Chip_TIMER_GetClockIndex+0x28>)
1a00270e:	4298      	cmp	r0, r3
1a002710:	d009      	beq.n	1a002726 <Chip_TIMER_GetClockIndex+0x1a>
1a002712:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
1a002716:	4298      	cmp	r0, r3
1a002718:	d007      	beq.n	1a00272a <Chip_TIMER_GetClockIndex+0x1e>
1a00271a:	f5a3 3378 	sub.w	r3, r3, #253952	; 0x3e000
1a00271e:	4298      	cmp	r0, r3
1a002720:	d105      	bne.n	1a00272e <Chip_TIMER_GetClockIndex+0x22>
1a002722:	2085      	movs	r0, #133	; 0x85
1a002724:	4770      	bx	lr
1a002726:	20a4      	movs	r0, #164	; 0xa4
1a002728:	4770      	bx	lr
1a00272a:	20a3      	movs	r0, #163	; 0xa3
1a00272c:	4770      	bx	lr
1a00272e:	2084      	movs	r0, #132	; 0x84
1a002730:	4770      	bx	lr
1a002732:	bf00      	nop
1a002734:	400c4000 	.word	0x400c4000

1a002738 <Chip_TIMER_Init>:
1a002738:	b508      	push	{r3, lr}
1a00273a:	f7ff ffe7 	bl	1a00270c <Chip_TIMER_GetClockIndex>
1a00273e:	f7ff fe59 	bl	1a0023f4 <Chip_Clock_Enable>
1a002742:	bd08      	pop	{r3, pc}

1a002744 <Chip_TIMER_DeInit>:
1a002744:	b508      	push	{r3, lr}
1a002746:	f7ff ffe1 	bl	1a00270c <Chip_TIMER_GetClockIndex>
1a00274a:	f7ff fe79 	bl	1a002440 <Chip_Clock_Disable>
1a00274e:	bd08      	pop	{r3, pc}

1a002750 <Chip_TIMER_Reset>:
1a002750:	6842      	ldr	r2, [r0, #4]
1a002752:	2300      	movs	r3, #0
1a002754:	6043      	str	r3, [r0, #4]
1a002756:	2301      	movs	r3, #1
1a002758:	6083      	str	r3, [r0, #8]
1a00275a:	2302      	movs	r3, #2
1a00275c:	6043      	str	r3, [r0, #4]
1a00275e:	6883      	ldr	r3, [r0, #8]
1a002760:	2b00      	cmp	r3, #0
1a002762:	d1fc      	bne.n	1a00275e <Chip_TIMER_Reset+0xe>
1a002764:	6042      	str	r2, [r0, #4]
1a002766:	4770      	bx	lr

1a002768 <Chip_TIMER_ExtMatchControlSet>:
1a002768:	b470      	push	{r4, r5, r6}
1a00276a:	2401      	movs	r4, #1
1a00276c:	fa04 f603 	lsl.w	r6, r4, r3
1a002770:	1c9d      	adds	r5, r3, #2
1a002772:	40a5      	lsls	r5, r4
1a002774:	2403      	movs	r4, #3
1a002776:	40ac      	lsls	r4, r5
1a002778:	4334      	orrs	r4, r6
1a00277a:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
1a00277c:	ea26 0404 	bic.w	r4, r6, r4
1a002780:	63c4      	str	r4, [r0, #60]	; 0x3c
1a002782:	4099      	lsls	r1, r3
1a002784:	430c      	orrs	r4, r1
1a002786:	40aa      	lsls	r2, r5
1a002788:	4314      	orrs	r4, r2
1a00278a:	63c4      	str	r4, [r0, #60]	; 0x3c
1a00278c:	bc70      	pop	{r4, r5, r6}
1a00278e:	4770      	bx	lr

1a002790 <fpuInit>:
1a002790:	b084      	sub	sp, #16
1a002792:	4b10      	ldr	r3, [pc, #64]	; (1a0027d4 <fpuInit+0x44>)
1a002794:	681b      	ldr	r3, [r3, #0]
1a002796:	9302      	str	r3, [sp, #8]
1a002798:	4b0f      	ldr	r3, [pc, #60]	; (1a0027d8 <fpuInit+0x48>)
1a00279a:	681b      	ldr	r3, [r3, #0]
1a00279c:	9301      	str	r3, [sp, #4]
1a00279e:	9a02      	ldr	r2, [sp, #8]
1a0027a0:	4b0e      	ldr	r3, [pc, #56]	; (1a0027dc <fpuInit+0x4c>)
1a0027a2:	429a      	cmp	r2, r3
1a0027a4:	d105      	bne.n	1a0027b2 <fpuInit+0x22>
1a0027a6:	9a01      	ldr	r2, [sp, #4]
1a0027a8:	4b0d      	ldr	r3, [pc, #52]	; (1a0027e0 <fpuInit+0x50>)
1a0027aa:	429a      	cmp	r2, r3
1a0027ac:	d003      	beq.n	1a0027b6 <fpuInit+0x26>
1a0027ae:	2300      	movs	r3, #0
1a0027b0:	e002      	b.n	1a0027b8 <fpuInit+0x28>
1a0027b2:	2300      	movs	r3, #0
1a0027b4:	e000      	b.n	1a0027b8 <fpuInit+0x28>
1a0027b6:	2301      	movs	r3, #1
1a0027b8:	f013 0fff 	tst.w	r3, #255	; 0xff
1a0027bc:	d008      	beq.n	1a0027d0 <fpuInit+0x40>
1a0027be:	4a09      	ldr	r2, [pc, #36]	; (1a0027e4 <fpuInit+0x54>)
1a0027c0:	6813      	ldr	r3, [r2, #0]
1a0027c2:	9303      	str	r3, [sp, #12]
1a0027c4:	9b03      	ldr	r3, [sp, #12]
1a0027c6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
1a0027ca:	9303      	str	r3, [sp, #12]
1a0027cc:	9b03      	ldr	r3, [sp, #12]
1a0027ce:	6013      	str	r3, [r2, #0]
1a0027d0:	b004      	add	sp, #16
1a0027d2:	4770      	bx	lr
1a0027d4:	e000ef40 	.word	0xe000ef40
1a0027d8:	e000ef44 	.word	0xe000ef44
1a0027dc:	10110021 	.word	0x10110021
1a0027e0:	11000011 	.word	0x11000011
1a0027e4:	e000ed88 	.word	0xe000ed88

1a0027e8 <Chip_GPIO_Init>:
1a0027e8:	4770      	bx	lr
1a0027ea:	bf00      	nop

1a0027ec <Chip_GPIO_DeInit>:
1a0027ec:	4770      	bx	lr
1a0027ee:	bf00      	nop

1a0027f0 <ResetISR>:
1a0027f0:	b672      	cpsid	i
1a0027f2:	4a17      	ldr	r2, [pc, #92]	; (1a002850 <ResetISR+0x60>)
1a0027f4:	4b17      	ldr	r3, [pc, #92]	; (1a002854 <ResetISR+0x64>)
1a0027f6:	601a      	str	r2, [r3, #0]
1a0027f8:	4a17      	ldr	r2, [pc, #92]	; (1a002858 <ResetISR+0x68>)
1a0027fa:	3304      	adds	r3, #4
1a0027fc:	601a      	str	r2, [r3, #0]
1a0027fe:	2300      	movs	r3, #0
1a002800:	e005      	b.n	1a00280e <ResetISR+0x1e>
1a002802:	f04f 31ff 	mov.w	r1, #4294967295
1a002806:	4a15      	ldr	r2, [pc, #84]	; (1a00285c <ResetISR+0x6c>)
1a002808:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
1a00280c:	3301      	adds	r3, #1
1a00280e:	2b07      	cmp	r3, #7
1a002810:	d9f7      	bls.n	1a002802 <ResetISR+0x12>
1a002812:	b510      	push	{r4, lr}
1a002814:	b662      	cpsie	i
1a002816:	f7fe fecb 	bl	1a0015b0 <SystemInit>
1a00281a:	4b11      	ldr	r3, [pc, #68]	; (1a002860 <ResetISR+0x70>)
1a00281c:	e007      	b.n	1a00282e <ResetISR+0x3e>
1a00281e:	f103 040c 	add.w	r4, r3, #12
1a002822:	6818      	ldr	r0, [r3, #0]
1a002824:	6859      	ldr	r1, [r3, #4]
1a002826:	689a      	ldr	r2, [r3, #8]
1a002828:	f7fd fcbc 	bl	1a0001a4 <data_init>
1a00282c:	4623      	mov	r3, r4
1a00282e:	4a0d      	ldr	r2, [pc, #52]	; (1a002864 <ResetISR+0x74>)
1a002830:	4293      	cmp	r3, r2
1a002832:	d3f4      	bcc.n	1a00281e <ResetISR+0x2e>
1a002834:	e006      	b.n	1a002844 <ResetISR+0x54>
1a002836:	461c      	mov	r4, r3
1a002838:	f854 0b08 	ldr.w	r0, [r4], #8
1a00283c:	6859      	ldr	r1, [r3, #4]
1a00283e:	f7fd fcbf 	bl	1a0001c0 <bss_init>
1a002842:	4623      	mov	r3, r4
1a002844:	4a08      	ldr	r2, [pc, #32]	; (1a002868 <ResetISR+0x78>)
1a002846:	4293      	cmp	r3, r2
1a002848:	d3f5      	bcc.n	1a002836 <ResetISR+0x46>
1a00284a:	f7fd ff1d 	bl	1a000688 <main>
1a00284e:	e7fe      	b.n	1a00284e <ResetISR+0x5e>
1a002850:	10df1000 	.word	0x10df1000
1a002854:	40053100 	.word	0x40053100
1a002858:	01dff7ff 	.word	0x01dff7ff
1a00285c:	e000e280 	.word	0xe000e280
1a002860:	1a000114 	.word	0x1a000114
1a002864:	1a000150 	.word	0x1a000150
1a002868:	1a000178 	.word	0x1a000178

1a00286c <__aeabi_ldivmod>:
1a00286c:	b97b      	cbnz	r3, 1a00288e <__aeabi_ldivmod+0x22>
1a00286e:	b972      	cbnz	r2, 1a00288e <__aeabi_ldivmod+0x22>
1a002870:	2900      	cmp	r1, #0
1a002872:	bfbe      	ittt	lt
1a002874:	2000      	movlt	r0, #0
1a002876:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
1a00287a:	e006      	blt.n	1a00288a <__aeabi_ldivmod+0x1e>
1a00287c:	bf08      	it	eq
1a00287e:	2800      	cmpeq	r0, #0
1a002880:	bf1c      	itt	ne
1a002882:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
1a002886:	f04f 30ff 	movne.w	r0, #4294967295
1a00288a:	f000 b853 	b.w	1a002934 <__aeabi_idiv0>
1a00288e:	b082      	sub	sp, #8
1a002890:	46ec      	mov	ip, sp
1a002892:	e92d 5000 	stmdb	sp!, {ip, lr}
1a002896:	f000 f81d 	bl	1a0028d4 <__gnu_ldivmod_helper>
1a00289a:	f8dd e004 	ldr.w	lr, [sp, #4]
1a00289e:	b002      	add	sp, #8
1a0028a0:	bc0c      	pop	{r2, r3}
1a0028a2:	4770      	bx	lr

1a0028a4 <__aeabi_uldivmod>:
1a0028a4:	b953      	cbnz	r3, 1a0028bc <__aeabi_uldivmod+0x18>
1a0028a6:	b94a      	cbnz	r2, 1a0028bc <__aeabi_uldivmod+0x18>
1a0028a8:	2900      	cmp	r1, #0
1a0028aa:	bf08      	it	eq
1a0028ac:	2800      	cmpeq	r0, #0
1a0028ae:	bf1c      	itt	ne
1a0028b0:	f04f 31ff 	movne.w	r1, #4294967295
1a0028b4:	f04f 30ff 	movne.w	r0, #4294967295
1a0028b8:	f000 b83c 	b.w	1a002934 <__aeabi_idiv0>
1a0028bc:	b082      	sub	sp, #8
1a0028be:	46ec      	mov	ip, sp
1a0028c0:	e92d 5000 	stmdb	sp!, {ip, lr}
1a0028c4:	f000 f81e 	bl	1a002904 <__gnu_uldivmod_helper>
1a0028c8:	f8dd e004 	ldr.w	lr, [sp, #4]
1a0028cc:	b002      	add	sp, #8
1a0028ce:	bc0c      	pop	{r2, r3}
1a0028d0:	4770      	bx	lr
1a0028d2:	bf00      	nop

1a0028d4 <__gnu_ldivmod_helper>:
1a0028d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0028d8:	9c06      	ldr	r4, [sp, #24]
1a0028da:	4615      	mov	r5, r2
1a0028dc:	4606      	mov	r6, r0
1a0028de:	460f      	mov	r7, r1
1a0028e0:	4698      	mov	r8, r3
1a0028e2:	f000 f829 	bl	1a002938 <__divdi3>
1a0028e6:	fb05 f301 	mul.w	r3, r5, r1
1a0028ea:	fb00 3808 	mla	r8, r0, r8, r3
1a0028ee:	fba5 2300 	umull	r2, r3, r5, r0
1a0028f2:	1ab2      	subs	r2, r6, r2
1a0028f4:	4443      	add	r3, r8
1a0028f6:	eb67 0303 	sbc.w	r3, r7, r3
1a0028fa:	e9c4 2300 	strd	r2, r3, [r4]
1a0028fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002902:	bf00      	nop

1a002904 <__gnu_uldivmod_helper>:
1a002904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002908:	9c06      	ldr	r4, [sp, #24]
1a00290a:	4690      	mov	r8, r2
1a00290c:	4606      	mov	r6, r0
1a00290e:	460f      	mov	r7, r1
1a002910:	461d      	mov	r5, r3
1a002912:	f000 f95f 	bl	1a002bd4 <__udivdi3>
1a002916:	fb00 f505 	mul.w	r5, r0, r5
1a00291a:	fba0 2308 	umull	r2, r3, r0, r8
1a00291e:	fb08 5501 	mla	r5, r8, r1, r5
1a002922:	1ab2      	subs	r2, r6, r2
1a002924:	442b      	add	r3, r5
1a002926:	eb67 0303 	sbc.w	r3, r7, r3
1a00292a:	e9c4 2300 	strd	r2, r3, [r4]
1a00292e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002932:	bf00      	nop

1a002934 <__aeabi_idiv0>:
1a002934:	4770      	bx	lr
1a002936:	bf00      	nop

1a002938 <__divdi3>:
1a002938:	2900      	cmp	r1, #0
1a00293a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a00293e:	f2c0 80a6 	blt.w	1a002a8e <__divdi3+0x156>
1a002942:	2600      	movs	r6, #0
1a002944:	2b00      	cmp	r3, #0
1a002946:	f2c0 809c 	blt.w	1a002a82 <__divdi3+0x14a>
1a00294a:	4688      	mov	r8, r1
1a00294c:	4694      	mov	ip, r2
1a00294e:	469e      	mov	lr, r3
1a002950:	4615      	mov	r5, r2
1a002952:	4604      	mov	r4, r0
1a002954:	460f      	mov	r7, r1
1a002956:	2b00      	cmp	r3, #0
1a002958:	d13d      	bne.n	1a0029d6 <__divdi3+0x9e>
1a00295a:	428a      	cmp	r2, r1
1a00295c:	d959      	bls.n	1a002a12 <__divdi3+0xda>
1a00295e:	fab2 f382 	clz	r3, r2
1a002962:	b13b      	cbz	r3, 1a002974 <__divdi3+0x3c>
1a002964:	f1c3 0220 	rsb	r2, r3, #32
1a002968:	409f      	lsls	r7, r3
1a00296a:	fa20 f202 	lsr.w	r2, r0, r2
1a00296e:	409d      	lsls	r5, r3
1a002970:	4317      	orrs	r7, r2
1a002972:	409c      	lsls	r4, r3
1a002974:	0c29      	lsrs	r1, r5, #16
1a002976:	0c22      	lsrs	r2, r4, #16
1a002978:	fbb7 fef1 	udiv	lr, r7, r1
1a00297c:	b2a8      	uxth	r0, r5
1a00297e:	fb01 771e 	mls	r7, r1, lr, r7
1a002982:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
1a002986:	fb00 f30e 	mul.w	r3, r0, lr
1a00298a:	42bb      	cmp	r3, r7
1a00298c:	d90a      	bls.n	1a0029a4 <__divdi3+0x6c>
1a00298e:	197f      	adds	r7, r7, r5
1a002990:	f10e 32ff 	add.w	r2, lr, #4294967295
1a002994:	f080 8105 	bcs.w	1a002ba2 <__divdi3+0x26a>
1a002998:	42bb      	cmp	r3, r7
1a00299a:	f240 8102 	bls.w	1a002ba2 <__divdi3+0x26a>
1a00299e:	f1ae 0e02 	sub.w	lr, lr, #2
1a0029a2:	442f      	add	r7, r5
1a0029a4:	1aff      	subs	r7, r7, r3
1a0029a6:	b2a4      	uxth	r4, r4
1a0029a8:	fbb7 f3f1 	udiv	r3, r7, r1
1a0029ac:	fb01 7713 	mls	r7, r1, r3, r7
1a0029b0:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
1a0029b4:	fb00 f003 	mul.w	r0, r0, r3
1a0029b8:	42b8      	cmp	r0, r7
1a0029ba:	d908      	bls.n	1a0029ce <__divdi3+0x96>
1a0029bc:	197f      	adds	r7, r7, r5
1a0029be:	f103 32ff 	add.w	r2, r3, #4294967295
1a0029c2:	f080 80f0 	bcs.w	1a002ba6 <__divdi3+0x26e>
1a0029c6:	42b8      	cmp	r0, r7
1a0029c8:	f240 80ed 	bls.w	1a002ba6 <__divdi3+0x26e>
1a0029cc:	3b02      	subs	r3, #2
1a0029ce:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
1a0029d2:	2200      	movs	r2, #0
1a0029d4:	e003      	b.n	1a0029de <__divdi3+0xa6>
1a0029d6:	428b      	cmp	r3, r1
1a0029d8:	d90f      	bls.n	1a0029fa <__divdi3+0xc2>
1a0029da:	2200      	movs	r2, #0
1a0029dc:	4613      	mov	r3, r2
1a0029de:	1c34      	adds	r4, r6, #0
1a0029e0:	bf18      	it	ne
1a0029e2:	2401      	movne	r4, #1
1a0029e4:	4260      	negs	r0, r4
1a0029e6:	f04f 0500 	mov.w	r5, #0
1a0029ea:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
1a0029ee:	4058      	eors	r0, r3
1a0029f0:	4051      	eors	r1, r2
1a0029f2:	1900      	adds	r0, r0, r4
1a0029f4:	4169      	adcs	r1, r5
1a0029f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a0029fa:	fab3 f283 	clz	r2, r3
1a0029fe:	2a00      	cmp	r2, #0
1a002a00:	f040 8086 	bne.w	1a002b10 <__divdi3+0x1d8>
1a002a04:	428b      	cmp	r3, r1
1a002a06:	d302      	bcc.n	1a002a0e <__divdi3+0xd6>
1a002a08:	4584      	cmp	ip, r0
1a002a0a:	f200 80db 	bhi.w	1a002bc4 <__divdi3+0x28c>
1a002a0e:	2301      	movs	r3, #1
1a002a10:	e7e5      	b.n	1a0029de <__divdi3+0xa6>
1a002a12:	b912      	cbnz	r2, 1a002a1a <__divdi3+0xe2>
1a002a14:	2301      	movs	r3, #1
1a002a16:	fbb3 f5f2 	udiv	r5, r3, r2
1a002a1a:	fab5 f085 	clz	r0, r5
1a002a1e:	2800      	cmp	r0, #0
1a002a20:	d13b      	bne.n	1a002a9a <__divdi3+0x162>
1a002a22:	1b78      	subs	r0, r7, r5
1a002a24:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002a28:	fa1f fc85 	uxth.w	ip, r5
1a002a2c:	2201      	movs	r2, #1
1a002a2e:	fbb0 f8fe 	udiv	r8, r0, lr
1a002a32:	0c21      	lsrs	r1, r4, #16
1a002a34:	fb0e 0718 	mls	r7, lr, r8, r0
1a002a38:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
1a002a3c:	fb0c f308 	mul.w	r3, ip, r8
1a002a40:	42bb      	cmp	r3, r7
1a002a42:	d907      	bls.n	1a002a54 <__divdi3+0x11c>
1a002a44:	197f      	adds	r7, r7, r5
1a002a46:	f108 31ff 	add.w	r1, r8, #4294967295
1a002a4a:	d202      	bcs.n	1a002a52 <__divdi3+0x11a>
1a002a4c:	42bb      	cmp	r3, r7
1a002a4e:	f200 80bd 	bhi.w	1a002bcc <__divdi3+0x294>
1a002a52:	4688      	mov	r8, r1
1a002a54:	1aff      	subs	r7, r7, r3
1a002a56:	b2a4      	uxth	r4, r4
1a002a58:	fbb7 f3fe 	udiv	r3, r7, lr
1a002a5c:	fb0e 7713 	mls	r7, lr, r3, r7
1a002a60:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
1a002a64:	fb0c fc03 	mul.w	ip, ip, r3
1a002a68:	45bc      	cmp	ip, r7
1a002a6a:	d907      	bls.n	1a002a7c <__divdi3+0x144>
1a002a6c:	197f      	adds	r7, r7, r5
1a002a6e:	f103 31ff 	add.w	r1, r3, #4294967295
1a002a72:	d202      	bcs.n	1a002a7a <__divdi3+0x142>
1a002a74:	45bc      	cmp	ip, r7
1a002a76:	f200 80a7 	bhi.w	1a002bc8 <__divdi3+0x290>
1a002a7a:	460b      	mov	r3, r1
1a002a7c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a002a80:	e7ad      	b.n	1a0029de <__divdi3+0xa6>
1a002a82:	4252      	negs	r2, r2
1a002a84:	ea6f 0606 	mvn.w	r6, r6
1a002a88:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1a002a8c:	e75d      	b.n	1a00294a <__divdi3+0x12>
1a002a8e:	4240      	negs	r0, r0
1a002a90:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a002a94:	f04f 36ff 	mov.w	r6, #4294967295
1a002a98:	e754      	b.n	1a002944 <__divdi3+0xc>
1a002a9a:	f1c0 0220 	rsb	r2, r0, #32
1a002a9e:	fa24 f102 	lsr.w	r1, r4, r2
1a002aa2:	fa07 f300 	lsl.w	r3, r7, r0
1a002aa6:	4085      	lsls	r5, r0
1a002aa8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002aac:	40d7      	lsrs	r7, r2
1a002aae:	4319      	orrs	r1, r3
1a002ab0:	fbb7 f2fe 	udiv	r2, r7, lr
1a002ab4:	0c0b      	lsrs	r3, r1, #16
1a002ab6:	fb0e 7712 	mls	r7, lr, r2, r7
1a002aba:	fa1f fc85 	uxth.w	ip, r5
1a002abe:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
1a002ac2:	fb0c f702 	mul.w	r7, ip, r2
1a002ac6:	429f      	cmp	r7, r3
1a002ac8:	fa04 f400 	lsl.w	r4, r4, r0
1a002acc:	d907      	bls.n	1a002ade <__divdi3+0x1a6>
1a002ace:	195b      	adds	r3, r3, r5
1a002ad0:	f102 30ff 	add.w	r0, r2, #4294967295
1a002ad4:	d274      	bcs.n	1a002bc0 <__divdi3+0x288>
1a002ad6:	429f      	cmp	r7, r3
1a002ad8:	d972      	bls.n	1a002bc0 <__divdi3+0x288>
1a002ada:	3a02      	subs	r2, #2
1a002adc:	442b      	add	r3, r5
1a002ade:	1bdf      	subs	r7, r3, r7
1a002ae0:	b289      	uxth	r1, r1
1a002ae2:	fbb7 f8fe 	udiv	r8, r7, lr
1a002ae6:	fb0e 7318 	mls	r3, lr, r8, r7
1a002aea:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
1a002aee:	fb0c f708 	mul.w	r7, ip, r8
1a002af2:	429f      	cmp	r7, r3
1a002af4:	d908      	bls.n	1a002b08 <__divdi3+0x1d0>
1a002af6:	195b      	adds	r3, r3, r5
1a002af8:	f108 31ff 	add.w	r1, r8, #4294967295
1a002afc:	d25c      	bcs.n	1a002bb8 <__divdi3+0x280>
1a002afe:	429f      	cmp	r7, r3
1a002b00:	d95a      	bls.n	1a002bb8 <__divdi3+0x280>
1a002b02:	f1a8 0802 	sub.w	r8, r8, #2
1a002b06:	442b      	add	r3, r5
1a002b08:	1bd8      	subs	r0, r3, r7
1a002b0a:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
1a002b0e:	e78e      	b.n	1a002a2e <__divdi3+0xf6>
1a002b10:	f1c2 0320 	rsb	r3, r2, #32
1a002b14:	fa2c f103 	lsr.w	r1, ip, r3
1a002b18:	fa0e fe02 	lsl.w	lr, lr, r2
1a002b1c:	fa20 f703 	lsr.w	r7, r0, r3
1a002b20:	ea41 0e0e 	orr.w	lr, r1, lr
1a002b24:	fa08 f002 	lsl.w	r0, r8, r2
1a002b28:	fa28 f103 	lsr.w	r1, r8, r3
1a002b2c:	ea4f 451e 	mov.w	r5, lr, lsr #16
1a002b30:	4338      	orrs	r0, r7
1a002b32:	fbb1 f8f5 	udiv	r8, r1, r5
1a002b36:	0c03      	lsrs	r3, r0, #16
1a002b38:	fb05 1118 	mls	r1, r5, r8, r1
1a002b3c:	fa1f f78e 	uxth.w	r7, lr
1a002b40:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
1a002b44:	fb07 f308 	mul.w	r3, r7, r8
1a002b48:	428b      	cmp	r3, r1
1a002b4a:	fa0c fc02 	lsl.w	ip, ip, r2
1a002b4e:	d909      	bls.n	1a002b64 <__divdi3+0x22c>
1a002b50:	eb11 010e 	adds.w	r1, r1, lr
1a002b54:	f108 39ff 	add.w	r9, r8, #4294967295
1a002b58:	d230      	bcs.n	1a002bbc <__divdi3+0x284>
1a002b5a:	428b      	cmp	r3, r1
1a002b5c:	d92e      	bls.n	1a002bbc <__divdi3+0x284>
1a002b5e:	f1a8 0802 	sub.w	r8, r8, #2
1a002b62:	4471      	add	r1, lr
1a002b64:	1ac9      	subs	r1, r1, r3
1a002b66:	b280      	uxth	r0, r0
1a002b68:	fbb1 f3f5 	udiv	r3, r1, r5
1a002b6c:	fb05 1113 	mls	r1, r5, r3, r1
1a002b70:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
1a002b74:	fb07 f703 	mul.w	r7, r7, r3
1a002b78:	428f      	cmp	r7, r1
1a002b7a:	d908      	bls.n	1a002b8e <__divdi3+0x256>
1a002b7c:	eb11 010e 	adds.w	r1, r1, lr
1a002b80:	f103 30ff 	add.w	r0, r3, #4294967295
1a002b84:	d216      	bcs.n	1a002bb4 <__divdi3+0x27c>
1a002b86:	428f      	cmp	r7, r1
1a002b88:	d914      	bls.n	1a002bb4 <__divdi3+0x27c>
1a002b8a:	3b02      	subs	r3, #2
1a002b8c:	4471      	add	r1, lr
1a002b8e:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a002b92:	1bc9      	subs	r1, r1, r7
1a002b94:	fba3 890c 	umull	r8, r9, r3, ip
1a002b98:	4549      	cmp	r1, r9
1a002b9a:	d309      	bcc.n	1a002bb0 <__divdi3+0x278>
1a002b9c:	d005      	beq.n	1a002baa <__divdi3+0x272>
1a002b9e:	2200      	movs	r2, #0
1a002ba0:	e71d      	b.n	1a0029de <__divdi3+0xa6>
1a002ba2:	4696      	mov	lr, r2
1a002ba4:	e6fe      	b.n	1a0029a4 <__divdi3+0x6c>
1a002ba6:	4613      	mov	r3, r2
1a002ba8:	e711      	b.n	1a0029ce <__divdi3+0x96>
1a002baa:	4094      	lsls	r4, r2
1a002bac:	4544      	cmp	r4, r8
1a002bae:	d2f6      	bcs.n	1a002b9e <__divdi3+0x266>
1a002bb0:	3b01      	subs	r3, #1
1a002bb2:	e7f4      	b.n	1a002b9e <__divdi3+0x266>
1a002bb4:	4603      	mov	r3, r0
1a002bb6:	e7ea      	b.n	1a002b8e <__divdi3+0x256>
1a002bb8:	4688      	mov	r8, r1
1a002bba:	e7a5      	b.n	1a002b08 <__divdi3+0x1d0>
1a002bbc:	46c8      	mov	r8, r9
1a002bbe:	e7d1      	b.n	1a002b64 <__divdi3+0x22c>
1a002bc0:	4602      	mov	r2, r0
1a002bc2:	e78c      	b.n	1a002ade <__divdi3+0x1a6>
1a002bc4:	4613      	mov	r3, r2
1a002bc6:	e70a      	b.n	1a0029de <__divdi3+0xa6>
1a002bc8:	3b02      	subs	r3, #2
1a002bca:	e757      	b.n	1a002a7c <__divdi3+0x144>
1a002bcc:	f1a8 0802 	sub.w	r8, r8, #2
1a002bd0:	442f      	add	r7, r5
1a002bd2:	e73f      	b.n	1a002a54 <__divdi3+0x11c>

1a002bd4 <__udivdi3>:
1a002bd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002bd8:	2b00      	cmp	r3, #0
1a002bda:	d144      	bne.n	1a002c66 <__udivdi3+0x92>
1a002bdc:	428a      	cmp	r2, r1
1a002bde:	4615      	mov	r5, r2
1a002be0:	4604      	mov	r4, r0
1a002be2:	d94f      	bls.n	1a002c84 <__udivdi3+0xb0>
1a002be4:	fab2 f782 	clz	r7, r2
1a002be8:	460e      	mov	r6, r1
1a002bea:	b14f      	cbz	r7, 1a002c00 <__udivdi3+0x2c>
1a002bec:	f1c7 0320 	rsb	r3, r7, #32
1a002bf0:	40b9      	lsls	r1, r7
1a002bf2:	fa20 f603 	lsr.w	r6, r0, r3
1a002bf6:	fa02 f507 	lsl.w	r5, r2, r7
1a002bfa:	430e      	orrs	r6, r1
1a002bfc:	fa00 f407 	lsl.w	r4, r0, r7
1a002c00:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002c04:	0c23      	lsrs	r3, r4, #16
1a002c06:	fbb6 f0fe 	udiv	r0, r6, lr
1a002c0a:	b2af      	uxth	r7, r5
1a002c0c:	fb0e 6110 	mls	r1, lr, r0, r6
1a002c10:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a002c14:	fb07 f100 	mul.w	r1, r7, r0
1a002c18:	4299      	cmp	r1, r3
1a002c1a:	d909      	bls.n	1a002c30 <__udivdi3+0x5c>
1a002c1c:	195b      	adds	r3, r3, r5
1a002c1e:	f100 32ff 	add.w	r2, r0, #4294967295
1a002c22:	f080 80ec 	bcs.w	1a002dfe <__udivdi3+0x22a>
1a002c26:	4299      	cmp	r1, r3
1a002c28:	f240 80e9 	bls.w	1a002dfe <__udivdi3+0x22a>
1a002c2c:	3802      	subs	r0, #2
1a002c2e:	442b      	add	r3, r5
1a002c30:	1a5a      	subs	r2, r3, r1
1a002c32:	b2a4      	uxth	r4, r4
1a002c34:	fbb2 f3fe 	udiv	r3, r2, lr
1a002c38:	fb0e 2213 	mls	r2, lr, r3, r2
1a002c3c:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
1a002c40:	fb07 f703 	mul.w	r7, r7, r3
1a002c44:	4297      	cmp	r7, r2
1a002c46:	d908      	bls.n	1a002c5a <__udivdi3+0x86>
1a002c48:	1952      	adds	r2, r2, r5
1a002c4a:	f103 31ff 	add.w	r1, r3, #4294967295
1a002c4e:	f080 80d8 	bcs.w	1a002e02 <__udivdi3+0x22e>
1a002c52:	4297      	cmp	r7, r2
1a002c54:	f240 80d5 	bls.w	1a002e02 <__udivdi3+0x22e>
1a002c58:	3b02      	subs	r3, #2
1a002c5a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
1a002c5e:	2600      	movs	r6, #0
1a002c60:	4631      	mov	r1, r6
1a002c62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002c66:	428b      	cmp	r3, r1
1a002c68:	d847      	bhi.n	1a002cfa <__udivdi3+0x126>
1a002c6a:	fab3 f683 	clz	r6, r3
1a002c6e:	2e00      	cmp	r6, #0
1a002c70:	d148      	bne.n	1a002d04 <__udivdi3+0x130>
1a002c72:	428b      	cmp	r3, r1
1a002c74:	d302      	bcc.n	1a002c7c <__udivdi3+0xa8>
1a002c76:	4282      	cmp	r2, r0
1a002c78:	f200 80cd 	bhi.w	1a002e16 <__udivdi3+0x242>
1a002c7c:	2001      	movs	r0, #1
1a002c7e:	4631      	mov	r1, r6
1a002c80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002c84:	b912      	cbnz	r2, 1a002c8c <__udivdi3+0xb8>
1a002c86:	2501      	movs	r5, #1
1a002c88:	fbb5 f5f2 	udiv	r5, r5, r2
1a002c8c:	fab5 f885 	clz	r8, r5
1a002c90:	f1b8 0f00 	cmp.w	r8, #0
1a002c94:	d177      	bne.n	1a002d86 <__udivdi3+0x1b2>
1a002c96:	1b4a      	subs	r2, r1, r5
1a002c98:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002c9c:	b2af      	uxth	r7, r5
1a002c9e:	2601      	movs	r6, #1
1a002ca0:	fbb2 f0fe 	udiv	r0, r2, lr
1a002ca4:	0c23      	lsrs	r3, r4, #16
1a002ca6:	fb0e 2110 	mls	r1, lr, r0, r2
1a002caa:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
1a002cae:	fb07 f300 	mul.w	r3, r7, r0
1a002cb2:	428b      	cmp	r3, r1
1a002cb4:	d907      	bls.n	1a002cc6 <__udivdi3+0xf2>
1a002cb6:	1949      	adds	r1, r1, r5
1a002cb8:	f100 32ff 	add.w	r2, r0, #4294967295
1a002cbc:	d202      	bcs.n	1a002cc4 <__udivdi3+0xf0>
1a002cbe:	428b      	cmp	r3, r1
1a002cc0:	f200 80ba 	bhi.w	1a002e38 <__udivdi3+0x264>
1a002cc4:	4610      	mov	r0, r2
1a002cc6:	1ac9      	subs	r1, r1, r3
1a002cc8:	b2a4      	uxth	r4, r4
1a002cca:	fbb1 f3fe 	udiv	r3, r1, lr
1a002cce:	fb0e 1113 	mls	r1, lr, r3, r1
1a002cd2:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
1a002cd6:	fb07 f703 	mul.w	r7, r7, r3
1a002cda:	42a7      	cmp	r7, r4
1a002cdc:	d908      	bls.n	1a002cf0 <__udivdi3+0x11c>
1a002cde:	1964      	adds	r4, r4, r5
1a002ce0:	f103 32ff 	add.w	r2, r3, #4294967295
1a002ce4:	f080 808f 	bcs.w	1a002e06 <__udivdi3+0x232>
1a002ce8:	42a7      	cmp	r7, r4
1a002cea:	f240 808c 	bls.w	1a002e06 <__udivdi3+0x232>
1a002cee:	3b02      	subs	r3, #2
1a002cf0:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
1a002cf4:	4631      	mov	r1, r6
1a002cf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002cfa:	2600      	movs	r6, #0
1a002cfc:	4630      	mov	r0, r6
1a002cfe:	4631      	mov	r1, r6
1a002d00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002d04:	f1c6 0420 	rsb	r4, r6, #32
1a002d08:	fa22 f504 	lsr.w	r5, r2, r4
1a002d0c:	40b3      	lsls	r3, r6
1a002d0e:	432b      	orrs	r3, r5
1a002d10:	fa20 fc04 	lsr.w	ip, r0, r4
1a002d14:	fa01 f706 	lsl.w	r7, r1, r6
1a002d18:	fa21 f504 	lsr.w	r5, r1, r4
1a002d1c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
1a002d20:	ea4c 0707 	orr.w	r7, ip, r7
1a002d24:	fbb5 f8fe 	udiv	r8, r5, lr
1a002d28:	0c39      	lsrs	r1, r7, #16
1a002d2a:	fb0e 5518 	mls	r5, lr, r8, r5
1a002d2e:	fa1f fc83 	uxth.w	ip, r3
1a002d32:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
1a002d36:	fb0c f108 	mul.w	r1, ip, r8
1a002d3a:	42a9      	cmp	r1, r5
1a002d3c:	fa02 f206 	lsl.w	r2, r2, r6
1a002d40:	d904      	bls.n	1a002d4c <__udivdi3+0x178>
1a002d42:	18ed      	adds	r5, r5, r3
1a002d44:	f108 34ff 	add.w	r4, r8, #4294967295
1a002d48:	d367      	bcc.n	1a002e1a <__udivdi3+0x246>
1a002d4a:	46a0      	mov	r8, r4
1a002d4c:	1a6d      	subs	r5, r5, r1
1a002d4e:	b2bf      	uxth	r7, r7
1a002d50:	fbb5 f4fe 	udiv	r4, r5, lr
1a002d54:	fb0e 5514 	mls	r5, lr, r4, r5
1a002d58:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
1a002d5c:	fb0c fc04 	mul.w	ip, ip, r4
1a002d60:	458c      	cmp	ip, r1
1a002d62:	d904      	bls.n	1a002d6e <__udivdi3+0x19a>
1a002d64:	18c9      	adds	r1, r1, r3
1a002d66:	f104 35ff 	add.w	r5, r4, #4294967295
1a002d6a:	d35c      	bcc.n	1a002e26 <__udivdi3+0x252>
1a002d6c:	462c      	mov	r4, r5
1a002d6e:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
1a002d72:	ebcc 0101 	rsb	r1, ip, r1
1a002d76:	fba4 2302 	umull	r2, r3, r4, r2
1a002d7a:	4299      	cmp	r1, r3
1a002d7c:	d348      	bcc.n	1a002e10 <__udivdi3+0x23c>
1a002d7e:	d044      	beq.n	1a002e0a <__udivdi3+0x236>
1a002d80:	4620      	mov	r0, r4
1a002d82:	2600      	movs	r6, #0
1a002d84:	e76c      	b.n	1a002c60 <__udivdi3+0x8c>
1a002d86:	f1c8 0420 	rsb	r4, r8, #32
1a002d8a:	fa01 f308 	lsl.w	r3, r1, r8
1a002d8e:	fa05 f508 	lsl.w	r5, r5, r8
1a002d92:	fa20 f704 	lsr.w	r7, r0, r4
1a002d96:	40e1      	lsrs	r1, r4
1a002d98:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002d9c:	431f      	orrs	r7, r3
1a002d9e:	fbb1 f6fe 	udiv	r6, r1, lr
1a002da2:	0c3a      	lsrs	r2, r7, #16
1a002da4:	fb0e 1116 	mls	r1, lr, r6, r1
1a002da8:	fa1f fc85 	uxth.w	ip, r5
1a002dac:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
1a002db0:	fb0c f206 	mul.w	r2, ip, r6
1a002db4:	429a      	cmp	r2, r3
1a002db6:	fa00 f408 	lsl.w	r4, r0, r8
1a002dba:	d907      	bls.n	1a002dcc <__udivdi3+0x1f8>
1a002dbc:	195b      	adds	r3, r3, r5
1a002dbe:	f106 31ff 	add.w	r1, r6, #4294967295
1a002dc2:	d237      	bcs.n	1a002e34 <__udivdi3+0x260>
1a002dc4:	429a      	cmp	r2, r3
1a002dc6:	d935      	bls.n	1a002e34 <__udivdi3+0x260>
1a002dc8:	3e02      	subs	r6, #2
1a002dca:	442b      	add	r3, r5
1a002dcc:	1a9b      	subs	r3, r3, r2
1a002dce:	b2bf      	uxth	r7, r7
1a002dd0:	fbb3 f0fe 	udiv	r0, r3, lr
1a002dd4:	fb0e 3310 	mls	r3, lr, r0, r3
1a002dd8:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
1a002ddc:	fb0c f100 	mul.w	r1, ip, r0
1a002de0:	4299      	cmp	r1, r3
1a002de2:	d907      	bls.n	1a002df4 <__udivdi3+0x220>
1a002de4:	195b      	adds	r3, r3, r5
1a002de6:	f100 32ff 	add.w	r2, r0, #4294967295
1a002dea:	d221      	bcs.n	1a002e30 <__udivdi3+0x25c>
1a002dec:	4299      	cmp	r1, r3
1a002dee:	d91f      	bls.n	1a002e30 <__udivdi3+0x25c>
1a002df0:	3802      	subs	r0, #2
1a002df2:	442b      	add	r3, r5
1a002df4:	1a5a      	subs	r2, r3, r1
1a002df6:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
1a002dfa:	4667      	mov	r7, ip
1a002dfc:	e750      	b.n	1a002ca0 <__udivdi3+0xcc>
1a002dfe:	4610      	mov	r0, r2
1a002e00:	e716      	b.n	1a002c30 <__udivdi3+0x5c>
1a002e02:	460b      	mov	r3, r1
1a002e04:	e729      	b.n	1a002c5a <__udivdi3+0x86>
1a002e06:	4613      	mov	r3, r2
1a002e08:	e772      	b.n	1a002cf0 <__udivdi3+0x11c>
1a002e0a:	40b0      	lsls	r0, r6
1a002e0c:	4290      	cmp	r0, r2
1a002e0e:	d2b7      	bcs.n	1a002d80 <__udivdi3+0x1ac>
1a002e10:	1e60      	subs	r0, r4, #1
1a002e12:	2600      	movs	r6, #0
1a002e14:	e724      	b.n	1a002c60 <__udivdi3+0x8c>
1a002e16:	4630      	mov	r0, r6
1a002e18:	e722      	b.n	1a002c60 <__udivdi3+0x8c>
1a002e1a:	42a9      	cmp	r1, r5
1a002e1c:	d995      	bls.n	1a002d4a <__udivdi3+0x176>
1a002e1e:	f1a8 0802 	sub.w	r8, r8, #2
1a002e22:	441d      	add	r5, r3
1a002e24:	e792      	b.n	1a002d4c <__udivdi3+0x178>
1a002e26:	458c      	cmp	ip, r1
1a002e28:	d9a0      	bls.n	1a002d6c <__udivdi3+0x198>
1a002e2a:	3c02      	subs	r4, #2
1a002e2c:	4419      	add	r1, r3
1a002e2e:	e79e      	b.n	1a002d6e <__udivdi3+0x19a>
1a002e30:	4610      	mov	r0, r2
1a002e32:	e7df      	b.n	1a002df4 <__udivdi3+0x220>
1a002e34:	460e      	mov	r6, r1
1a002e36:	e7c9      	b.n	1a002dcc <__udivdi3+0x1f8>
1a002e38:	3802      	subs	r0, #2
1a002e3a:	4429      	add	r1, r5
1a002e3c:	e743      	b.n	1a002cc6 <__udivdi3+0xf2>
1a002e3e:	bf00      	nop

1a002e40 <memcpy>:
1a002e40:	b510      	push	{r4, lr}
1a002e42:	1e43      	subs	r3, r0, #1
1a002e44:	440a      	add	r2, r1
1a002e46:	4291      	cmp	r1, r2
1a002e48:	d004      	beq.n	1a002e54 <memcpy+0x14>
1a002e4a:	f811 4b01 	ldrb.w	r4, [r1], #1
1a002e4e:	f803 4f01 	strb.w	r4, [r3, #1]!
1a002e52:	e7f8      	b.n	1a002e46 <memcpy+0x6>
1a002e54:	bd10      	pop	{r4, pc}

1a002e56 <memset>:
1a002e56:	4402      	add	r2, r0
1a002e58:	4603      	mov	r3, r0
1a002e5a:	4293      	cmp	r3, r2
1a002e5c:	d002      	beq.n	1a002e64 <memset+0xe>
1a002e5e:	f803 1b01 	strb.w	r1, [r3], #1
1a002e62:	e7fa      	b.n	1a002e5a <memset+0x4>
1a002e64:	4770      	bx	lr
1a002e66:	0000      	movs	r0, r0
1a002e68:	69726550 	.word	0x69726550
1a002e6c:	206f646f 	.word	0x206f646f
1a002e70:	75746361 	.word	0x75746361
1a002e74:	7a696c61 	.word	0x7a696c61
1a002e78:	006f6461 	.word	0x006f6461
1a002e7c:	2064654c 	.word	0x2064654c
1a002e80:	69746361 	.word	0x69746361
1a002e84:	61206f76 	.word	0x61206f76
1a002e88:	61757463 	.word	0x61757463
1a002e8c:	617a696c 	.word	0x617a696c
1a002e90:	00006f64 	.word	0x00006f64
1a002e94:	616d6f43 	.word	0x616d6f43
1a002e98:	206f646e 	.word	0x206f646e
1a002e9c:	72206f6e 	.word	0x72206f6e
1a002ea0:	6e6f6365 	.word	0x6e6f6365
1a002ea4:	6469636f 	.word	0x6469636f
1a002ea8:	0000006f 	.word	0x0000006f
1a002eac:	54524155 	.word	0x54524155
1a002eb0:	4253555f 	.word	0x4253555f
1a002eb4:	6e6f6320 	.word	0x6e6f6320
1a002eb8:	75676966 	.word	0x75676966
1a002ebc:	61646172 	.word	0x61646172
1a002ec0:	000d0a2e 	.word	0x000d0a2e

1a002ec4 <timer_sd>:
1a002ec4:	40084000 00000020 0000000c 40085000     .@.@ ........P.@
1a002ed4:	00000021 0000000d 400c3000 00000022     !........0.@"...
1a002ee4:	0000000e 400c4000 00000023 0000000f     .....@.@#.......
1a002ef4:	00000a0d 7778797a 73747576 6f707172     ....zyxwvutsrqpo
1a002f04:	6b6c6d6e 6768696a 63646566 38396162     nmlkjihgfedcba98
1a002f14:	34353637 30313233 34333231 38373635     7654321012345678
1a002f24:	63626139 67666564 6b6a6968 6f6e6d6c     9abcdefghijklmno
1a002f34:	73727170 77767574 007a7978 33323130     pqrstuvwxyz.0123
1a002f44:	37363534 42413938 46454443 00000000     456789ABCDEF....

1a002f54 <gpioPinsConfig>:
1a002f54:	02000104 00050701 05010d03 04080100     ................
1a002f64:	02020002 02000304 00000403 04070002     ................
1a002f74:	030c0300 09050402 05040103 04030208     ................
1a002f84:	04020305 06040504 0802000c 03000b06     ................
1a002f94:	00090607 07060503 060f0504 03030004     ................
1a002fa4:	02000404 00050404 06040502 04060200     ................
1a002fb4:	0c050408 05040a04 0003010e 14010a00     ................
1a002fc4:	010f0000 0d000012 00001101 0010010c     ................
1a002fd4:	07070300 000f0300 01000001 00000000     ................
1a002fe4:	000a0600 08060603 06100504 04030005     ................
1a002ff4:	03000106 04090400 04010d05 010b0000     ................
1a003004:	0200000f 00000001 00010104 02010800     ................
1a003014:	01090000 09010006 05040002 04010200     ................
1a003024:	02020105 02020504 0e00000a 01000b02     ................
1a003034:	000c020b 00040c01 04000200 01020001     ................
1a003044:	02000204 00030402 03070302 070b0300     ................
1a003054:	0c030004 03000507 0006070d 01020e03     ................
1a003064:	04010504 06020006 02000504 00040405     ................
1a003074:	08040402 040c0504 0d050409 05040a04     ................
1a003084:	0005010e 00000801                       ........

1a00308c <gpioLEDBits>:
1a00308c:	0b010e00 00050c01 02050105 12376000     .............`7.
1a00309c:	00005634                                4V..

1a0030a0 <OscRateIn>:
1a0030a0:	00b71b00                                ....

1a0030a4 <ExtRateIn>:
1a0030a4:	00000000                                ....

1a0030a8 <pinmuxing>:
1a0030a8:	00400a02 00400b02 00400c02 00440002     ..@...@...@...D.
1a0030b8:	00440102 00440202 00520302 00520402     ..D...D...R...R.
1a0030c8:	00520509 00570609 00570206 00500001     ..R...W...W...P.
1a0030d8:	00500101 00500201 00500601 00f30f01     ..P...P...P.....
1a0030e8:	00f71001 00f31101 00b31201 00f01301     ................
1a0030f8:	00b31401 00b60707 00f20000 00b60100     ................

1a003108 <InitClkStates>:
1a003108:	00010308 00010307 01010f01              ............

1a003114 <UART_PClock>:
1a003114:	00820081 00a200a1                       ........

1a00311c <UART_BClock>:
1a00311c:	01a201c2 01620182                       ......b.

1a003124 <usbPLLSetup>:
1a003124:	0000601d 06167ffa 00000000 00000000     .`..............
1a003134:	1c9c3800                                .8..

1a003138 <periph_to_base>:
1a003138:	00050000 0020000a 00090024 00400040     ...... .$...@.@.
1a003148:	00600005 000400a6 00c300c0 00e00002     ..`.............
1a003158:	000100e0 01000100 01200003 00060120     .......... . ...
1a003168:	01400140 0142000c 00190142 01620162     @.@...B.B...b.b.
1a003178:	01820013 00120182 01a201a2 01c20011     ................
1a003188:	001001c2 01e201e2 0202000f 000e0202     ................
1a003198:	02220222 0223000d 001c0223 08040201     "."...#.#.......
1a0031a8:	0f0f0f03 000000ff                       ........

1a0031b0 <InitClkStates>:
1a0031b0:	00010100 00010909 0001090a 01010701     ................
1a0031c0:	00010902 00010906 0101090c 0001090d     ................
1a0031d0:	0001090e 0001090f 00010910 00010911     ................
1a0031e0:	00010912 00010913 00011114 00011119     ................
1a0031f0:	0001111a 0001111b                       ........
